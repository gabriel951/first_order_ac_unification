("equality" |equality| |equal?_not_ac_get_args| 0 (|equal?_not_ac_get_args-1| NIL 3807563369 NIL ("" (MEASURE-INDUCT "size(t1)" "t1") (("" (SKOLEM 1 "t1") (("" (PROP) (("" (SKEEP) (("" (HIDE -1) (("" (EXPAND "equal?" -1) (("" (LIFT-IF) (("" (PROP) (("1" (GRIND) (("1" (LEMMA "term_const_eta") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) (("2" (LEMMA "term_variable_eta") (("2" (INST? -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (HIDE 1 2 3) (("4" (LEMMA "term_pair_eta") (("4" (INST-CP -1 "t1") (("4" (INST -1 "t2") (("4" (REPLACE -1 2 RL) (("4" (REPLACE -2 2 RL) (("4" (REWRITE "get_args_pair") (("4" (REWRITE "get_args_pair") (("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |delete_TCC6| 0 (|delete_TCC6-1| NIL 3807528173 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |delete_TCC5| 0 (|delete_TCC5-1| NIL 3807528173 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |delete_TCC4| 0 (|delete_TCC4-1| NIL 3807528173 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |delete_TCC3| 0 (|delete_TCC3-1| NIL 3807528173 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |get_ac_from_args_cor| 0 (|get_ac_from_args_cor-1| NIL 3805735173 NIL ("" (MEASURE-INDUCT "length(args)" "args") (("" (SKOLEM 1 "args1") (("" (PROP) (("" (SKEEP) (("" (EXPAND "get_ac_from_args" 2) (("" (EXPAND "get_term_from_args" 2) (("" (LIFT-IF) (("" (ASSERT) (("" (PROP) (("1" (EXPAND "simple_args?" -3) (("1" (PROP) (("1" (EXPAND "simple_term?") (("1" (REWRITE "get_args_ac") (("1" (ASSERT) (("1" (REPLACE -3 1 RL) (("1" (HIDE -2) (("1" (LEMMA "list_cons_eta[term]") (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "get_args_ac") (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |simple_args?_TCC1| 0 (|simple_args?_TCC1-1| NIL 3805735090 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL ((|simple_term?| CONST-DECL "bool" |term_properties| NIL) (|get_args| CONST-DECL "args" |term_properties| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|args| TYPE-EQ-DECL NIL |term_properties| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |dio_matrix_correct?_split_TCC1| 0 (|dio_matrix_correct?_split_TCC1-1| NIL 3807800186 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |prod_TCC4| 0 (|prod_TCC4-1| NIL 3807802208 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |prod_TCC3| 0 (|prod_TCC3-1| NIL 3807802208 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |split_matrix_len1| 0 (|split_matrix_len1-1| NIL 3807805807 NIL ("" (INDUCT "matrix") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) NIL ((|split| CONST-DECL "[list[T], list[T]]" |list_theory| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|split_matrix| DEF-DECL "[list[list[T]], list[list[T]]]" |list_theory| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |split_matrix_nth_TCC2| 0 (|split_matrix_nth_TCC2-1| NIL 3807887388 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |cart_prod_mem_nth| 0 (|cart_prod_mem_nth-1| NIL 3807895312 NIL ("" (SKEEP) (("" (LEMMA "cart_prod_mem") (("" (INST? -1) (("" (ASSERT) (("" (NAME-REPLACE "result" "cartesian_product(lst1, lst2)") (("" (REPLACE -1 1) (("" (HIDE -1) (("" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |get_repeat_lst_mem| 0 (|get_repeat_lst_mem-1| NIL 3807907576 NIL ("" (POSTPONE) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |all_lsts_length?_TCC1| 0 (|all_lsts_length?_TCC1-1| NIL 3804618454 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |get_lst_dio_matrix_mem_nth_TCC3| 0 (|get_lst_dio_matrix_mem_nth_TCC3-1| NIL 3808149955 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808150529 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |temp_lemma| 0 (|temp_lemma-1| NIL 3808157266 NIL ("" (SKEEP) (("" (CASE "n/a1 >= j") (("1" (HIDE -2) (("1" (CASE "n/a1 - j >= 0") (("1" (HIDE -2) (("1" (GRIND) (("1" (CASE "n/a1 - j = 0") (("1" (GRIND) NIL NIL) ("2" (CASE "n/a1 - j > 0") (("1" (GRIND) (("1" (HIDE -2 1) (("1" (CASE " j < n/a1") (("1" (HIDE -2) (("1" (GRIND) (("1" (CASE "a1 * j < n") (("1" (GRIND) NIL NIL) ("2" (GRIND) (("2" (HIDE 2) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("aux_unification" |aux_unification| |dio_matrix2ac_sol_correct_TCC1| 0 (|dio_matrix2ac_sol_correct_TCC1-1| NIL 3805915736 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("aux_unification" |aux_unification| |extract_submatrices_cor_TCC2| 0 (|extract_submatrices_cor_TCC2-1| NIL 3805917506 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("aux_unification" |aux_unification| |extract_submatrices_cor_TCC1| 0 (|extract_submatrices_cor_TCC1-1| NIL 3805917506 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("aux_unification" |aux_unification| |get_all_sublists_dio_cor_TCC2| 0 (|get_all_sublists_dio_cor_TCC2-1| NIL 3808228204 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("aux_unification" |aux_unification| |get_all_sublists_dio_cor_TCC1| 0 (|get_all_sublists_dio_cor_TCC1-1| NIL 3808228204 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808162744 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808162744 ("" (SUBTYPE-TCC) NIL NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808235834 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_args_len| 0 (|select_args_len-1| NIL 3805732280 NIL ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("" (SKOLEM 1 ("lst1")) (("" (PROP) (("" (SKEEP) (("" (EXPAND "select_args" 1 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (PROP) (("1" (EXPAND "select_args" 1 2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "length" 1) (("1" (INST -2 "cdr(lst1)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select_args" 2 2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 "cdr(lst1)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |select_args_pos2| 0 (|select_args_pos2-1| NIL 3804688572 NIL ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("1" (SKOLEM 1 ("lst1")) (("1" (PROP) (("1" (SKEEP) (("1" (EXPAND "select_args" -2) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -2) (("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (MEASURE-INDUCT "length(lst1)" "lst1") (("2" (SKOLEM 1 ("lst1")) (("2" (PROP) (("2" (HIDE -1) (("2" (SKEEP) (("2" (EXPAND "select_args" -1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (> CONST-DECL "bool" |reals| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |select_args_pos2_TCC1| 0 (|select_args_pos2_TCC1-1| NIL 3804688571 NIL ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("" (SKOLEM 1 "lst1") (("" (PROP) (("" (SKEEP) (("" (EXPAND "select_args" -2) (("" (LIFT-IF) (("" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |select_args_pos| 0 (|select_args_pos-1| NIL 3804680626 NIL ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("" (SKOLEM 1 "lst1") (("" (PROP) (("" (SKEEP) (("" (EXPAND "select_args" -2) (("" (LIFT-IF) (("" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (INST -3 "cdr(lst1)") (("2" (PROP) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST -2 "cdr(lst1)") (("2" (PROP) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |select_args_TCC1| 0 (|select_args_TCC1-1| NIL 3803487042 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -6 3) (("" (EXPAND "every" 3) (("" (ASSERT) (("" (TYPEPRED "v(cdr(lst1), cdr(coef1), lst2, coef2)`2") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|strict_well_founded?| CONST-DECL "bool" |orders| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |count_elem_TCC2| 0 (|count_elem_TCC2-1| NIL 3803367839 NIL ("" (TCC)) NIL ((|pos?| DEF-DECL "[bool, nat]" |list_theory| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC1| 0 (|count_elem_TCC1-1| NIL 3803367839 NIL ("" (TCC)) NIL ((|pos?| DEF-DECL "[bool, nat]" |list_theory| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_greater_TCC5| 0 (|select_greater_TCC5-1| NIL 3804618454 NIL ("" (TCC)) NIL ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_greater_TCC4| 0 (|select_greater_TCC4-1| NIL 3804618454 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_greater_TCC3| 0 (|select_greater_TCC3-1| NIL 3804618454 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |get_multiplicity_TCC3| 0 (|get_multiplicity_TCC3-1| NIL 3803477476 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |get_multiplicity_TCC2| 0 (|get_multiplicity_TCC2-1| NIL 3803477476 NIL ("" (TCC)) NIL ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808235834 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))("list" |list_theory| |select_args_len| 0 (|select_args_len-1| NIL 3805732280 ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("" (SKOLEM 1 ("lst1")) (("" (PROP) (("" (SKEEP) (("" (EXPAND "select_args" 1 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (PROP) (("1" (EXPAND "select_args" 1 2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "length" 1) (("1" (INST -2 "cdr(lst1)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select_args" 2 2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 "cdr(lst1)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK))("list" |list_theory| |select_args_pos2| 0 (|select_args_pos2-1| NIL 3804688572 ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("1" (SKOLEM 1 ("lst1")) (("1" (PROP) (("1" (SKEEP) (("1" (EXPAND "select_args" -2) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -2) (("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (MEASURE-INDUCT "length(lst1)" "lst1") (("2" (SKOLEM 1 ("lst1")) (("2" (PROP) (("2" (HIDE -1) (("2" (SKEEP) (("2" (EXPAND "select_args" -1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (> CONST-DECL "bool" |reals| NIL)) SHOSTAK))("list" |list_theory| |select_args_pos2_TCC1| 0 (|select_args_pos2_TCC1-1| NIL 3804688571 ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("" (SKOLEM 1 "lst1") (("" (PROP) (("" (SKEEP) (("" (EXPAND "select_args" -2) (("" (LIFT-IF) (("" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (SPLIT) (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "cdr(lst1)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK))("list" |list_theory| |select_args_pos| 0 (|select_args_pos-1| NIL 3804680626 ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("" (SKOLEM 1 "lst1") (("" (PROP) (("" (SKEEP) (("" (EXPAND "select_args" -2) (("" (LIFT-IF) (("" (SPLIT) (("1" (GRIND) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "member" -2) (("1" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (INST -3 "cdr(lst1)") (("2" (PROP) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST -2 "cdr(lst1)") (("2" (PROP) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (> CONST-DECL "bool" |reals| NIL) (|select_args| DEF-DECL "[list[T], list[nat]]" |list_theory| NIL) (|member| DEF-DECL "bool" |list_props| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK))("list" |list_theory| |select_greater_TCC5| 0 (|select_greater_TCC5-1| NIL 3804618454 ("" (TCC)) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_greater_TCC4| 0 (|select_greater_TCC4-1| NIL 3804618454 ("" (TCC)) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_greater_TCC3| 0 (|select_greater_TCC3-1| NIL 3804618454 ("" (TCC)) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_args_TCC1| 0 (|select_args_TCC1-1| NIL 3803487042 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -6 3) (("" (EXPAND "every" 3) (("" (ASSERT) (("" (TYPEPRED "v(cdr(lst1), cdr(coef1), lst2, coef2)`2") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|strict_well_founded?| CONST-DECL "bool" |orders| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK))("list" |list_theory| |get_multiplicity_TCC3| 0 (|get_multiplicity_TCC3-1| NIL 3803477476 ("" (TCC)) ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |get_multiplicity_TCC2| 0 (|get_multiplicity_TCC2-1| NIL 3803477476 ("" (TCC)) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("equality" |equality| |perm_remove_common_get_common| 0 (|perm_remove_common_get_common-1| NIL 3808339569 NIL ("" (MEASURE-INDUCT "length(args1)" "args1") (("" (SKOLEM 1 ("args1")) (("" (PROP) (("" (SKEEP) (("" (EXPAND "perm?" 1 1) (("" (PROP) (("1" (REWRITE "null_append") (("1" (GRIND) NIL NIL)) NIL) ("2" (INST 2 "0" "_") (("1" (EXPAND "nth" 2 1) (("1" (EXPAND "remove" 2 1) (("1" (ASSERT) (("1" (CASE "member(car(args1), remove_common(args1, args2, equal?))") (("1" (HIDE -2) (("1" (INST 2 "0") (("1" (PROP) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |get_common_TCC5| 0 (|get_common_TCC5-1| NIL 3808344388 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_common_TCC4| 0 (|get_common_TCC4-1| NIL 3808344388 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_common_TCC3| 0 (|get_common_TCC3-1| NIL 3808344388 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_common_TCC2| 0 (|get_common_TCC2-1| NIL 3808344388 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_common_TCC1| 0 (|get_common_TCC1-1| NIL 3808344388 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808406085 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |perm_get_common| 0 (|perm_get_common-1| NIL 3808407164 NIL ("" (MEASURE-INDUCT "length(args1)" "args1") (("" (SKOLEM 1 ("args1")) (("" (PROP) (("" (SKEEP) (("" (EXPAND "get_common" 1 1) (("" (LIFT-IF) (("" (PROP) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808406897 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_common_TCC2| 0 (|remove_common_TCC2-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_common_TCC1| 0 (|remove_common_TCC1-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_TCC2| 0 (|remove_TCC2-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |split_matrix_TCC1| 0 (|split_matrix_TCC1-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pareate_TCC2| 0 (|pareate_TCC2-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pareate_TCC1| 0 (|pareate_TCC1-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_TCC2| 0 (|count_TCC2-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_TCC1| 0 (|count_TCC1-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_all_sublists_TCC1| 0 (|get_all_sublists_TCC1-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |matrix?_TCC2| 0 (|matrix?_TCC2-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_greater_TCC5| 0 (|select_greater_TCC5-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_greater_TCC4| 0 (|select_greater_TCC4-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_greater_TCC3| 0 (|select_greater_TCC3-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC3| 0 (|put_in_head_TCC3-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC2| 0 (|put_in_head_TCC2-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC1| 0 (|put_in_head_TCC1-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_multiplicity_TCC3| 0 (|get_multiplicity_TCC3-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_multiplicity_TCC2| 0 (|get_multiplicity_TCC2-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC5| 0 (|count_elem_TCC5-1| NIL 3808406774 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC4| 0 (|count_elem_TCC4-1| NIL 3808406774 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC3| 0 (|count_elem_TCC3-1| NIL 3808343803 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808413596 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808422294 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808496129 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_mem_TCC1| 0 (|put_in_head_mem_TCC1-1| NIL 3808515789 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_multiplicity_TCC1| 0 (|get_multiplicity_TCC1-1| NIL 3803477476 NIL ("" (TCC)) NIL ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |cdr_append_TCC2| 0 (|cdr_append_TCC2-1| NIL 3808585526 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |perm?_get_common_sym_TCC1| 0 (|perm?_get_common_sym_TCC1-1| NIL 3808518211 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_mult_ind| 0 (|get_lst_mult_ind-1| NIL 3808579207 NIL ("" (INDUCT "lst" 1) (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL) ("2" (SKOLEM 1 ("hd" "tail")) (("2" (PROP) (("2" (SKEEP) (("2" (EXPAND "nth" 1 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -1 1) (("1" (EXPAND "sum" 1) (("1" (EXPAND "get_lst_mult" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (GRIND) NIL NIL) ("2" (LEMMA "nth_append") (("2" (INST? -1) (("2" (PROP) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -2 2) (("1" (HIDE -2) (("1" (EXPAND "get_repeat_lst" 2) (("1" (EXPAND "nth" -6) (("1" (ASSERT) (("1" (ASSERT) (("1" (EXPAND "nth" 2) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nth" -6) (("2" (ASSERT) (("2" (EXPAND "get_repeat_lst" 1) (("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nth" -5) (("2" (ASSERT) (("2" (EXPAND "get_repeat_lst" 1) (("2" (EXPAND "length" 1 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nth" -4) (("2" (ASSERT) (("2" (EXPAND "sum" 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (EXPAND "get_lst_mult" 2) (("2" (ASSERT) (("2" (LEMMA "nth_append") (("2" (HIDE -2) (("2" (INST? -1) (("2" (PROP) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -2 2) (("1" (REWRITE "get_repeat_lst_len") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (REPLACE -1 2) (("2" (HIDE -1) (("2" (REWRITE "get_repeat_lst_len") (("2" (ASSERT) (("2" (REVEAL -3) (("2" (INST? -1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "get_repeat_lst_len") (("2" (ASSERT) (("2" (LEMMA "get_lst_mult_ind_TCC1") (("2" (INST? -1) (("2" (INST -1 "tail") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (LEMMA "get_lst_mult_ind_TCC1") (("3" (INST? -1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|get_lst_mult| DEF-DECL "list[T]" |list_theory| NIL) (|sum| DEF-DECL "nat" |list_theory| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nth_append| FORMULA-DECL NIL |list_theory| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|get_repeat_lst| DEF-DECL "list[T]" |list_theory| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|get_lst_mult_ind_TCC1| SUBTYPE-TCC NIL |list_theory| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|get_repeat_lst_len| FORMULA-DECL NIL |list_theory| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |get_lst_mult_ind_TCC1| 0 (|get_lst_mult_ind_TCC1-1| NIL 3808579200 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |perm?_get_common_TCC2| 0 (|perm?_get_common_TCC2-1| NIL 3808516500 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_cons| 0 (|count_cons-1| NIL 3808603305 NIL ("" (INDUCT "lst1") (("1" (GRIND) NIL NIL) ("2" (SKOLEM 1 ("hd" "tail")) (("2" (PROP) (("2" (SKEEP) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) NIL (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|equiv| TYPE-EQ-DECL NIL |list_theory| NIL) (|equivalence?| CONST-DECL "bool" |relations| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |count_apppend| 0 (|count_apppend-1| NIL 3808606679 NIL ("" (INDUCT "lst1") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) NIL ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|reflexive?| CONST-DECL "bool" |relations| NIL) (|symmetric?| CONST-DECL "bool" |relations| NIL) (|transitive?| CONST-DECL "bool" |relations| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|count| DEF-DECL "nat" |list_theory| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|equiv| TYPE-EQ-DECL NIL |list_theory| NIL) (|equivalence?| CONST-DECL "bool" |relations| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)) NIL NIL NIL SHOSTAK))