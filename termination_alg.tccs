%% TCCs associated with theory termination_alg
%% This file was automatically generated by PVS, please **do not modify** by hand.
termination_alg_TCCS: THEORY BEGIN

% Subtype TCC generated (at line 45, column 4) for
	% {X |
	%    EXISTS t, s:
	%           dif_func?(t, s) AND im_under?(X, t) AND im_under?(X, s)
	%       AND member(t, subterms(unif_prb))
	%       AND member(s, subterms(unif_prb))}
	% expected type  finite_set[variable]
	  % untried
	vars_under2more_TCC1: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    is_finite[variable]
	        ({X |
	            EXISTS t, s:
	                   dif_func?(t, s) AND im_under?(X, t) AND im_under?(X, s)
	               AND member[term[constant, variable, f_symbol, ac_symbol]]
	                       (t, subterms(unif_prb))
	               AND member[term[constant, variable, f_symbol, ac_symbol]]
	                       (s, subterms(unif_prb))})
	
	% Subtype TCC generated (at line 49, column 4) for
	% {X |
	%    EXISTS t, s:
	%           dif_func?(t, s) AND im_under?(X, t) AND im_under?(X, s)
	%       AND member(t, subterms(lst_unif_prb))
	%       AND member(s, subterms(lst_unif_prb))}
	% expected type  finite_set[variable]
	  % untried
	vars_under2more_TCC2: OBLIGATION
	FORALL (lst_unif_prb: list[unif_prb]):
	    is_finite[variable]
	        ({X |
	            EXISTS t, s:
	                   dif_func?(t, s) AND im_under?(X, t) AND im_under?(X, s)
	               AND member[term[constant, variable, f_symbol, ac_symbol]]
	                       (t, subterms(lst_unif_prb))
	               AND member[term[constant, variable, f_symbol, ac_symbol]]
	                       (s, subterms(lst_unif_prb))})
	
	% Termination TCC generated (at line 58, column 21) for  vars_not_ac(t1)
	  % untried
	vars_not_ac_TCC1: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          t1, t2: term[constant, variable, f_symbol, ac_symbol]):
	    t = pair(t1, t2) IMPLIES size(t1) < size(t)
	
	% Termination TCC generated (at line 58, column 38) for  vars_not_ac(t2)
	  % untried
	vars_not_ac_TCC2: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          t1, t2: term[constant, variable, f_symbol, ac_symbol]):
	    t = pair(t1, t2) IMPLIES size(t2) < size(t)
	
	% Termination TCC generated (at line 59, column 16) for  vars_not_ac(arg)
	  % untried
	vars_not_ac_TCC3: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol], sym: f_symbol,
	          arg: term[constant, variable, f_symbol, ac_symbol]):
	    t = app(sym, arg) IMPLIES size(arg) < size(t)
	
	% Termination-subtype TCC generated (at line 60, column 51) for
	% not_var_args(sym)(t)
	% expected type  [{z: term[constant, variable, f_symbol, ac_symbol] |
	%     size(z) < size(t)} ->
	%    finite_set[variable]]
	  % untried
	vars_not_ac_TCC4: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol], sym: ac_symbol,
	          arg: term[constant, variable, f_symbol, ac_symbol]):
	    t = ac_app(sym, arg) IMPLIES
	     every[term[number, number, f_symbol, ac_symbol]]
	         (LAMBDA (x1: term[number, number, f_symbol, ac_symbol]):
	            every[number, number, f_symbol, ac_symbol]
	                (LAMBDA (x: number):
	                        number_field_pred(x) AND real_pred(x)
	                    AND rational_pred(x) AND integer_pred(x) AND (x >= 0),
	                 LAMBDA (x: number):
	                        number_field_pred(x) AND real_pred(x)
	                    AND rational_pred(x) AND integer_pred(x) AND (x >= 0),
	                 LAMBDA (x: f_symbol): TRUE, LAMBDA (x: ac_symbol): TRUE)
	                (x1)
	             AND size(x1) < size(t))
	         (not_var_args(sym)(t))
	
	% The termination TCC (at line 53, column 0) in decl nil for
	% term generated from vars_not_ac  vars_not_ac(x)
	% was not generated because it simplifies to TRUE.
	% The termination-subtype TCC (at line 60, column 51) in decl nil for
	% term generated from vars_not_ac
	%  not_var_args(sym)(t)
	% expected type  [{z: term[constant, variable, f_symbol, ac_symbol] |
	%     size(z) < size(t)} ->
	%    finite_set[variable]]
	% Subtype TCC generated (at line 66, column 33) for  fin_set_t
	% expected type  (nonempty?
	%      [term[constant, variable, f_symbol, ac_symbol]])
	  % untried
	vars_not_ac_TCC5: OBLIGATION
	FORALL (fin_set_t:
	            finite_set[term[constant, variable, f_symbol, ac_symbol]]):
	    NOT empty?(fin_set_t) IMPLIES
	     nonempty?[term[constant, variable, f_symbol, ac_symbol]](fin_set_t)
	
	% Termination TCC generated (at line 66, column 46) for
	% vars_not_ac(rest(fin_set_t))
	  % untried
	vars_not_ac_TCC6: OBLIGATION
	FORALL (fin_set_t:
	            finite_set[term[constant, variable, f_symbol, ac_symbol]]):
	    NOT empty?(fin_set_t) IMPLIES
	     card[term[constant, variable, f_symbol, ac_symbol]]
	         (rest[term[constant, variable, f_symbol, ac_symbol]](fin_set_t))
	      < card[term[constant, variable, f_symbol, ac_symbol]](fin_set_t)
	
	% Subtype TCC generated (at line 73, column 44) for  args
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % untried
	vars_not_ac_TCC7: OBLIGATION
	FORALL (args: args):
	    NOT null?(args) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = car(args) IMPLIES
	        cons?[term[constant, variable, f_symbol, ac_symbol]](args)
	
	% Termination TCC generated (at line 73, column 28) for
	% vars_not_ac(cdr(args))
	  % untried
	vars_not_ac_TCC8: OBLIGATION
	FORALL (args: args):
	    NOT null?(args) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = car(args) IMPLIES
	        <<[term[constant, variable, f_symbol, ac_symbol]]
	            (cdr[term[constant, variable, f_symbol, ac_symbol]](args), args)
	
	% Subtype TCC generated (at line 72, column 21) for  args
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % untried
	vars_not_ac_TCC9: OBLIGATION
	FORALL (args: args):
	    NOT null?(args) IMPLIES
	     cons?[term[constant, variable, f_symbol, ac_symbol]](args)
	
	% Subtype TCC generated (at line 82, column 52) for  unif_prb
	% expected type  (cons?[unif_pair])
	  % untried
	vars_not_ac_TCC10: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair):
	       unif_pair = car(unif_prb) IMPLIES cons?[unif_pair](unif_prb)
	
	% Termination TCC generated (at line 82, column 36) for
	% vars_not_ac(cdr(unif_prb))
	  % untried
	vars_not_ac_TCC11: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair):
	       unif_pair = car(unif_prb) IMPLIES
	        <<[unif_pair](cdr[unif_pair](unif_prb), unif_prb)
	
	% Subtype TCC generated (at line 81, column 29) for  unif_prb
	% expected type  (cons?[unif_pair])
	  % untried
	vars_not_ac_TCC12: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES cons?[unif_pair](unif_prb)
	
	% Subtype TCC generated (at line 89, column 51) for  lst_unif_prb
	% expected type  (cons?[unif_prb])
	  % untried
	vars_not_ac_TCC13: OBLIGATION
	FORALL (lst_unif_prb: list[unif_prb]):
	    NOT null?(lst_unif_prb) IMPLIES
	     FORALL (unif_prb: unif_prb):
	       unif_prb = car(lst_unif_prb) IMPLIES cons?[unif_prb](lst_unif_prb)
	
	% Termination TCC generated (at line 89, column 35) for
	% vars_not_ac(cdr(lst_unif_prb))
	  % untried
	vars_not_ac_TCC14: OBLIGATION
	FORALL (lst_unif_prb: list[unif_prb]):
	    NOT null?(lst_unif_prb) IMPLIES
	     FORALL (unif_prb: unif_prb):
	       unif_prb = car(lst_unif_prb) IMPLIES
	        <<[unif_prb](cdr[unif_prb](lst_unif_prb), lst_unif_prb)
	
	% Subtype TCC generated (at line 88, column 28) for  lst_unif_prb
	% expected type  (cons?[unif_prb])
	  % untried
	vars_not_ac_TCC15: OBLIGATION
	FORALL (lst_unif_prb: list[unif_prb]):
	    NOT null?(lst_unif_prb) IMPLIES cons?[unif_prb](lst_unif_prb)
	
	% Subtype TCC generated (at line 97, column 42) for  sigma
	% expected type  (cons?[basic_sub])
	  % untried
	mimic_var_aux_TCC1: OBLIGATION
	FORALL (sigma: sub, X: variable):
	    NOT null?(sigma) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = subs(car(sigma), variable(X)) AND var?(t) IMPLIES
	        cons?[basic_sub](sigma)
	
	% Termination TCC generated (at line 97, column 24) for
	% mimic_var_aux(cdr(sigma))
	  % untried
	mimic_var_aux_TCC2: OBLIGATION
	FORALL (sigma: sub, X: variable):
	    NOT null?(sigma) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = subs(car(sigma), variable(X)) AND var?(t) IMPLIES
	        <<[basic_sub](cdr[basic_sub](sigma), sigma)
	
	% Subtype TCC generated (at line 98, column 24) for  sigma
	% expected type  (cons?[basic_sub])
	  % untried
	mimic_var_aux_TCC3: OBLIGATION
	FORALL (sigma: sub, X: variable):
	    NOT null?(sigma) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = subs(car(sigma), variable(X)) AND NOT var?(t) IMPLIES
	        cons?[basic_sub](sigma)
	
	% Termination TCC generated (at line 98, column 6) for
	% mimic_var_aux(cdr(sigma))
	  % untried
	mimic_var_aux_TCC4: OBLIGATION
	FORALL (sigma: sub, X: variable):
	    NOT null?(sigma) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = subs(car(sigma), variable(X)) AND NOT var?(t) IMPLIES
	        <<[basic_sub](cdr[basic_sub](sigma), sigma)
	
	% Subtype TCC generated (at line 96, column 25) for  sigma
	% expected type  (cons?[basic_sub])
	  % untried
	mimic_var_aux_TCC5: OBLIGATION
	FORALL (sigma: sub): NOT null?(sigma) IMPLIES cons?[basic_sub](sigma)
	
	% Termination TCC generated (at line 110, column 24) for
	% mimic_var(cdr(sigma))
	  % untried
	mimic_var_TCC1: OBLIGATION
	FORALL (sigma: sub):
	    NOT null?(sigma) IMPLIES
	     FORALL (Y: variable, t: term[constant, variable, f_symbol, ac_symbol]):
	       (Y = car(sigma)`1 AND t = car(sigma)`2) AND var?(t) IMPLIES
	        <<[basic_sub](cdr[basic_sub](sigma), sigma)
	
	% Termination TCC generated (at line 111, column 7) for
	% mimic_var(cdr(sigma))
	  % untried
	mimic_var_TCC2: OBLIGATION
	FORALL (sigma: sub,
	          v: [{z: sub | <<[basic_sub](z, sigma)} -> [variable -> variable]],
	          X: variable):
	    NOT null?(sigma) IMPLIES
	     FORALL (Y: variable, t: term[constant, variable, f_symbol, ac_symbol]):
	       (Y = car(sigma)`1 AND t = car(sigma)`2) AND
	        NOT (var?(t) AND v(cdr(sigma))(X) = Y)
	        IMPLIES <<[basic_sub](cdr[basic_sub](sigma), sigma)
	
	% The subtype TCC (at line 110, column 38) in decl nil for
	% term generated from mimic_var  sigma
	% expected type  (cons?[basic_sub])
	% The subtype TCC (at line 111, column 21) in decl nil for
	% term generated from mimic_var  sigma
	% expected type  (cons?[basic_sub])
	% The subtype TCC (at line 109, column 26) in decl nil for
	% term generated from mimic_var  sigma
	% expected type  (cons?[basic_sub])
	% Subtype TCC generated (at line 118, column 4) for
	% {X | member(X, vars_not_ac(t)) AND NOT var?(t)}
	% expected type  finite_set[variable]
	  % untried
	vars_not_ac_var_TCC1: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	    is_finite[variable]
	        ({X |
	            member[variable](X, vars_not_ac(t)) AND
	             NOT var?[constant, variable, f_symbol, ac_symbol](t)})
	
	% The subtype TCC (at line 110, column 38) in decl nil for
	 % term generated from mimic_var  sigma
	    % expected type  (cons?[basic_sub])
	  % is subsumed by mimic_var_aux_TCC5
	% The subtype TCC (at line 111, column 21) in decl nil for
	 % term generated from mimic_var  sigma
	    % expected type  (cons?[basic_sub])
	  % is subsumed by mimic_var_aux_TCC5
	% The subtype TCC (at line 109, column 26) in decl nil for
	 % term generated from mimic_var  sigma
	    % expected type  (cons?[basic_sub])
	  % is subsumed by mimic_var_aux_TCC5
	
	% The subtype TCC (at line 122, column 37) in decl nil for
	% term generated from vars_not_ac_var  fin_set_t
	% expected type  (nonempty?
	%      [term[constant, variable, f_symbol, ac_symbol]])
	% The termination TCC (at line 122, column 50) in decl nil for
	% term generated from vars_not_ac_var
	%  vars_not_ac_var(rest(fin_set_t))
	% The subtype TCC (at line 129, column 52) in decl nil for
	% term generated from vars_not_ac_var  args
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	% The termination TCC (at line 129, column 32) in decl nil for
	% term generated from vars_not_ac_var
	%  vars_not_ac_var(cdr(args))
	% The subtype TCC (at line 128, column 21) in decl nil for
	% term generated from vars_not_ac_var  args
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	% The subtype TCC (at line 138, column 60) in decl nil for
	% term generated from vars_not_ac_var  unif_prb
	% expected type  (cons?[unif_pair])
	% The termination TCC (at line 138, column 40) in decl nil for
	% term generated from vars_not_ac_var
	%  vars_not_ac_var(cdr(unif_prb))
	% The subtype TCC (at line 137, column 29) in decl nil for
	% term generated from vars_not_ac_var  unif_prb
	% expected type  (cons?[unif_pair])
	% The subtype TCC (at line 145, column 59) in decl nil for
	% term generated from vars_not_ac_var  lst_unif_prb
	% expected type  (cons?[unif_prb])
	% The termination TCC (at line 145, column 39) in decl nil for
	% term generated from vars_not_ac_var
	%  vars_not_ac_var(cdr(lst_unif_prb))
	% The subtype TCC (at line 144, column 28) in decl nil for
	% term generated from vars_not_ac_var  lst_unif_prb
	% expected type  (cons?[unif_prb])
	% Subtype TCC generated (at line 150, column 43) for
	% {s | member(s, prop_subterms(t)) AND NOT var?(s)}
	% expected type  finite_set
	%     [term[constant, variable, f_symbol, ac_symbol]]
	  % untried
	admissible_subterms_TCC1: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	    is_finite[term[constant, variable, f_symbol, ac_symbol]]
	        ({s |
	            member[term[constant, variable, f_symbol, ac_symbol]]
	                (s, prop_subterms(t))
	             AND NOT var?[constant, variable, f_symbol, ac_symbol](s)})
	
	% The subtype TCC (at line 122, column 37) in decl nil for
	 % term generated from vars_not_ac_var  fin_set_t
	    % expected type  (nonempty?
	                   %      [term[constant, variable, f_symbol, ac_symbol]])
	  % is subsumed by vars_not_ac_TCC5
	% The termination TCC (at line 122, column 50) in decl nil for
	 % term generated from vars_not_ac_var
	    %  vars_not_ac_var(rest(fin_set_t))
	  % is subsumed by vars_not_ac_TCC6
	% The subtype TCC (at line 129, column 52) in decl nil for
	 % term generated from vars_not_ac_var  args
	    % expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % is subsumed by vars_not_ac_TCC9
	% The termination TCC (at line 129, column 32) in decl nil for
	 % term generated from vars_not_ac_var
	    %  vars_not_ac_var(cdr(args))
	  % is subsumed by vars_not_ac_TCC8
	% The subtype TCC (at line 128, column 21) in decl nil for
	 % term generated from vars_not_ac_var  args
	    % expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % is subsumed by vars_not_ac_TCC9
	% The subtype TCC (at line 138, column 60) in decl nil for
	 % term generated from vars_not_ac_var  unif_prb
	    % expected type  (cons?[unif_pair])
	  % is subsumed by vars_not_ac_TCC12
	% The termination TCC (at line 138, column 40) in decl nil for
	 % term generated from vars_not_ac_var
	    %  vars_not_ac_var(cdr(unif_prb))
	  % is subsumed by vars_not_ac_TCC11
	% The subtype TCC (at line 137, column 29) in decl nil for
	 % term generated from vars_not_ac_var  unif_prb
	    % expected type  (cons?[unif_pair])
	  % is subsumed by vars_not_ac_TCC12
	% The subtype TCC (at line 145, column 59) in decl nil for
	 % term generated from vars_not_ac_var  lst_unif_prb
	    % expected type  (cons?[unif_prb])
	  % is subsumed by vars_not_ac_TCC15
	% The termination TCC (at line 145, column 39) in decl nil for
	 % term generated from vars_not_ac_var
	    %  vars_not_ac_var(cdr(lst_unif_prb))
	  % is subsumed by vars_not_ac_TCC14
	% The subtype TCC (at line 144, column 28) in decl nil for
	 % term generated from vars_not_ac_var  lst_unif_prb
	    % expected type  (cons?[unif_prb])
	  % is subsumed by vars_not_ac_TCC15
	
	% Subtype TCC generated (at line 153, column 4) for
	% {s |
	%    EXISTS t:
	%      member(t, subterms(unif_pair)) AND
	%       member(s, admissible_subterms(t))}
	% expected type  finite_set
	%     [term[constant, variable, f_symbol, ac_symbol]]
	  % untried
	admissible_subterms_TCC2: OBLIGATION
	FORALL (unif_pair: unif_pair):
	    is_finite[term[constant, variable, f_symbol, ac_symbol]]
	        ({s |
	            EXISTS t:
	              member[term[constant, variable, f_symbol, ac_symbol]]
	                  (t, subterms(unif_pair))
	               AND
	               member[term[constant, variable, f_symbol, ac_symbol]]
	                   (s, admissible_subterms(t))})
	
	% Subtype TCC generated (at line 156, column 4) for
	% {s |
	%    EXISTS t:
	%      member(t, subterms(unif_prb)) AND
	%       member(s, admissible_subterms(t))}
	% expected type  finite_set
	%     [term[constant, variable, f_symbol, ac_symbol]]
	  % untried
	admissible_subterms_TCC3: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    is_finite[term[constant, variable, f_symbol, ac_symbol]]
	        ({s |
	            EXISTS t:
	              member[term[constant, variable, f_symbol, ac_symbol]]
	                  (t, subterms(unif_prb))
	               AND
	               member[term[constant, variable, f_symbol, ac_symbol]]
	                   (s, admissible_subterms(t))})

END termination_alg_TCCS