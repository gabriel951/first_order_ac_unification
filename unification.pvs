%
% Authors:
%		Gabriel Ferreira Silva (*)
% 		Mauricio Ayala-Rincón (*)
% 		Daniele Nantes Sobrinho (*)
% 		Maribel Fernandez (**)
%		(*) - University of Brasília			(**) - King's College London
%

% File: unification.pvs
% Description: Definition of unification problem.. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

unification: THEORY
BEGIN
	IMPORTING substitution

sigma, sigma1: VAR Sub
vars2avoid: VAR set[Variable]

% a unification pair (t, s) is composed of terms t and s that must be unified
Unif_pair: TYPE = [Term, Term]
unif_pair: VAR Unif_pair

% a unification problem is a list of unification pairs
Unif_prb: TYPE = list[Unif_pair]
unif_prb: VAR Unif_prb

% check if sigma unifies an unification pair
unifies?(sigma, unif_pair): bool = 
    LET (t, s) = unif_pair IN equal?(subs(sigma, t), subs(sigma, s))

% check if sigma unifies an unification problem
unifies?(sigma, unif_prb): RECURSIVE bool =
    IF null?(unif_prb) THEN TRUE 
    ELSE LET unif_pair = car(unif_prb) IN
         unifies?(sigma, unif_pair) AND unifies?(sigma, cdr(unif_prb))
    ENDIF
MEASURE unif_prb BY << 

END unification 
