% Authors:
%		Gabriel Ferreira Silva (*)
% 		Mauricio Ayala-Rincón (*)
% 		Daniele Nantes Sobrinho (*)
% 		Maribel Fernandez (**)
%		(*) - University of Brasília			(**) - King's College London
%

% File: Equality.pvs
% Description: Definition of equality between term and related lemmas
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

equality: THEORY
BEGIN
	IMPORTING term_properties

t, s: VAR term
args1, args2, args3: VAR args
sym: VAR string

i: VAR nat
coef: VAR list[nat]


equal?(t, s): RECURSIVE bool =
    CASES t OF
        const(a): s = const(a),

	variable(X): s = variable(X), 
	
	unit: s = unit, 
	
	pair(t1, t2): pair?(s) AND equal?(t1, term1(s)) AND equal?(t2, term2(s)),

	app(sym, arg): app?(s) AND sym = f_sym(s) AND equal?(arg, arg(s)),

	ac_app(sym, arg): ac_app?(s) AND sym = ac_sym(s) AND EXISTS i:
	   equal?(select(sym, arg)(1), select(sym, arg)(i)) AND 
	   equal?(delete(sym, arg)(1), delete(sym, arg)(i))
    ENDCASES
MEASURE size(t) 

% test if two list of arguments are equal
equal?(args1, args2): RECURSIVE bool =
    IF null?(args1) THEN null?(args2)
    ELSE LET t = car(args1), s = car(args2) IN
    	 equal?(t, s) AND equal?(cdr(args1), cdr(args2))
    ENDIF
MEASURE args1 BY << 

% test if args1 and args2 are permutations of each other, where the notion of equality is
% given by equal?
perm?(args1, args2): bool = TRUE
     

%%%%%%%%%%%%%%% Theorems
equal?_get_lst_mult: CONJECTURE
    equal?(args1, args2) IMPLIES
    equal?(get_lst_mult(args1, coef), get_lst_mult(args2, coef))

ac_perm_args: CONJECTURE
    are_ac?(t, s, sym) AND equal?(t, s) IMPLIES perm?(get_args(sym)(t), get_args(sym)(s))
   
perm_args_ac: CONJECTURE
    perm?(get_args(sym)(t), get_args(sym)(s)) AND are_ac?(t, s, sym) IMPLIES equal?(t, s) 

perm?_trans: CONJECTURE
    perm?(args1, args2) AND perm?(args2, args3) IMPLIES perm?(args1, args3)

END equality
