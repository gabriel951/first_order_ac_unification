(|unification|
 (|unifies?_TCC1| 0
  (|unifies?_TCC1-1| NIL 3805034332 ("" (SUBTYPE-TCC) NIL NIL)
   ((|unifies?| CONST-DECL "bool" |unification| NIL)) NIL))
 (|unifies?_TCC2| 0
  (|unifies?_TCC2-1| NIL 3805034332 ("" (TERMINATION-TCC) NIL NIL)
   ((|unifies?| CONST-DECL "bool" |unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL))
   NIL))
 (|unifies?_TCC3| 0
  (|unifies?_TCC3-1| NIL 3805034332 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|unifies?_append| 0
  (|unifies?_append-1| NIL 3805641015
   ("" (MEASURE-INDUCT "length(unif_prb1)" "unif_prb1")
    (("" (SKOLEM 1 "lst1")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "unifies?" 1 2)
            (("" (LIFT-IF)
              (("" (SPLIT)
                (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (LEMMA "list_cons_eta[unif_pair]")
                    (("2" (INST? -1)
                      (("1" (EXPAND "append" 2 1)
                        (("1" (ASSERT)
                          (("1" (EXPAND "unifies?" 2 1)
                            (("1" (HIDE -1)
                              (("1" (INST -1 "cdr(lst1)")
                                (("1" (PROP)
                                  (("1" (INST -1 "sigma" "unif_prb2")
                                    (("1" (GRIND) NIL NIL)) NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|unifies?| DEF-DECL "bool" |unification| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|unif_pair| TYPE-EQ-DECL NIL |unification| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|unif_prb| TYPE-EQ-DECL NIL |unification| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list_cons_eta| FORMULA-DECL NIL |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lst1| SKOLEM-CONST-DECL "list[unif_pair]" |unification| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   SHOSTAK))
 (|unifies?_pareate| 0
  (|unifies?_pareate-1| NIL 3807735593
   ("" (INDUCT "args1")
    (("1" (SKEEP)
      (("1" (EXPAND "pareate" -2)
        (("1" (CASE "args2 = null")
          (("1" (GRIND) NIL NIL) ("2" (HIDE 2 -2) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "pareate" -3)
            (("2" (LIFT-IF)
              (("2" (PROP)
                (("1" (HIDE -3 1) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (EXPAND "unifies?" -1)
                  (("2" (FLATTEN)
                    (("2" (EXPAND "length" -4 2)
                      (("2" (ASSERT)
                        (("2" (EXPAND "subs" 2 2)
                          (("2" (EXPAND "subs" 2 1)
                            (("2" (EXPAND "equal?" 2)
                              (("2" (EXPAND "length" -4 1)
                                (("2" (INST? -3) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|unifies?| CONST-DECL "bool" |unification| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|equal?| DEF-DECL "bool" |equality| NIL)
    (|pareate| DEF-DECL "list[[T, T]]" |list_theory| NIL)
    (|unifies?| DEF-DECL "bool" |unification| NIL)
    (|unif_prb| TYPE-EQ-DECL NIL |unification| NIL)
    (|unif_pair| TYPE-EQ-DECL NIL |unification| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK)))

