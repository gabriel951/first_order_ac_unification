(|term|)
(|term_properties|
 (|size_TCC1| 0
  (|size_TCC1-1| NIL 3805199221 ("" (TCC))
   ((|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|size_TCC2| 0
  (|size_TCC2-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|size_TCC3| 0
  (|size_TCC3-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|size_TCC4| 0
  (|size_TCC4-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|size_TCC5| 0
  (|size_TCC5-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|num_arg_TCC1| 0
  (|num_arg_TCC1-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|num_arg_TCC2| 0
  (|num_arg_TCC2-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|num_arg_TCC3| 0
  (|num_arg_TCC3-1| NIL 3805199221 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|select_TCC1| 0
  (|select_TCC1-1| NIL 3805989807 ("" (SUBTYPE-TCC) NIL NIL)
   ((|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|delete_TCC1| 0
  (|delete_TCC1-1| NIL 3807528173 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|delete_TCC2| 0
  (|delete_TCC2-1| NIL 3807528173 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|delete_TCC3| 0
  (|delete_TCC3-1| NIL 3807528173 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|delete_TCC4| 0
  (|delete_TCC4-1| NIL 3807528173 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|delete_TCC5| 0
  (|delete_TCC5-1| NIL 3807528173 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|delete_TCC6| 0
  (|delete_TCC6-1| NIL 3807528173 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|nice_ind?_TCC1| 0
  (|nice_ind?_TCC1-1| NIL 3806608110 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|nice_ind?_TCC2| 0
  (|nice_ind?_TCC2-1| NIL 3806608110 ("" (TERMINATION-TCC) NIL NIL)
   ((|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_term_from_args_TCC1| 0
  (|get_term_from_args_TCC1-1| NIL 3804712586 ("" (TCC))
   ((|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simple_args?_TCC1| 0
  (|simple_args?_TCC1-1| NIL 3805735090 ("" (SUBTYPE-TCC) NIL NIL)
   ((|simple_term?| CONST-DECL "bool" |term_properties| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|size_ge1| 0
  (|size_ge1-1| NIL 3806329573
   ("" (INDUCT "t")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
     ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL))
   SHOSTAK))
 (|num_arg_ge1| 0
  (|num_arg_ge1-1| NIL 3805992135
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 ("x"))
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "num_arg" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (INST -2 "term1(x)") (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (INST -3 "ac_arg(x)") (("2" (GRIND) NIL NIL)) NIL)
                 ("3" (ASSERT) NIL NIL) ("4" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|num_arg_ge1_type_t| 0
  (|num_arg_ge1_type_t-1| NIL 3806331029 ("" (GRIND) NIL NIL)
   ((|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|num_arg_not_pair_ac| 0
  (|num_arg_not_pair_ac-1| NIL 3807114091 ("" (GRIND) NIL NIL)
   ((|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|select_num_arg| 0
  (|select_num_arg-1| NIL 3806358731
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "select" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (INST -3 "term1(t)")
                  (("1" (PROP)
                    (("1" (INST -1 "f" "i") NIL NIL) ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (INST -2 "term2(t)")
                  (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (INST -3 "ac_arg(t)")
                  (("3" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("4" (LEMMA "num_arg_ge1_type_t")
                  (("4" (INST? -1)
                    (("4" (LEMMA "num_arg_ge1")
                      (("4" (INST? -1) (("4" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("5" (EXPAND "num_arg" 2) (("5" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|num_arg_ge1_type_t| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|select_le1| 0
  (|select_le1-1| NIL 3806225634
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "select" 1 2)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (EXPAND "select" 1 1)
                  (("1" (ASSERT)
                    (("1" (INST -3 "term1(t)")
                      (("1" (PROP)
                        (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE-ALL-BUT 1)
                  (("2" (LEMMA "num_arg_ge1")
                    (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("3" (EXPAND "select" 1 1)
                  (("3" (ASSERT)
                    (("3" (INST -3 "ac_arg(t)")
                      (("3" (PROP)
                        (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("4" (EXPAND "select" 2 1) (("4" (ASSERT) NIL NIL)) NIL)
                 ("5" (EXPAND "select" 2 1) (("5" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|select_ge_num_arg| 0
  (|select_ge_num_arg-1| NIL 3806335778
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (NAME-REPLACE "n1" "num_arg(f, t)")
            (("" (EXPAND "select" 1 1)
              (("" (LIFT-IF)
                (("" (ASSERT)
                  (("" (PROP)
                    (("1" (HIDE -3 1)
                      (("1" (EXPAND "n1" -3)
                        (("1" (EXPAND "num_arg" -3)
                          (("1" (ASSERT)
                            (("1" (LEMMA "num_arg_ge1")
                              (("1" (INST -1 "f" "term2(t)")
                                (("1" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE 1)
                      (("2" (EXPAND "select" 1 2)
                        (("2" (LIFT-IF)
                          (("2" (ASSERT)
                            (("2" (PROP)
                              (("1" (HIDE -3 -4 1)
                                (("1" (EXPAND "n1")
                                  (("1" (EXPAND "num_arg" -1 1)
                                    (("1" (LEMMA "num_arg_ge1")
                                      (("1" (INST -1 "f" "term2(t)")
                                        (("1" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -2 "term2(t)")
                                (("2" (PROP)
                                  (("1"
                                    (INST -1 "f" "i - num_arg(f, term1(t))")
                                    (("1" (PROP)
                                      (("1" (EXPAND "n1" 2)
                                        (("1" (EXPAND "num_arg" 2 2)
                                          (("1" (PROPAX) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (HIDE 3)
                                        (("2" (EXPAND "n1")
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE 3)
                                      (("2" (EXPAND "n1")
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (EXPAND "select" 1 2)
                      (("3" (ASSERT)
                        (("3" (INST -3 "ac_arg(t)")
                          (("3" (PROP)
                            (("1" (INST -1 "f" "i")
                              (("1" (ASSERT)
                                (("1" (EXPAND "n1")
                                  (("1" (ASSERT)
                                    (("1" (PROP)
                                      (("1" (GRIND) NIL NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("4" (EXPAND "select" 2) (("4" (ASSERT) NIL NIL)) NIL)
                     ("5" (EXPAND "select" 2) (("5" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|select_size| 0
  (|select_size-1| NIL 3806249615
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "select" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (INST -3 "term1(t)")
                  (("1" (PROP)
                    (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (INST -2 "term2(t)")
                  (("2" (PROP)
                    (("1" (INST? -1)
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (INST -3 "ac_arg(t)")
                  (("3" (PROP)
                    (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|ac_select_size| 0
  (|ac_select_size-1| NIL 3806248957
   ("" (SKEEP)
    (("" (EXPAND "is_ac_sym?" -1)
      (("" (EXPAND "select" 1)
        (("" (ASSERT)
          (("" (LIFT-IF)
            (("" (ASSERT)
              (("" (FLATTEN)
                (("" (ASSERT)
                  (("" (LEMMA "select_size")
                    (("" (INST? -1) (("" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|select_size| FORMULA-DECL NIL |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL))
   SHOSTAK))
 (|delete_size| 0
  (|delete_size-1| NIL 3806329054
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (INST -3 "term1(t)")
                  (("2" (PROP)
                    (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (GRIND) NIL NIL)
                 ("4" (INST -2 "term2(t)")
                  (("4" (PROP)
                    (("1" (INST? -1)
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("5" (GRIND) NIL NIL)
                 ("6" (INST -3 "ac_arg(t)")
                  (("6" (PROP)
                    (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("7" (LEMMA "size_ge1") (("7" (GRIND) NIL NIL)) NIL)
                 ("8" (LEMMA "size_ge1") (("8" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|size_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|num_arg_delete| 0
  (|num_arg_delete-1| NIL 3806348316
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
                 ("3" (GRIND) NIL NIL)
                 ("4" (EXPAND "num_arg" 2 1)
                  (("4" (EXPAND "num_arg" 2 4)
                    (("4" (ASSERT)
                      (("4" (INST -2 "term2(t)")
                        (("4" (PROP)
                          (("1" (INST -1 "f" "n-num_arg(f, term1(t))")
                            (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("5" (GRIND) NIL NIL)
                 ("6" (EXPAND "num_arg" 2 2)
                  (("6" (LIFT-IF)
                    (("6" (ASSERT)
                      (("6" (EXPAND "num_arg" 2 1)
                        (("6" (INST -3 "ac_arg(t)")
                          (("6" (PROP)
                            (("1" (INST -1 "f" "n") NIL NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("7" (LEMMA "num_arg_ge1") (("7" (GRIND) NIL NIL)) NIL)
                 ("8" (LEMMA "num_arg_ge1") (("8" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|num_arg_delete_ge1| 0
  (|num_arg_delete_ge1-1| NIL 3806350748
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (INST -3 "term1(t)")
                  (("2" (PROP)
                    (("1" (INST -1 "f" "n")
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1")
                          (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (GRIND) NIL NIL)
                 ("4" (INST -2 "term2(t)")
                  (("4" (PROP)
                    (("1" (INST -1 "f" "n - num_arg(f, term1(t))")
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1")
                          (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("5" (GRIND) NIL NIL)
                 ("6" (INST -3 "ac_arg(t)")
                  (("6" (PROP)
                    (("1" (INST -1 "f" "n") (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|num_arg_delete_size| 0
  (|num_arg_delete_size-1| NIL 3806330795
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (EXPAND "size" 1 2) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (INST -3 "term1(t)")
                  (("2" (PROP)
                    (("1" (INST? -1)
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1") (("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (GRIND) NIL NIL)
                 ("4" (INST -2 "term2(t)")
                  (("4" (PROP)
                    (("1" (INST? -1)
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1") (("2" (GRIND) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("5" (HIDE -2 -3 -4 1 2) (("5" (GRIND) NIL NIL)) NIL)
                 ("6" (INST -3 "ac_arg(t)")
                  (("6" (PROP)
                    (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("7" (LEMMA "num_arg_ge1_type_t")
                  (("7" (INST? -1) (("7" (ASSERT) (("7" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("8" (LEMMA "num_arg_ge1_type_t") (("8" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|num_arg_ge1_type_t| FORMULA-DECL NIL |term_properties| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|num_arg1_delete| 0
  (|num_arg1_delete-1| NIL 3806360892
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1)
            (("" (LIFT-IF)
              (("" (SPLIT)
                (("1" (FLATTEN)
                  (("1" (HIDE -2 1)
                    (("1" (EXPAND "num_arg" -2)
                      (("1" (LIFT-IF)
                        (("1" (ASSERT)
                          (("1" (LEMMA "num_arg_ge1")
                            (("1" (INST-CP -1 "f" "term1(t)")
                              (("1" (INST -1 "f" "term2(t)")
                                (("1" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (SPLIT)
                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (PROPAX) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|unit| ADT-CONSTRUCTOR-DECL "(unit?)" |term_adt| NIL)
    (|unit?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|delete_num_arg| 0
  (|delete_num_arg-1| NIL 3806361288 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL))
   SHOSTAK))
 (|ac_delete_size| 0
  (|ac_delete_size-1| NIL 3806329668
   ("" (SKEEP)
    (("" (EXPAND "delete" 1)
      (("" (ASSERT)
        (("" (LIFT-IF)
          (("" (PROP)
            (("1" (EXPAND "size" 1 2)
              (("1" (LEMMA "size_ge1") (("1" (GRIND) NIL NIL)) NIL)) NIL)
             ("2" (EXPAND "size" 2 1)
              (("2" (EXPAND "size" 2 2)
                (("2" (LEMMA "num_arg_delete_size")
                  (("2" (INST -1 "f" "n" "ac_arg(t)")
                    (("2" (ASSERT)
                      (("2" (EXPAND "num_arg" 2 1)
                        (("2" (LEMMA "num_arg_ge1")
                          (("2" (INST? -1) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (LEMMA "size_ge1") (("3" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|delete| DEF-DECL "term" |term_properties| NIL)
    (|num_arg_delete_size| FORMULA-DECL NIL |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|size_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|delete_le1| 0
  (|delete_le1-1| NIL 3806226223
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1 2)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (EXPAND "delete" 1 1) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (EXPAND "delete" 2 1)
                  (("2" (LIFT-IF)
                    (("2" (ASSERT)
                      (("2" (INST -3 "term1(t)")
                        (("2" (PROP)
                          (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (HIDE-ALL-BUT 2)
                  (("3" (LEMMA "num_arg_ge1")
                    (("3" (INST? -1) (("3" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("4" (HIDE-ALL-BUT 3)
                  (("4" (LEMMA "num_arg_ge1") (("4" (GRIND) NIL NIL)) NIL))
                  NIL)
                 ("5" (EXPAND "delete" 1)
                  (("5" (LIFT-IF) (("5" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("6" (EXPAND "delete" 2 1)
                  (("6" (ASSERT)
                    (("6" (INST -3 "ac_arg(t)")
                      (("6" (PROP)
                        (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("7" (EXPAND "delete" 2 1) (("7" (ASSERT) NIL NIL)) NIL)
                 ("8" (EXPAND "delete" 2 1) (("8" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|delete_ge_num_arg| 0
  (|delete_ge_num_arg-1| NIL 3806336903
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (HIDE -4 1)
                  (("1" (LEMMA "num_arg_ge1")
                    (("1" (EXPAND "num_arg" -5)
                      (("1" (ASSERT)
                        (("1" (INST -1 "f" "term2(t)") (("1" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -3 1 2)
                  (("2" (EXPAND "num_arg" -3)
                    (("2" (ASSERT)
                      (("2" (LEMMA "num_arg_ge1")
                        (("2" (INST -1 "f" "term2(t)") (("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (EXPAND "delete" 1)
                  (("3" (ASSERT)
                    (("3" (LIFT-IF)
                      (("3" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (HIDE -2 -4 -5 1 2) (("1" (GRIND) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("4" (EXPAND "delete" 2 2)
                  (("4" (ASSERT)
                    (("4" (LIFT-IF)
                      (("4" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (HIDE -3 -4 1 2 3)
                            (("1" (GRIND)
                              (("1" (LEMMA "num_arg_ge1")
                                (("1" (INST -1 "f" "term2(t)")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (INST -2 "term2(t)")
                            (("2" (PROP)
                              (("1" (INST -1 "f" "i - num_arg(f, term1(t))")
                                (("1" (ASSERT)
                                  (("1" (PROP)
                                    (("1" (REPLACE -1 2)
                                      (("1" (EXPAND "num_arg" 2 2)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (EXPAND "num_arg" -2)
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("5" (EXPAND "delete" 1)
                  (("5" (LIFT-IF) (("5" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("6" (EXPAND "delete" 2 2)
                  (("6" (ASSERT)
                    (("6" (INST -3 "ac_arg(t)")
                      (("6" (PROP)
                        (("1" (INST? -1)
                          (("1" (PROP)
                            (("1" (EXPAND "num_arg" -4)
                              (("1" (ASSERT)
                                (("1" (EXPAND "num_arg" 2)
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("7" (EXPAND "delete" 2) (("7" (ASSERT) NIL NIL)) NIL)
                 ("8" (EXPAND "delete" 2) (("8" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|delete_ac_num_arg_gt1| 0
  (|delete_ac_num_arg_gt1-1| NIL 3806180090
   ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|delete| DEF-DECL "term" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL))
   SHOSTAK))
 (|is_ac_sym?_delete| 0
  (|is_ac_sym?_delete-1| NIL 3806399463 ("" (GRIND) NIL NIL)
   ((|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|num_arg_select_delete| 0
  (|num_arg_select_delete-1| NIL 3806355502
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "delete" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (EXPAND "select" 1)
                  (("1" (ASSERT)
                    (("1" (REWRITE "select_num_arg") (("1" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (INST -3 "term1(t)")
                  (("2" (PROP)
                    (("1" (INST -1 "f" "i")
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1")
                          (("2" (INST -1 "f" "term1(t)")
                            (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (REWRITE "select_num_arg") (("3" (GRIND) NIL NIL)) NIL)
                 ("4" (INST -2 "term2(t)")
                  (("4" (PROP)
                    (("1" (INST -1 "f" "i - num_arg(f, term1(t))")
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1")
                          (("2" (INST -1 "f" "term2(t)")
                            (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("5" (GRIND) NIL NIL)
                 ("6" (INST -3 "ac_arg(t)")
                  (("6" (PROP)
                    (("1" (INST -1 "f" "i")
                      (("1" (PROP)
                        (("1" (GRIND) NIL NIL)
                         ("2" (LEMMA "num_arg_ge1") (("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("7" (LEMMA "num_arg_ge1_type_t")
                  (("7" (INST? -1) (("7" (GRIND) NIL NIL)) NIL)) NIL)
                 ("8" (LEMMA "num_arg_ge1_type_t") (("8" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|num_arg_ge1_type_t| FORMULA-DECL NIL |term_properties| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|select_num_arg| FORMULA-DECL NIL |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|delete_remove1| 0
  (|delete_remove1-1| NIL 3807556284
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "delete" 1)
            (("2" (LIFT-IF)
              (("2" (SPLIT)
                (("1" (FLATTEN)
                  (("1" (PROP)
                    (("1" (EXPAND "remove" 1) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (EXPAND "nth" -5) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (EXPAND "remove" 2)
                    (("2" (ASSERT)
                      (("2" (INST -1 "f" "i-1" "j") (("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|delete| DEF-DECL "args" |term_properties| NIL)
    (|remove| DEF-DECL "list[T]" |list_theory| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   SHOSTAK))
 (|delete_nth_TCC1| 0
  (|delete_nth_TCC1-1| NIL 3807556276 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|delete_nth| 0
  (|delete_nth-1| NIL 3807556570
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)
     ("3" (HIDE 2) (("3" (POSTPONE) NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|gt_select_delete| 0
  (|gt_select_delete-1| NIL 3806608350
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (HIDE -1)
            (("" (EXPAND "delete" 1)
              (("" (LIFT-IF)
                (("" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "select" 2 1)
                              (("2" (LIFT-IF)
                                (("2" (SPLIT)
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "select" 1 2)
                                      (("1" (LIFT-IF)
                                        (("1" (ASSERT)
                                          (("1" (REVEAL -1)
                                            (("1" (INST -1 "term1(t)")
                                              (("1" (PROP)
                                                (("1" (INST -1 "f" "i" "n")
                                                  (("1" (GRIND) NIL NIL)) NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (HIDE 2)
                                      (("2" (CASE "num_arg(f, term1(t)) > 1")
                                        (("1" (LEMMA "num_arg_delete_ge1")
                                          (("1" (INST? -1)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (LEMMA "num_arg_ge1")
                                          (("2" (INST? -1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "select" 1 2)
                              (("1" (LIFT-IF)
                                (("1" (ASSERT)
                                  (("1" (PROP)
                                    (("1" (HIDE 2) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "select" 2 1)
                              (("2" (LIFT-IF)
                                (("2" (PROP)
                                  (("1" (EXPAND "select" 1 2)
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (EXPAND "select" 2 2)
                                    (("2" (LIFT-IF)
                                      (("2" (ASSERT)
                                        (("2" (REVEAL -1)
                                          (("2" (INST -1 "term2(t)")
                                            (("2" (PROP)
                                              (("1" (INST? -1)
                                                (("1" (ASSERT)
                                                  (("1" (HIDE 3)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (GRIND) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "select" 2 1)
                              (("2" (ASSERT)
                                (("2" (EXPAND "select" 2 2)
                                  (("2" (REVEAL -1)
                                    (("2" (INST -1 "ac_arg(t)")
                                      (("2" (PROP)
                                        (("1" (GRIND) NIL NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL))
   SHOSTAK))
 (|le_select_delete_TCC1| 0
  (|le_select_delete_TCC1-1| NIL 3806685064
   ("" (SKEEP)
    (("" (LEMMA "num_arg_ge1") (("" (INST? -1) (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   NIL))
 (|le_select_delete| 0
  (|le_select_delete-1| NIL 3806685064
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("1" (SKOLEM 1 "t")
      (("1" (PROP)
        (("1" (HIDE -1)
          (("1" (SKEEP)
            (("1" (EXPAND "delete" 1)
              (("1" (LIFT-IF)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "select" 1 2)
                              (("1" (ASSERT)
                                (("1" (LIFT-IF)
                                  (("1" (SPLIT)
                                    (("1" (FLATTEN)
                                      (("1" (HIDE 1) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (REPLACE -1 2)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (CASE "num_arg(f, term1(t)) > 1")
                              (("1" (EXPAND "select" 2 1)
                                (("1" (LIFT-IF)
                                  (("1" (SPLIT)
                                    (("1" (FLATTEN)
                                      (("1" (REWRITE "num_arg_delete_ge1")
                                        (("1" (EXPAND "select" 1 2)
                                          (("1" (ASSERT)
                                            (("1" (REVEAL -1)
                                              (("1" (INST -1 "term1(t)")
                                                (("1" (PROP)
                                                  (("1" (INST -1 "f" "i" "n")
                                                    (("1" (ASSERT)
                                                      (("1" (HIDE 2)
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (GRIND) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (REWRITE "num_arg_delete_ge1")
                                        (("2" (EXPAND "select" 2 2)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (LEMMA "num_arg_ge1")
                                (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (CASE "num_arg(f, term2(t)) > 1")
                              (("1" (EXPAND "select" 2 1)
                                (("1" (LIFT-IF)
                                  (("1" (SPLIT)
                                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (EXPAND "select" 2 2)
                                        (("2" (ASSERT)
                                          (("2" (REVEAL -1)
                                            (("2" (INST -1 "term2(t)")
                                              (("2" (PROP)
                                                (("1"
                                                  (INST -1 "f"
                                                   "i-num_arg(f, term1(t))"
                                                   "n - num_arg(f, term1(t))")
                                                  (("1" (ASSERT)
                                                    (("1" (HIDE 3)
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (LEMMA "num_arg_ge1")
                                (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (ASSERT)
                          (("1" (EXPAND "select" 1 1)
                            (("1" (EXPAND "select" 1 2)
                              (("1" (REVEAL -1)
                                (("1" (INST -1 "ac_arg(t)")
                                  (("1" (PROP)
                                    (("1" (INST? -1)
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (LEMMA "num_arg_ge1")
        (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|gt_select_delete2_TCC1| 0
  (|gt_select_delete2_TCC1-1| NIL 3806608110 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|gt_select_delete2| 0
  (|gt_select_delete2-1| NIL 3806613899
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("1" (SKOLEM 1 "t")
      (("1" (PROP)
        (("1" (SKEEP)
          (("1" (HIDE -1)
            (("1" (EXPAND "delete" 1)
              (("1" (LIFT-IF)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "select" 1 2)
                              (("1" (LIFT-IF)
                                (("1" (ASSERT)
                                  (("1" (SPLIT)
                                    (("1" (FLATTEN)
                                      (("1" (HIDE 1) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (PROPAX) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "select" 2 1)
                              (("2" (LIFT-IF)
                                (("2" (SPLIT)
                                  (("1" (FLATTEN)
                                    (("1" (CASE "num_arg(f, term1(t)) > 1")
                                      (("1" (LEMMA "num_arg_delete_ge1")
                                        (("1" (INST? -1)
                                          (("1" (ASSERT)
                                            (("1" (REPLACE -1 -3)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "select" 1 2)
                                                  (("1" (REVEAL -2)
                                                    (("1" (INST -1 "term1(t)")
                                                      (("1" (PROP)
                                                        (("1"
                                                          (INST -1 "f" "i" "n")
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE -1 2)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (LEMMA "num_arg_ge1")
                                        (("2" (INST? -1)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (CASE "num_arg(f, term1(t)) > 1")
                                      (("1" (LEMMA "num_arg_delete_ge1")
                                        (("1" (INST? -1)
                                          (("1" (ASSERT)
                                            (("1" (REPLACE -1 2)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "select" 2 2)
                                                  (("1" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (LEMMA "num_arg_ge1")
                                        (("2" (INST? -1)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "select" 2 1)
                              (("2" (LIFT-IF)
                                (("2" (SPLIT)
                                  (("1" (FLATTEN)
                                    (("1" (HIDE 1) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (EXPAND "select" 2 2)
                                      (("2" (LIFT-IF)
                                        (("2" (ASSERT)
                                          (("2" (REVEAL -1)
                                            (("2" (INST -1 "term2(t)")
                                              (("2" (PROP)
                                                (("1" (INST? -1)
                                                  (("1" (ASSERT)
                                                    (("1" (HIDE 3)
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "select" 2 1)
                              (("2" (ASSERT)
                                (("2" (EXPAND "select" 2 2)
                                  (("2" (REVEAL -1)
                                    (("2" (INST -1 "ac_arg(t)")
                                      (("2" (PROP)
                                        (("1" (INST? -1)
                                          (("1" (ASSERT)
                                            (("1" (HIDE 3)
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK))
 (|gt_delete_delete| 0
  (|gt_delete_delete-1| NIL 3806658371
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("1" (SKOLEM 1 "t")
      (("1" (PROP)
        (("1" (SKEEP)
          (("1" (HIDE -1)
            (("1" (EXPAND "delete" 1 2)
              (("1" (LIFT-IF)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "delete" 1 3)
                              (("1" (LIFT-IF)
                                (("1" (ASSERT)
                                  (("1" (SPLIT)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (FLATTEN)
                                      (("2" (SPLIT)
                                        (("1" (FLATTEN)
                                          (("1" (LEMMA "num_arg1_delete")
                                            (("1"
                                              (INST-CP -1 "f" "i-1" "term2(t)")
                                              (("1" (ASSERT)
                                                (("1" (REPLACE -2 1)
                                                  (("1"
                                                    (INST -1 "f" "n"
                                                     "term1(t)")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2"
                                            (CASE "num_arg(f, term2(t)) > 1")
                                            (("1" (EXPAND "delete" 2 2)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (LEMMA "num_arg_ge1")
                                              (("2" (INST? -1)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (CASE "num_arg(f, term1(t)) > 1")
                              (("1" (EXPAND "delete" 2 4)
                                (("1" (LIFT-IF)
                                  (("1" (ASSERT)
                                    (("1" (SPLIT)
                                      (("1" (FLATTEN)
                                        (("1" (EXPAND "delete" 1 1)
                                          (("1" (LIFT-IF)
                                            (("1" (SPLIT)
                                              (("1" (FLATTEN)
                                                (("1" (SPLIT)
                                                  (("1" (FLATTEN)
                                                    (("1" (EXPAND "delete" 1 1)
                                                      (("1" (LIFT-IF)
                                                        (("1" (ASSERT)
                                                          (("1" (SPLIT)
                                                            (("1" (FLATTEN)
                                                              (("1" (ASSERT)
                                                                (("1" (PROP)
                                                                  (("1"
                                                                    (HIDE 2 -7
                                                                     -8)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "num_arg_delete_ge1")
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (HIDE
                                                                               -1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "num_arg_delete_ge1")
                                                                                (("1"
                                                                                  (HIDE
                                                                                   -2)
                                                                                  (("1"
                                                                                    (INST?
                                                                                     -1)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (FLATTEN)
                                                              (("2" (HIDE 2)
                                                                (("2"
                                                                  (LEMMA
                                                                   "num_arg_delete_ge1")
                                                                  (("2"
                                                                    (INST? -1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (EXPAND "delete" 2 3)
                                                      (("2" (LIFT-IF)
                                                        (("2" (SPLIT)
                                                          (("1" (FLATTEN)
                                                            (("1" (SPLIT)
                                                              (("1" (FLATTEN)
                                                                (("1"
                                                                  (HIDE 1 -8
                                                                   -9)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "num_arg_delete_ge1")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "num_arg_delete_ge1")
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2"
                                                                  (REVEAL -1)
                                                                  (("2"
                                                                    (INST -1
                                                                     "term1(t)")
                                                                    (("2"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST
                                                                         -1 "f"
                                                                         "i"
                                                                         "n")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (HIDE
                                                                             3)
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN)
                                                            (("2" (HIDE 2)
                                                              (("2"
                                                                (REWRITE
                                                                 "num_arg_delete_ge1")
                                                                (("2"
                                                                  (REWRITE
                                                                   "num_arg_delete_ge1")
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2" (HIDE 2)
                                                  (("2"
                                                    (REWRITE
                                                     "num_arg_delete_ge1")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (SPLIT)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "delete" 1 1)
                                              (("1" (LIFT-IF)
                                                (("1" (SPLIT)
                                                  (("1" (FLATTEN)
                                                    (("1" (HIDE 1)
                                                      (("1"
                                                        (REWRITE
                                                         "num_arg_delete_ge1")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (SPLIT)
                                                      (("1" (PROPAX) NIL NIL)
                                                       ("2" (FLATTEN) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (FLATTEN)
                                            (("2" (EXPAND "delete" 2 3)
                                              (("2" (EXPAND "delete" 2 1)
                                                (("2" (LIFT-IF)
                                                  (("2" (SPLIT)
                                                    (("1" (FLATTEN)
                                                      (("1" (HIDE 1)
                                                        (("1"
                                                          (REWRITE
                                                           "num_arg_delete_ge1")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (REWRITE
                                                           "num_arg_delete_ge1"
                                                           2)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (LEMMA "num_arg_ge1")
                                (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (CASE "num_arg(f, term2(t)) > 1")
                              (("1" (EXPAND "delete" 2 4)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "delete" 2 1)
                                    (("1" (ASSERT)
                                      (("1" (LIFT-IF)
                                        (("1" (SPLIT)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "delete" 1 1)
                                              (("1" (LIFT-IF)
                                                (("1" (SPLIT)
                                                  (("1" (PROPAX) NIL NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (HIDE 2)
                                                      (("2"
                                                        (REWRITE
                                                         "num_arg_delete_ge1")
                                                        (("2"
                                                          (REWRITE
                                                           "num_arg_delete_ge1")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (FLATTEN)
                                            (("2" (EXPAND "delete" 2 3)
                                              (("2" (LIFT-IF)
                                                (("2" (SPLIT)
                                                  (("1" (FLATTEN)
                                                    (("1" (HIDE 1)
                                                      (("1"
                                                        (REWRITE
                                                         "num_arg_delete_ge1")
                                                        (("1"
                                                          (REWRITE
                                                           "num_arg_delete_ge1")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (REVEAL -1)
                                                      (("2"
                                                        (INST -1 "term2(t)")
                                                        (("2" (PROP)
                                                          (("1"
                                                            (INST -1 "f"
                                                             "i - num_arg(f, term1(t))"
                                                             "n - num_arg(f, term1(t))")
                                                            (("1" (ASSERT)
                                                              (("1" (HIDE 3)
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (LEMMA "num_arg_ge1")
                                (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (SPLIT)
                          (("1" (FLATTEN)
                            (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "delete" 2 1)
                              (("2" (ASSERT)
                                (("2" (LIFT-IF)
                                  (("2" (SPLIT)
                                    (("1" (FLATTEN)
                                      (("1" (EXPAND "delete" 1 2)
                                        (("1" (EXPAND "delete" 1 1)
                                          (("1" (LIFT-IF)
                                            (("1" (SPLIT)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (FLATTEN)
                                                (("2" (HIDE 2)
                                                  (("2"
                                                    (CASE
                                                        "num_arg(f, ac_arg(t)) > 1")
                                                    (("1" (EXPAND "num_arg" -2)
                                                      (("1"
                                                        (EXPAND "num_arg" 1)
                                                        (("1"
                                                          (REWRITE
                                                           "num_arg_delete_ge1")
                                                          (("1"
                                                            (REWRITE
                                                             "num_arg_delete_ge1")
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (EXPAND "num_arg" 3)
                                                      (("2"
                                                        (LEMMA "num_arg_ge1")
                                                        (("2" (INST? -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (EXPAND "delete" 2 4)
                                        (("2" (EXPAND "delete" 2 3)
                                          (("2" (LIFT-IF)
                                            (("2" (SPLIT)
                                              (("1" (FLATTEN)
                                                (("1" (HIDE 1)
                                                  (("1" (EXPAND "num_arg")
                                                    (("1"
                                                      (CASE
                                                          "num_arg(f, ac_arg(t)) > 1")
                                                      (("1"
                                                        (REWRITE
                                                         "num_arg_delete_ge1")
                                                        (("1"
                                                          (REWRITE
                                                           "num_arg_delete_ge1")
                                                          NIL NIL))
                                                        NIL)
                                                       ("2"
                                                        (LEMMA "num_arg_ge1")
                                                        (("2" (INST? -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2" (REPLACE -2)
                                                  (("2" (REVEAL -1)
                                                    (("2" (INST -1 "ac_arg(t)")
                                                      (("2" (PROP)
                                                        (("1" (INST? -1)
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE 3)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (ASSERT) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|num_arg1_delete| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK))
 (|get_args_len| 0
  (|get_args_len-1| NIL 3805991637
   ("" (SKEEP)
    (("" (EXPAND "get_args" 1 1)
      (("" (REWRITE "map_length[nat, term]")
        (("" (REWRITE "from_min2max_len1") NIL NIL)) NIL))
      NIL))
    NIL)
   ((|get_args| CONST-DECL "args" |term_properties| NIL)
    (|from_min2max_len1| FORMULA-DECL NIL |list_theory| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|map_length| FORMULA-DECL NIL |more_map_props| NIL))
   SHOSTAK))
 (|get_args_null| 0
  (|get_args_null-1| NIL 3807116901
   ("" (SKEEP)
    (("" (LEMMA "get_args_len")
      (("" (INST? -1)
        (("" (LEMMA "num_arg_ge1") (("" (INST? -1) (("" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|get_args_len| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|get_args_ac| 0
  (|get_args_ac-1| NIL 3805746325
   ("" (SKEEP)
    (("" (EXPAND "get_args")
      (("" (LEMMA "equal_lst_nth")
        (("" (INST? -1)
          (("" (ASSERT)
            (("" (HIDE 2)
              (("" (PROP)
                (("1" (LEMMA "map_length[nat, term]")
                  (("1" (INST? -1)
                    (("1" (REPLACE -1 1)
                      (("1" (HIDE -1)
                        (("1" (LEMMA "map_length[nat, term]")
                          (("1" (INST? -1)
                            (("1" (REPLACE -1 1)
                              (("1" (HIDE -1)
                                (("1" (EXPAND "num_arg" 1 1)
                                  (("1" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKEEP)
                  (("2" (LEMMA "map_nth_rw[nat, term]")
                    (("2" (INST? -1)
                      (("1" (REPLACE -1 1)
                        (("1" (HIDE -1)
                          (("1" (LEMMA "map_nth_rw[nat, term]")
                            (("1" (INST? -1)
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (EXPAND "num_arg" 1 1)
                                    (("1" (EXPAND "select" 1 1)
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (TYPEPRED "n")
                                  (("2" (LEMMA "map_length[nat, term]")
                                    (("2" (INST? -1) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (TYPEPRED "n")
                          (("2" (LEMMA "map_length[nat, term]")
                            (("2" (INST? -1)
                              (("2" (REPLACE -1 -2) (("2" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|get_args| CONST-DECL "args" |term_properties| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|ac_app| ADT-CONSTRUCTOR-DECL "[[ac_symbol, term] -> (ac_app?)]"
     |term_adt| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|map_length| FORMULA-DECL NIL |more_map_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|equal_lst_nth| FORMULA-DECL NIL |list_theory| NIL))
   SHOSTAK))
 (|get_args_pair| 0
  (|get_args_pair-1| NIL 3805751923
   ("" (SKEEP)
    (("" (LEMMA "equal_lst_nth")
      (("" (INST? -1)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (PROP)
              (("1" (REWRITE "length_append")
                (("1" (EXPAND "get_args")
                  (("1" (LEMMA "map_length[nat, term]")
                    (("1" (INST? -1)
                      (("1" (REPLACE -1 1)
                        (("1" (HIDE -1)
                          (("1" (LEMMA "map_length[nat, term]")
                            (("1" (INST? -1)
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (LEMMA "map_length[nat, term]")
                                    (("1" (INST? -1)
                                      (("1" (REPLACE -1 1)
                                        (("1" (HIDE -1)
                                          (("1" (EXPAND "num_arg" 1 1)
                                            (("1" (REWRITE "from_min2max_len1")
                                              (("1"
                                                (REWRITE "from_min2max_len1")
                                                (("1"
                                                  (REWRITE "from_min2max_len1")
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (LEMMA "nth_append")
                  (("2" (INST -1 "n" "get_args(f)(t)" "get_args(f)(s)")
                    (("2" (PROP)
                      (("1" (LIFT-IF)
                        (("1" (PROP)
                          (("1" (REPLACE -2 1 NIL T)
                            (("1" (EXPAND "get_args" 1 1)
                              (("1" (LEMMA "map_nth_rw[nat, term]")
                                (("1" (INST? -1)
                                  (("1" (REPLACE -1 1)
                                    (("1" (HIDE -1)
                                      (("1" (EXPAND "get_args" 1 1)
                                        (("1" (LEMMA "map_nth_rw[nat, term]")
                                          (("1" (INST? -1)
                                            (("1" (REPLACE -1 1 NIL T)
                                              (("1" (LEMMA "nth_from_min2max2")
                                                (("1" (INST? -1)
                                                  (("1" (ASSERT)
                                                    (("1" (PROP)
                                                      (("1" (REPLACE -1 1)
                                                        (("1" (HIDE -1)
                                                          (("1"
                                                            (LEMMA
                                                             "nth_from_min2max2")
                                                            (("1" (INST? -1)
                                                              (("1" (PROP)
                                                                (("1"
                                                                  (REPLACE -1
                                                                           1)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "select" 1
                                                                     1)
                                                                    (("1"
                                                                      (LIFT-IF)
                                                                      (("1"
                                                                        (PROP)
                                                                        (("1"
                                                                          (HIDE
                                                                           -1
                                                                           2)
                                                                          (("1"
                                                                            (REWRITE
                                                                             "get_args_len")
                                                                            (("1"
                                                                              (GRIND)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (LEMMA
                                                                   "from_min2max_len1")
                                                                  (("2"
                                                                    (INST? -1)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -1 1)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "get_args_len")
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (REWRITE
                                                         "from_min2max_len1")
                                                        (("2"
                                                          (REWRITE
                                                           "get_args_len")
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REWRITE "from_min2max_len1")
                                              (("2" (REWRITE "get_args_len")
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (REWRITE "get_args_len")
                                    (("2" (REWRITE "from_min2max_len1")
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (REPLACE -1 2)
                            (("2" (HIDE -1)
                              (("2" (EXPAND "get_args" 2 1)
                                (("2" (LEMMA "map_nth_rw[nat, term]")
                                  (("2" (INST? -1)
                                    (("1" (REPLACE -1 2)
                                      (("1" (HIDE -1)
                                        (("1" (LEMMA "nth_from_min2max2")
                                          (("1" (INST? -1)
                                            (("1" (PROP)
                                              (("1" (REPLACE -1 2)
                                                (("1" (EXPAND "select" 2 1)
                                                  (("1" (LIFT-IF)
                                                    (("1" (PROP)
                                                      (("1"
                                                        (REWRITE
                                                         "get_args_len")
                                                        (("1" (HIDE -2 1)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE -1 1 3)
                                                        (("2"
                                                          (EXPAND "get_args" 1
                                                                  1)
                                                          (("2"
                                                            (LEMMA
                                                             "map_nth_rw[nat, term]")
                                                            (("2" (INST? -1)
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1" (HIDE -1)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "nth_from_min2max2")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "get_args_len")
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (HIDE 2)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "get_args_len")
                                                                        (("2"
                                                                          (REWRITE
                                                                           "from_min2max_len1")
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "n")
                                                                            (("2"
                                                                              (REWRITE
                                                                               "get_args_len")
                                                                              (("2"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (HIDE 2)
                                                                      (("3"
                                                                        (REVEAL
                                                                         3)
                                                                        (("3"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (HIDE 2)
                                                                (("2" (PROP)
                                                                  (("1"
                                                                    (REVEAL 3)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (REWRITE
                                                                     "get_args_len")
                                                                    (("2"
                                                                      (REWRITE
                                                                       "from_min2max_len1")
                                                                      (("2"
                                                                        (TYPEPRED
                                                                         "n")
                                                                        (("2"
                                                                          (REWRITE
                                                                           "get_args_len")
                                                                          (("2"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (TYPEPRED "n")
                                                (("2" (HIDE 2 3)
                                                  (("2"
                                                    (REWRITE "get_args_len")
                                                    (("2"
                                                      (REWRITE
                                                       "from_min2max_len1")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (REWRITE "from_min2max_len1")
                                      (("2" (TYPEPRED "n")
                                        (("2" (REWRITE "get_args_len") NIL
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "n")
                        (("2" (REWRITE "get_args_len")
                          (("2" (EXPAND "num_arg" -1)
                            (("2" (REWRITE "get_args_len")
                              (("2" (REWRITE "get_args_len")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|equal_lst_nth| FORMULA-DECL NIL |list_theory| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|from_min2max_len1| FORMULA-DECL NIL |list_theory| NIL)
    (|map_length| FORMULA-DECL NIL |more_map_props| NIL)
    (|length_append| FORMULA-DECL NIL |list_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nth_append| FORMULA-DECL NIL |list_theory| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|get_args_len| FORMULA-DECL NIL |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth_from_min2max2| FORMULA-DECL NIL |list_theory| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|get_args_not_pair_ac| 0
  (|get_args_not_pair_ac-1| NIL 3807113704
   ("" (SKEEP)
    (("" (EXPAND "get_args")
      (("" (LEMMA "num_arg_not_pair_ac")
        (("" (INST? -1)
          (("" (ASSERT)
            (("" (REPLACE -1 3)
              (("" (EXPAND "from_min2max" 3)
                (("" (EXPAND "map" 3)
                  (("" (EXPAND "map" 3) (("" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|num_arg_not_pair_ac| FORMULA-DECL NIL |term_properties| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL))
   SHOSTAK))
 (|get_args_nth_TCC1| 0
  (|get_args_nth_TCC1-1| NIL 3807116901 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_nth| 0
  (|get_args_nth-1| NIL 3807117043
   ("" (SKEEP)
    (("" (EXPAND "get_args" 1)
      (("" (LEMMA "map_nth_rw[nat, term]")
        (("" (INST? -1)
          (("1" (REPLACE -1 1)
            (("1" (HIDE -1)
              (("1" (REWRITE "nth_from_min2max2")
                (("1" (REWRITE "from_min2max_len1")
                  (("1" (EXPAND "nice_ind?" -1) (("1" (ASSERT) NIL NIL)) NIL))
                  NIL)
                 ("2" (EXPAND "nice_ind?" -1) (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (REWRITE "from_min2max_len1")
            (("2" (EXPAND "nice_ind?" -1)
              (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nth_from_min2max2| FORMULA-DECL NIL |list_theory| NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|from_min2max_len1| FORMULA-DECL NIL |list_theory| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL))
   SHOSTAK))
 (|get_args_remove_TCC1| 0
  (|get_args_remove_TCC1-1| NIL 3807116901 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_remove| 0
  (|get_args_remove-1| NIL 3807117973
   ("" (SKEEP)
    (("" (LEMMA "equal_lst_nth")
      (("" (INST? -1)
        (("1" (ASSERT)
          (("1" (HIDE 2)
            (("1" (PROP)
              (("1" (LEMMA "remove_len")
                (("1" (INST? -1)
                  (("1" (PROP)
                    (("1" (REPLACE -1 1)
                      (("1" (HIDE -1)
                        (("1" (LEMMA "get_args_len")
                          (("1" (INST? -1)
                            (("1" (REPLACE -1 1 NIL T)
                              (("1" (LEMMA "get_args_len")
                                (("1" (INST? -1)
                                  (("1" (REPLACE -1 1)
                                    (("1" (HIDE -1)
                                      (("1" (LEMMA "num_arg_delete_ge1")
                                        (("1" (INST? -1)
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REWRITE "get_args_len")
                      (("2" (EXPAND "nice_ind?") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "nice_ind?") (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (CASE "i > n+1")
                  (("1" (LEMMA "gt_nth_remove")
                    (("1" (INST -1 "i-1" "get_args(f)(t)" "n")
                      (("1" (PROP)
                        (("1" (REPLACE -1 1 NIL T)
                          (("1" (EXPAND "get_args")
                            (("1" (LEMMA "map_nth_rw[nat, term]")
                              (("1" (INST? -1)
                                (("1" (REPLACE -1 1 NIL T)
                                  (("1" (LEMMA "map_nth_rw[nat, term]")
                                    (("1" (INST? -1)
                                      (("1" (REPLACE -1 1)
                                        (("1" (HIDE -1)
                                          (("1" (REWRITE "nth_from_min2max2")
                                            (("1" (REWRITE "nth_from_min2max2")
                                              (("1" (LEMMA "gt_select_delete")
                                                (("1" (INST? -1)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (EXPAND "nice_ind?" 1)
                                                      (("1" (HIDE 2)
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2"
                                                  (REWRITE "from_min2max_len1")
                                                  (("2"
                                                    (REWRITE
                                                     "num_arg_delete_ge1")
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REWRITE "from_min2max_len1")
                                              (("2" (HIDE 2)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "from_min2max_len1")
                                          (("2" (REWRITE "num_arg_delete_ge1")
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (REWRITE "from_min2max_len1")
                                  (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (REWRITE "get_args_len")
                          (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)
                         ("3" (ASSERT) NIL NIL))
                        NIL)
                       ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "gt_nth_remove2")
                    (("2" (INST -1 "n+1" "get_args(f)(t)" "i-1")
                      (("1" (ASSERT)
                        (("1" (PROP)
                          (("1" (REPLACE -1 2 NIL T)
                            (("1" (EXPAND "get_args" 2)
                              (("1" (LEMMA "map_nth_rw[nat, term]")
                                (("1" (INST? -1)
                                  (("1" (REPLACE -1 2 NIL T)
                                    (("1" (LEMMA "map_nth_rw[nat, term]")
                                      (("1" (INST? -1)
                                        (("1" (REPLACE -1 2)
                                          (("1" (HIDE -1)
                                            (("1" (REWRITE "nth_from_min2max2")
                                              (("1"
                                                (REWRITE "nth_from_min2max2")
                                                (("1"
                                                  (LEMMA "le_select_delete")
                                                  (("1" (INST? -1)
                                                    (("1" (ASSERT)
                                                      (("1" (HIDE 3)
                                                        (("1" (TYPEPRED "n")
                                                          (("1"
                                                            (REWRITE
                                                             "remove_len")
                                                            (("1"
                                                              (REWRITE
                                                               "get_args_len")
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (REWRITE
                                                               "get_args_len")
                                                              (("2" (HIDE -1 2)
                                                                (("2" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (HIDE -1 2)
                                                              (("3" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (REWRITE "from_min2max_len1")
                                                  (("2" (TYPEPRED "n")
                                                    (("2"
                                                      (REWRITE "remove_len")
                                                      (("1"
                                                        (REWRITE
                                                         "get_args_len")
                                                        (("1"
                                                          (REWRITE
                                                           "num_arg_delete_ge1")
                                                          NIL NIL))
                                                        NIL)
                                                       ("2"
                                                        (REWRITE
                                                         "get_args_len")
                                                        (("2" (HIDE 2 4)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (HIDE -1 4)
                                                        (("3" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (REWRITE "from_min2max_len1")
                                                (("2" (TYPEPRED "n")
                                                  (("2" (HIDE 3)
                                                    (("2"
                                                      (REWRITE "remove_len")
                                                      (("1"
                                                        (REWRITE
                                                         "get_args_len")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE -1)
                                                        (("2"
                                                          (REWRITE
                                                           "get_args_len")
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (HIDE -1)
                                                        (("3" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REWRITE "from_min2max_len1")
                                          (("2" (TYPEPRED "n")
                                            (("2"
                                              (REWRITE "num_arg_delete_ge1")
                                              (("2" (REWRITE "remove_len")
                                                (("1" (REWRITE "get_args_len")
                                                  NIL NIL)
                                                 ("2" (HIDE -1 4)
                                                  (("2"
                                                    (REWRITE "get_args_len")
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (HIDE -1 4)
                                                  (("3" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (REWRITE "from_min2max_len1")
                                    (("2" (TYPEPRED "n")
                                      (("2" (REWRITE "remove_len")
                                        (("1" (REWRITE "get_args_len")
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (REWRITE "get_args_len")
                                          (("2" (HIDE 4)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL)
                                         ("3" (HIDE -1 4)
                                          (("3" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "n")
                            (("2" (REWRITE "remove_len")
                              (("1" (REWRITE "get_args_len")
                                (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (REWRITE "get_args_len")
                                (("2" (HIDE -1 4) (("2" (GRIND) NIL NIL)) NIL))
                                NIL)
                               ("3" (HIDE -1 4) (("3" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|remove| DEF-DECL "list[T]" |list_theory| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|gt_nth_remove2| FORMULA-DECL NIL |list_theory| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|le_select_delete| FORMULA-DECL NIL |term_properties| NIL)
    (|gt_nth_remove| FORMULA-DECL NIL |list_theory| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|nth_from_min2max2| FORMULA-DECL NIL |list_theory| NIL)
    (|from_min2max_len1| FORMULA-DECL NIL |list_theory| NIL)
    (|gt_select_delete| FORMULA-DECL NIL |term_properties| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|remove_len| FORMULA-DECL NIL |list_theory| NIL)
    (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|get_args_len| FORMULA-DECL NIL |term_properties| NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|equal_lst_nth| FORMULA-DECL NIL |list_theory| NIL))
   SHOSTAK))
 (|get_args_get_term_from_args| 0
  (|get_args_get_term_from_args-1| NIL 3807217309
   ("" (MEASURE-INDUCT "length(args)" "args")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (HIDE -1)
          (("" (SKEEP)
            (("" (EXPAND "get_term_from_args" 2)
              (("" (LIFT-IF)
                (("" (PROP)
                  (("1" (EXPAND "map" 1)
                    (("1" (LIFT-IF)
                      (("1" (PROP)
                        (("1" (EXPAND "length" -1)
                          (("1" (LIFT-IF)
                            (("1" (PROP)
                              (("1" (ASSERT)
                                (("1" (EXPAND "length" -1)
                                  (("1" (LIFT-IF)
                                    (("1" (ASSERT)
                                      (("1" (PROP)
                                        (("1" (EXPAND "map" 3 1)
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "flatten" 3)
                                              (("1" (EXPAND "flatten" 3)
                                                (("1" (REWRITE "append_null")
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE 1 2 3 4 5 6)
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (REWRITE "get_args_pair")
                    (("2" (EXPAND "map" 2)
                      (("2" (LIFT-IF)
                        (("2" (PROP)
                          (("2" (EXPAND "flatten" 2)
                            (("2" (REVEAL -1)
                              (("2" (INST -1 "cdr(args1)")
                                (("2" (PROP)
                                  (("1" (INST? -1)
                                    (("1" (ASSERT)
                                      (("1" (HIDE 2) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|string| TYPE-EQ-DECL NIL |strings| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|get_term_from_args| DEF-DECL "term" |term_properties| NIL)
    (|flatten| DEF-DECL "list[T]" |list_theory| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|get_args_pair| FORMULA-DECL NIL |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|append_null| FORMULA-DECL NIL |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   SHOSTAK))
 (|remove_get_args_del| 0
  (|remove_get_args_del-1| NIL 3807539071
   ("" (SKEEP)
    (("" (LEMMA "equal_lst_nth")
      (("" (INST? -1)
        (("" (ASSERT)
          ((""
            (CASE "length(remove(get_args(f)(t), j)) =
       length(get_args(f)(delete(f, t)(1 + j)))")
            (("1" (ASSERT)
              (("1" (HIDE 2)
                (("1" (SKEEP)
                  (("1" (CASE "j > n")
                    (("1" (REWRITE "gt_nth_remove")
                      (("1" (EXPAND "get_args" 1)
                        (("1" (LEMMA "map_nth_rw[nat, term]")
                          (("1" (INST? -1)
                            (("1" (ASSERT)
                              (("1" (REPLACE -1 1)
                                (("1" (HIDE -1)
                                  (("1" (REWRITE "nth_from_min2max2")
                                    (("1" (REWRITE "map_nth_rw[nat, term]")
                                      (("1" (REWRITE "nth_from_min2max2")
                                        (("1" (LEMMA "gt_select_delete")
                                          (("1" (INST? -1)
                                            (("1" (ASSERT)
                                              (("1" (HIDE 2)
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REWRITE "from_min2max_len1")
                                          (("2" (HIDE 2)
                                            (("2" (LEMMA "num_arg_delete_ge1")
                                              (("2" (INST? -1)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REWRITE "from_min2max_len1")
                                        (("2" (LEMMA "num_arg_delete_ge1")
                                          (("2" (INST? -1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (REWRITE "from_min2max_len1")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (REWRITE "from_min2max_len1")
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (REWRITE "get_args_len") NIL NIL))
                      NIL)
                     ("2" (LEMMA "gt_nth_remove2")
                      (("2" (TYPEPRED "n")
                        (("2" (INST -2 "n+1" "get_args(f)(t)" "j")
                          (("2" (ASSERT)
                            (("2" (PROP)
                              (("1" (REPLACE -1 2)
                                (("1" (HIDE -1)
                                  (("1" (EXPAND "get_args" 2)
                                    (("1" (REWRITE "map_nth_rw[nat, term]")
                                      (("1" (REWRITE "map_nth_rw[nat, term]")
                                        (("1" (REWRITE "nth_from_min2max2")
                                          (("1" (REWRITE "nth_from_min2max2")
                                            (("1" (LEMMA "le_select_delete")
                                              (("1"
                                                (INST -1 "f" "1+j" "1+n" "t")
                                                (("1" (ASSERT)
                                                  (("1" (HIDE -2 3)
                                                    (("1" (LEMMA "remove_len")
                                                      (("1" (INST? -1)
                                                        (("1"
                                                          (REWRITE
                                                           "get_args_len")
                                                          (("1" (ASSERT)
                                                            (("1" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REWRITE "from_min2max_len1")
                                              (("2" (HIDE 3)
                                                (("2" (REWRITE "remove_len")
                                                  (("1"
                                                    (REWRITE "get_args_len")
                                                    (("1"
                                                      (REWRITE "get_args_len")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (REWRITE "get_args_len")
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (REWRITE "from_min2max_len1")
                                            (("2" (REWRITE "remove_len")
                                              (("1" (REWRITE "get_args_len")
                                                (("1" (REWRITE "get_args_len")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (REWRITE "get_args_len")
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REWRITE "get_args_len")
                                          (("2" (REWRITE "from_min2max_len1")
                                            (("2" (REWRITE "remove_len")
                                              (("2" (REWRITE "get_args_len")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REWRITE "from_min2max_len1")
                                        (("2" (REWRITE "remove_len")
                                          (("1" (REWRITE "get_args_len")
                                            (("1" (REWRITE "get_args_len")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (REWRITE "get_args_len") NIL
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (REWRITE "get_args_len")
                                (("2" (REWRITE "remove_len")
                                  (("1" (REWRITE "get_args_len")
                                    (("1" (REWRITE "get_args_len")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL)
                                   ("2" (REWRITE "get_args_len") NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 2)
              (("2" (REWRITE "remove_len")
                (("1" (REWRITE "get_args_len")
                  (("1" (REWRITE "get_args_len")
                    (("1" (LEMMA "num_arg_delete_ge1")
                      (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (REWRITE "get_args_len") NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|remove| DEF-DECL "list[T]" |list_theory| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (|get_args_len| FORMULA-DECL NIL |term_properties| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|nth_from_min2max2| FORMULA-DECL NIL |list_theory| NIL)
    (|nice_ind?| CONST-DECL "bool" |term_properties| NIL)
    (|nice_ind?| DEF-DECL "bool" |term_properties| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|gt_select_delete| FORMULA-DECL NIL |term_properties| NIL)
    (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|from_min2max_len1| FORMULA-DECL NIL |list_theory| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|gt_nth_remove| FORMULA-DECL NIL |list_theory| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|remove_len| FORMULA-DECL NIL |list_theory| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|le_select_delete| FORMULA-DECL NIL |term_properties| NIL)
    (|gt_nth_remove2| FORMULA-DECL NIL |list_theory| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|equal_lst_nth| FORMULA-DECL NIL |list_theory| NIL))
   SHOSTAK))
 (|get_args_remove_del| 0
  (|get_args_remove_del-1| NIL 3807528275
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "map" 1 1)
            (("2" (EXPAND "remove" 1 1)
              (("2" (LIFT-IF)
                (("2" (PROP)
                  (("1" (REWRITE "get_args_len")
                    (("1" (EXPAND "delete" 1)
                      (("1" (ASSERT)
                        (("1" (LIFT-IF)
                          (("1" (LEMMA "num_arg_ge1")
                            (("1" (HIDE -4)
                              (("1" (INST -1 "f" "hd") (("1" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "delete" 2)
                    (("2" (ASSERT)
                      (("2" (LIFT-IF)
                        (("2" (REWRITE "get_args_len")
                          (("2" (ASSERT)
                            (("2" (EXPAND "map" 2 2)
                              (("2" (LEMMA "remove_get_args_del")
                                (("2" (INST? -1)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "nth" -4)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (EXPAND "delete" 2)
                    (("3" (LIFT-IF)
                      (("3" (ASSERT)
                        (("3" (EXPAND "map" 2 2)
                          (("3" (INST -1 "f" "i-1" "j")
                            (("3" (ASSERT)
                              (("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|remove| DEF-DECL "list[list[T]]" |list_theory| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|delete| DEF-DECL "args" |term_properties| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|remove_get_args_del| FORMULA-DECL NIL |term_properties| NIL)
    (|get_args_len| FORMULA-DECL NIL |term_properties| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|get_ac_from_args_cor| 0
  (|get_ac_from_args_cor-1| NIL 3805735173
   ("" (MEASURE-INDUCT "length(args)" "args")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "get_ac_from_args" 2)
            (("" (EXPAND "get_term_from_args" 2)
              (("" (LIFT-IF)
                (("" (ASSERT)
                  (("" (PROP)
                    (("1" (EXPAND "simple_args?" -3)
                      (("1" (PROP)
                        (("1" (EXPAND "simple_term?")
                          (("1" (REWRITE "get_args_ac")
                            (("1" (ASSERT)
                              (("1" (REPLACE -3 1 RL)
                                (("1" (HIDE -2)
                                  (("1" (LEMMA "list_cons_eta[term]")
                                    (("1" (INST? -1) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REWRITE "get_args_ac") (("2" (POSTPONE) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

