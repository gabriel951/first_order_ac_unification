{
 "diophantine.lcm_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "lcm_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "lcm_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"nonempty?\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"empty?\" -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"a1 * a2\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"member\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(typepred \"a1\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(typepred \"a2\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(prop)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(expand \"divides\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst 1 \"a1\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_TCC3": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_TCC3",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_TCC3",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_TCC4": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_TCC4",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_TCC4",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_TCC5": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_TCC5",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_TCC5",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_TCC6": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_TCC6",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_TCC6",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_lst_dio_matrix_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_lst_dio_matrix_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_lst_dio_matrix_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_lst_dio_matrix_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_lst_dio_matrix_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_lst_dio_matrix_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.find_vectors_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "find_vectors_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "find_vectors_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.find_vectors_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "find_vectors_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "find_vectors_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.find_vectors_TCC3": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "find_vectors_TCC3",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "find_vectors_TCC3",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.find_vectors_TCC4": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "find_vectors_TCC4",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "find_vectors_TCC4",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.find_vectors_TCC5": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "find_vectors_TCC5",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "find_vectors_TCC5",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.dio_solver_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "dio_solver_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "dio_solver_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.dio_solver_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "dio_solver_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "dio_solver_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.prod_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "prod_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "prod_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.prod_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "prod_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "prod_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(termination-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.dio_matrix_correct?_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "dio_matrix_correct?_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "dio_matrix_correct?_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.dio_matrix_correct?_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "dio_matrix_correct?_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "dio_matrix_correct?_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(termination-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.dio_matrix_correct?_TCC3": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "dio_matrix_correct?_TCC3",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "dio_matrix_correct?_TCC3",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_new_value_lst_nth_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_new_value_lst_nth_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_new_value_lst_nth_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"get_new_value_lst_len\")",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_lst_dio_matrix_mem_nth_TCC1": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_lst_dio_matrix_mem_nth_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_lst_dio_matrix_mem_nth_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_lst_dio_matrix_mem_nth_TCC2": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_lst_dio_matrix_mem_nth_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_lst_dio_matrix_mem_nth_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"get_lst_dio_matrix_len\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "diophantine.get_lst_dio_matrix_mem_nth_TCC3": [
  {
   "info": {
    "theory": "diophantine",
    "formula": "get_lst_dio_matrix_mem_nth_TCC3",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b686104ce769907d8bc43d7b8a47b75fee2fb6a21527fbb59db72e664d10c1a5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "get_lst_dio_matrix_mem_nth_TCC3",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(rewrite \"get_lst_dio_matrix_len\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ]
}