%% TCCs associated with theory unification_alg
%% This file was automatically generated by PVS, please **do not modify** by hand.
unification_alg_TCCS: THEORY BEGIN

	% Termination TCC generated (at line 39, column 1) for
	% unify(new_unif_prb, new_sigma, vars2avoid)
	  % untried
	unify_TCC1: OBLIGATION
	FORALL (unif_prb: unif_prb, sigma: sub):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           var?(s) AND (NOT member(V(s), vars(t)))
	           IMPLIES
	           FORALL (sigma1:
	                     (cons?[[variable,
	                             term[constant, variable, f_symbol, ac_symbol]]]),
	                   new_sigma: list[basic_sub], new_unif_prb: unif_prb):
	             sigma1 = cons((V(s), t), null) AND
	              new_sigma = append(sigma1, sigma) AND
	               new_unif_prb = apply_sub(sigma1, unif_prb1)
	              IMPLIES
	              lex4(card[variable](vars_not_ac(new_unif_prb)),
	                   card[variable](vars_under2more(new_unif_prb)),
	                   card[term[constant, variable, f_symbol, ac_symbol]]
	                       (admissible_subterms(new_unif_prb)),
	                   size(new_unif_prb))
	               <
	               lex4(card[variable](vars_not_ac(unif_prb)),
	                    card[variable](vars_under2more(unif_prb)),
	                    card[term[constant, variable, f_symbol, ac_symbol]]
	                        (admissible_subterms(unif_prb)),
	                    size(unif_prb))
	
	% Termination TCC generated (at line 43, column 24) for
	% unify(unif_prb1, sigma, vars2avoid)
	  % untried
	unify_TCC2: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           NOT (var?(s) AND (NOT member(V(s), vars(t))))
	           IMPLIES
	           FORALL (a: constant):
	             t = const(a) AND s = const(a) IMPLIES
	              lex4(card[variable](vars_not_ac(unif_prb1)),
	                   card[variable](vars_under2more(unif_prb1)),
	                   card[term[constant, variable, f_symbol, ac_symbol]]
	                       (admissible_subterms(unif_prb1)),
	                   size(unif_prb1))
	               <
	               lex4(card[variable](vars_not_ac(unif_prb)),
	                    card[variable](vars_under2more(unif_prb)),
	                    card[term[constant, variable, f_symbol, ac_symbol]]
	                        (admissible_subterms(unif_prb)),
	                    size(unif_prb))
	
	% Termination TCC generated (at line 52, column 5) for
	% unify(new_unif_prb, new_sigma, vars2avoid)
	  % untried
	unify_TCC3: OBLIGATION
	FORALL (unif_prb: unif_prb, sigma: sub):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           NOT (var?(s) AND (NOT member(V(s), vars(t))))
	           IMPLIES
	           FORALL (X: variable):
	             t = variable(X) AND (NOT member(X, vars(s))) IMPLIES
	              FORALL (sigma1:
	                        (cons?[[variable,
	                                term[constant, variable, f_symbol,
	                                     ac_symbol]]]),
	                      new_sigma: list[basic_sub], new_unif_prb: unif_prb):
	                sigma1 = cons((X, s), null) AND
	                 new_sigma = append(sigma1, sigma) AND
	                  new_unif_prb = apply_sub(sigma1, unif_prb1)
	                 IMPLIES
	                 lex4(card[variable](vars_not_ac(new_unif_prb)),
	                      card[variable](vars_under2more(new_unif_prb)),
	                      card[term[constant, variable, f_symbol, ac_symbol]]
	                          (admissible_subterms(new_unif_prb)),
	                      size(new_unif_prb))
	                  <
	                  lex4(card[variable](vars_not_ac(unif_prb)),
	                       card[variable](vars_under2more(unif_prb)),
	                       card[term[constant, variable, f_symbol, ac_symbol]]
	                           (admissible_subterms(unif_prb)),
	                       size(unif_prb))
	
	% Termination TCC generated (at line 53, column 30) for
	% unify(unif_prb1, sigma, vars2avoid)
	  % untried
	unify_TCC4: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           NOT (var?(s) AND (NOT member(V(s), vars(t))))
	           IMPLIES
	           FORALL (X: variable):
	             t = variable(X) AND member(X, vars(s)) AND s = variable(X) IMPLIES
	              lex4(card[variable](vars_not_ac(unif_prb1)),
	                   card[variable](vars_under2more(unif_prb1)),
	                   card[term[constant, variable, f_symbol, ac_symbol]]
	                       (admissible_subterms(unif_prb1)),
	                   size(unif_prb1))
	               <
	               lex4(card[variable](vars_not_ac(unif_prb)),
	                    card[variable](vars_under2more(unif_prb)),
	                    card[term[constant, variable, f_symbol, ac_symbol]]
	                        (admissible_subterms(unif_prb)),
	                    size(unif_prb))
	
	% Termination TCC generated (at line 58, column 20) for
	% unify(unif_prb1, sigma, vars2avoid)
	  % untried
	unify_TCC5: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	               (t = unif_pair`1) AND (s = unif_pair`2)
	           AND (NOT (var?(s) AND (NOT member(V(s), vars(t))))) AND (t = unit)
	           AND (s = unit)
	           IMPLIES
	           lex4(card[variable](vars_not_ac(unif_prb1)),
	                card[variable](vars_under2more(unif_prb1)),
	                card[term[constant, variable, f_symbol, ac_symbol]]
	                    (admissible_subterms(unif_prb1)),
	                size(unif_prb1))
	            <
	            lex4(card[variable](vars_not_ac(unif_prb)),
	                 card[variable](vars_under2more(unif_prb)),
	                 card[term[constant, variable, f_symbol, ac_symbol]]
	                     (admissible_subterms(unif_prb)),
	                 size(unif_prb))
	
	% Termination TCC generated (at line 67, column 8) for
	% unify(new_unif_prb, sigma, vars2avoid)
	  % untried
	unify_TCC6: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           NOT (var?(s) AND (NOT member(V(s), vars(t))))
	           IMPLIES
	           FORALL (t1, t2: term[constant, variable, f_symbol, ac_symbol]):
	             t = pair(t1, t2) AND pair?(s) IMPLIES
	              FORALL (unif_pair1:
	                        [term[constant, variable, f_symbol, ac_symbol],
	                         term[constant, variable, f_symbol, ac_symbol]],
	                      unif_pair2:
	                        [term[constant, variable, f_symbol, ac_symbol],
	                         term[constant, variable, f_symbol, ac_symbol]],
	                      new_unif_prb:
	                        (cons?[[term[constant, variable, f_symbol, ac_symbol],
	                                term[constant, variable, f_symbol,
	                                     ac_symbol]]])):
	                unif_pair1 = (t1, term1(s)) AND
	                 unif_pair2 = (t2, term2(s)) AND
	                  new_unif_prb = cons(unif_pair1, cons(unif_pair2, unif_prb1))
	                 IMPLIES
	                 lex4(card[variable](vars_not_ac(new_unif_prb)),
	                      card[variable](vars_under2more(new_unif_prb)),
	                      card[term[constant, variable, f_symbol, ac_symbol]]
	                          (admissible_subterms(new_unif_prb)),
	                      size(new_unif_prb))
	                  <
	                  lex4(card[variable](vars_not_ac(unif_prb)),
	                       card[variable](vars_under2more(unif_prb)),
	                       card[term[constant, variable, f_symbol, ac_symbol]]
	                           (admissible_subterms(unif_prb)),
	                       size(unif_prb))
	
	% Termination TCC generated (at line 74, column 5) for
	% unify(new_unif_prb, sigma, vars2avoid)
	  % untried
	unify_TCC7: OBLIGATION
	FORALL (unif_prb: unif_prb):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           NOT (var?(s) AND (NOT member(V(s), vars(t))))
	           IMPLIES
	           FORALL (f: f_symbol,
	                   arg: term[constant, variable, f_symbol, ac_symbol]):
	             t = app(f, arg) AND app?(s) AND NOT f /= f_sym(s) IMPLIES
	              FORALL (new_unif_pair:
	                        [term[constant, variable, f_symbol, ac_symbol],
	                         term[constant, variable, f_symbol, ac_symbol]],
	                      new_unif_prb:
	                        (cons?[[term[constant, variable, f_symbol, ac_symbol],
	                                term[constant, variable, f_symbol,
	                                     ac_symbol]]])):
	                new_unif_pair = (arg, arg(s)) AND
	                 new_unif_prb = cons(new_unif_pair, unif_prb1)
	                 IMPLIES
	                 lex4(card[variable](vars_not_ac(new_unif_prb)),
	                      card[variable](vars_under2more(new_unif_prb)),
	                      card[term[constant, variable, f_symbol, ac_symbol]]
	                          (admissible_subterms(new_unif_prb)),
	                      size(new_unif_prb))
	                  <
	                  lex4(card[variable](vars_not_ac(unif_prb)),
	                       card[variable](vars_under2more(unif_prb)),
	                       card[term[constant, variable, f_symbol, ac_symbol]]
	                           (admissible_subterms(unif_prb)),
	                       size(unif_prb))
	
	% Termination-subtype TCC generated (at line 81, column 31) for  input_lst
	% expected type  [{z: [unif_prb, sub, finite_set[variable]] |
	%     lex4(card(vars_not_ac(z`1)),
	%          card(vars_under2more(z`1)),
	%          card(admissible_subterms(z`1)), size(z`1))
	%      <
	%      lex4(card(vars_not_ac(unif_prb)),
	%           card(vars_under2more(unif_prb)),
	%           card(admissible_subterms(unif_prb)),
	%           size(unif_prb))} ->
	%    list[sub]]
	  % untried
	unify_TCC8: OBLIGATION
	FORALL (unif_prb: unif_prb, sigma: sub, vars2avoid: finite_set[variable]):
	    NOT null?(unif_prb) IMPLIES
	     FORALL (unif_pair: unif_pair, unif_prb1: unif_prb):
	       unif_pair = choose_unif_pair(unif_prb)`1 AND
	        unif_prb1 = choose_unif_pair(unif_prb)`2
	        IMPLIES
	        FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	                s: term[constant, variable, f_symbol, ac_symbol]):
	          (t = unif_pair`1 AND s = unif_pair`2) AND
	           NOT (var?(s) AND (NOT member(V(s), vars(t))))
	           IMPLIES
	           FORALL (f: ac_symbol,
	                   ac_arg: term[constant, variable, f_symbol, ac_symbol]):
	             t = ac_app(f, ac_arg) AND ac_app?(s) AND NOT f /= ac_sym(s)
	              IMPLIES
	              FORALL (input_lst: list[ac_sol_simp]):
	                input_lst =
	                 apply_ac_step(simplify(unif_prb), null, sigma, vars2avoid)
	                 IMPLIES
	                 every[[list[unif_pair], list[basic_sub], finite_set[variable]]]
	                     (LAMBDA (z: [unif_prb, sub, finite_set[variable]]):
	                        lex4(card[variable](vars_not_ac(z`1)),
	                             card[variable](vars_under2more(z`1)),
	                             card[term[constant, variable, f_symbol, ac_symbol]]
	                                 (admissible_subterms(z`1)),
	                             size(z`1))
	                         <
	                         lex4(card[variable](vars_not_ac(unif_prb)),
	                              card[variable](vars_under2more(unif_prb)),
	                              card[term[constant,
	                                        variable,
	                                        f_symbol,
	                                        ac_symbol]]
	                                  (admissible_subterms(unif_prb)),
	                              size(unif_prb)))
	                     (input_lst)

END unification_alg_TCCS