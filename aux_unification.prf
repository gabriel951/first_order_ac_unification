(|aux_unification|
 (|elim_com_arg_pos_TCC1| 0
  (|elim_com_arg_pos_TCC1-1| NIL 3804670529 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL))
 (|elim_com_arg_pos| 0
  (|elim_com_arg_pos-1| NIL 3804681088
   ("" (SKEEP)
    (("" (EXPAND "elim_com_arg" -1)
      (("" (LEMMA "select_args_pos2[Term]")
        (("" (INST? -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|elim_com_arg| CONST-DECL "[list[Term], list[nat], list[nat]]"
     |aux_unification| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|get_args_coef_ac| CONST-DECL "[list[Term], list[nat]]" |term_properties|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |Term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|select_args_pos2| FORMULA-DECL NIL |list_theory| NIL))
   SHOSTAK))
 (|if_non_var_const2_col?_TCC1| 0
  (|if_non_var_const2_col?_TCC1-1| NIL 3804667940 ("" (SUBTYPE-TCC) NIL NIL)
   NIL SHOSTAK))
 (|get_nice_submatrices_TCC1| 0
  (|get_nice_submatrices_TCC1-1| NIL 3804667940 ("" (TERMINATION-TCC) NIL NIL)
   NIL SHOSTAK))
 (|get_nice_submatrices_TCC2| 0
  (|get_nice_submatrices_TCC2-1| NIL 3804667940 ("" (TCC))
   ((|nice_submatrix?| CONST-DECL "bool" |aux_unification| NIL)
    (|if_non_var_const2?| CONST-DECL "bool" |aux_unification| NIL)
    (|const1?| CONST-DECL "bool" |aux_unification| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_nice_submatrices_TCC3| 0
  (|get_nice_submatrices_TCC3-1| NIL 3804667940 ("" (TCC))
   ((|nice_submatrix?| CONST-DECL "bool" |aux_unification| NIL)
    (|if_non_var_const2?| CONST-DECL "bool" |aux_unification| NIL)
    (|const1?| CONST-DECL "bool" |aux_unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_nice_submatrices_TCC4| 0
  (|get_nice_submatrices_TCC4-1| NIL 3804667940 ("" (TCC))
   ((|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|solve_ac_TCC1| 0
  (|solve_ac_TCC1-2| "" 3804670781
   ("" (SKEEP)
    (("" (LEMMA "every_nth[number]")
      (("" (INST? -1)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (SKEEP)
              (("" (TYPEPRED "mult_t1")
                (("" (LEMMA "every_nth[number]")
                  (("" (INST? -1)
                    (("" (ASSERT)
                      (("" (HIDE -2)
                        (("" (INST -1 "i")
                          (("" (FLATTEN)
                            (("" (ASSERT)
                              (("" (HIDE -1 -2 -3 -4)
                                (("" (LEMMA "elim_com_arg_pos")
                                  (("" (INST? -1)
                                    (("" (INST? -1)
                                      (("" (ASSERT)
                                        (("" (HIDE -1 2)
                                          (("" (REPLACE -2 1 RL)
                                            (("" (TYPEPRED "i")
                                              (("" (LEMMA "member_nth[number]")
                                                (("" (INST? -1)
                                                  (("" (ASSERT) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|member_nth| FORMULA-DECL NIL |list_theory| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|elim_com_arg_pos| FORMULA-DECL NIL |aux_unification| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|every_nth| FORMULA-DECL NIL |list_props| NIL))
   SHOSTAK)
  (|solve_ac_TCC1-1| NIL 3804667940
   ("" (SKEEP)
    (("" (LEMMA "every_nth[number]")
      (("" (INST? -1)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (SKEEP)
              (("" (TYPEPRED "mult_t1")
                (("" (LEMMA "every_nth[number]")
                  (("" (INST? -1)
                    (("" (ASSERT)
                      (("" (HIDE -2)
                        (("" (INST -1 "i")
                          (("" (FLATTEN)
                            (("" (ASSERT)
                              (("" (HIDE -1 -2 -3 -4)
                                (("" (LEMMA "elim_com_arg_pos")
                                  (("" (INST? -1)
                                    (("" (TYPEPRED "i")
                                      (("" (TYPEPRED "mult_t1")
                                        (("" (HIDE -1)
                                          (("" (TYPEPRED "nth(mult_t1, i)")
                                            (("1" (POSTPONE) NIL NIL)
                                             ("2" (ASSERT)
                                              (("2" (POSTPONE) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|solve_ac_TCC2| 0
  (|solve_ac_TCC2-1| NIL 3804667940 ("" (SUBTYPE-TCC) NIL NIL) NIL SHOSTAK))
 (|apply_elimvar_TCC1| 0
  (|apply_elimvar_TCC1-1| NIL 3804667940 ("" (TCC))
   ((|elimvar| CONST-DECL "[Sub, Ac_sol]" |aux_unification| NIL)) NIL))
 (|apply_elimvar_TCC2| 0
  (|apply_elimvar_TCC2-1| NIL 3804667940 ("" (TCC))
   ((|elimvar| CONST-DECL "[Sub, Ac_sol]" |aux_unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL))
   NIL))
 (|apply_elimvar_TCC3| 0
  (|apply_elimvar_TCC3-1| NIL 3804667940 ("" (TCC)) NIL NIL))
 (|construct_input_lst_TCC1| 0
  (|construct_input_lst_TCC1-1| NIL 3804667940 ("" (TCC))
   ((|construct_input| CONST-DECL "[Unif_prb, Sub, set[Variable]]"
     |aux_unification| NIL)
    (|list2set| DEF-DECL "set[T]" |list2set| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL))
   NIL))
 (|construct_input_lst_TCC2| 0
  (|construct_input_lst_TCC2-1| NIL 3804667940 ("" (TCC))
   ((|construct_input| CONST-DECL "[Unif_prb, Sub, set[Variable]]"
     |aux_unification| NIL)
    (|list2set| DEF-DECL "set[T]" |list2set| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL))
   NIL))
 (|construct_input_lst_TCC3| 0
  (|construct_input_lst_TCC3-1| NIL 3804667940 ("" (TCC)) NIL NIL)))

