(|aux_unification|
 (|elim_com_arg_pos_TCC1| 0
  (|elim_com_arg_pos_TCC1-1| NIL 3804670529
   ("" (SKEEP)
    (("" (EXPAND "elim_com_arg" -1)
      (("" (LEMMA "select_args_pos2[Term]")
        (("" (INST? -1) (("" (ASSERT) (("" (POSTPONE) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|elim_com_arg_pos| 0
  (|elim_com_arg_pos-1| NIL 3804681088
   ("" (SKEEP)
    (("" (EXPAND "elim_com_arg" -1)
      (("" (LEMMA "select_args_pos2[Term]")
        (("" (INST? -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|select_args_pos2| FORMULA-DECL NIL |list_theory| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|get_args_coef_ac| CONST-DECL "[list[Term], list[nat]]" |term_properties|
     NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|elim_com_arg| CONST-DECL "[list[Term], list[nat], list[nat]]"
     |aux_unification| NIL))
   SHOSTAK))
 (|elim_com_arg_pos2_TCC1| 0
  (|elim_com_arg_pos2_TCC1-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL))
 (|elim_com_arg_pos2| 0
  (|elim_com_arg_pos2-1| NIL 3804751702
   ("" (SKEEP)
    (("" (EXPAND "elim_com_arg" -1)
      (("" (LEMMA "select_args_pos2[Term]")
        (("" (INST? -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|elim_com_arg| CONST-DECL "[list[Term], list[nat], list[nat]]"
     |aux_unification| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|get_args_coef_ac| CONST-DECL "[list[Term], list[nat]]" |term_properties|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|select_args_pos2| FORMULA-DECL NIL |list_theory| NIL))
   SHOSTAK))
 (|if_non_var_const2_col?_TCC1| 0
  (|if_non_var_const2_col?_TCC1-1| NIL 3804667940 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|get_nice_submatrices_TCC1| 0
  (|get_nice_submatrices_TCC1-1| NIL 3804667940 ("" (TERMINATION-TCC) NIL NIL)
   ((|nice_submatrix?| CONST-DECL "bool" |aux_unification| NIL)
    (|if_non_var_const2?| CONST-DECL "bool" |aux_unification| NIL)
    (|const1?| CONST-DECL "bool" |aux_unification| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|get_nice_submatrices_TCC2| 0
  (|get_nice_submatrices_TCC2-1| NIL 3804667940 ("" (TCC))
   ((|nice_submatrix?| CONST-DECL "bool" |aux_unification| NIL)
    (|if_non_var_const2?| CONST-DECL "bool" |aux_unification| NIL)
    (|const1?| CONST-DECL "bool" |aux_unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_nice_submatrices_TCC3| 0
  (|get_nice_submatrices_TCC3-1| NIL 3804667940 ("" (TCC))
   ((|nice_submatrix?| CONST-DECL "bool" |aux_unification| NIL)
    (|if_non_var_const2?| CONST-DECL "bool" |aux_unification| NIL)
    (|const1?| CONST-DECL "bool" |aux_unification| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_nice_submatrices_TCC4| 0
  (|get_nice_submatrices_TCC4-1| NIL 3804667940 ("" (TCC))
   ((|nice_submatrix?| CONST-DECL "bool" |aux_unification| NIL)
    (|if_non_var_const2?| CONST-DECL "bool" |aux_unification| NIL)
    (|const1?| CONST-DECL "bool" |aux_unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_nice_submatrices_TCC5| 0
  (|get_nice_submatrices_TCC5-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL)
   ((|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|add_new_arg_TCC1| 0
  (|add_new_arg_TCC1-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|add_new_arg_TCC2| 0
  (|add_new_arg_TCC2-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL)
   ((|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|add_new_arg_TCC3| 0
  (|add_new_arg_TCC3-1| NIL 3804751239 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|add_new_arg_TCC4| 0
  (|add_new_arg_TCC4-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_pre_new_args_TCC1| 0
  (|get_pre_new_args_TCC1-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL)
   ((|get_new_var| CONST-DECL "Variable" |aux_unification| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_pre_new_args_TCC2| 0
  (|get_pre_new_args_TCC2-1| NIL 3804751239 ("" (TERMINATION-TCC) NIL NIL)
   ((|get_new_var| CONST-DECL "Variable" |aux_unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (|Args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|get_pre_new_args_TCC3| 0
  (|get_pre_new_args_TCC3-1| NIL 3804751239 ("" (SUBTYPE-TCC) NIL NIL)
   ((|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|solve_ac_TCC1| 0
  (|solve_ac_TCC1-2| "" 3804670781
   ("" (SKEEP)
    (("" (LEMMA "every_nth[number]")
      (("" (INST? -1)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (SKEEP)
              (("" (TYPEPRED "mult_t1")
                (("" (LEMMA "every_nth[number]")
                  (("" (INST? -1)
                    (("" (ASSERT)
                      (("" (HIDE -2)
                        (("" (INST -1 "i")
                          (("" (FLATTEN)
                            (("" (ASSERT)
                              (("" (HIDE -1 -2 -3 -4)
                                (("" (LEMMA "elim_com_arg_pos")
                                  (("" (INST? -1)
                                    (("" (INST? -1)
                                      (("" (ASSERT)
                                        (("" (HIDE -1 2)
                                          (("" (REPLACE -2 1 RL)
                                            (("" (TYPEPRED "i")
                                              (("" (LEMMA "member_nth[number]")
                                                (("" (INST? -1)
                                                  (("" (ASSERT) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|every_nth| FORMULA-DECL NIL |list_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|elim_com_arg_pos| FORMULA-DECL NIL |aux_unification| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|member_nth| FORMULA-DECL NIL |list_theory| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL
    (|Term| TYPE-DECL NIL |Term_adt| NIL)
    (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL) (> CONST-DECL "bool" |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK)
  (|solve_ac_TCC1-1| NIL 3804667940
   ("" (SKEEP)
    (("" (LEMMA "every_nth[number]")
      (("" (INST? -1)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (SKEEP)
              (("" (TYPEPRED "mult_t1")
                (("" (LEMMA "every_nth[number]")
                  (("" (INST? -1)
                    (("" (ASSERT)
                      (("" (HIDE -2)
                        (("" (INST -1 "i")
                          (("" (FLATTEN)
                            (("" (ASSERT)
                              (("" (HIDE -1 -2 -3 -4)
                                (("" (LEMMA "elim_com_arg_pos")
                                  (("" (INST? -1)
                                    (("" (TYPEPRED "i")
                                      (("" (TYPEPRED "mult_t1")
                                        (("" (HIDE -1)
                                          (("" (TYPEPRED "nth(mult_t1, i)")
                                            (("1" (POSTPONE) NIL NIL)
                                             ("2" (ASSERT)
                                              (("2" (POSTPONE) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|solve_ac_TCC2| 0
  (|solve_ac_TCC2-1| NIL 3804667940 ("" (SUBTYPE-TCC) NIL NIL) NIL SHOSTAK))
 (|apply_elimvar_TCC1| 0
  (|apply_elimvar_TCC1-1| NIL 3804667940 ("" (TCC))
   ((|elimvar| CONST-DECL "[Sub, Ac_sol]" |aux_unification| NIL)) NIL))
 (|apply_elimvar_TCC2| 0
  (|apply_elimvar_TCC2-1| NIL 3804667940 ("" (TCC))
   ((|elimvar| CONST-DECL "[Sub, Ac_sol]" |aux_unification| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL))
   NIL))
 (|apply_elimvar_TCC3| 0
  (|apply_elimvar_TCC3-1| NIL 3804667940 ("" (TCC)) NIL NIL))
 (|construct_input_lst_TCC1| 0
  (|construct_input_lst_TCC1-1| NIL 3804667940 ("" (TCC))
   ((|construct_input| CONST-DECL "[Unif_prb, Sub, set[Variable]]"
     |aux_unification| NIL)
    (|list2set| DEF-DECL "set[T]" |list2set| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|construct_input_lst_TCC2| 0
  (|construct_input_lst_TCC2-1| NIL 3804667940 ("" (TCC))
   ((|construct_input| CONST-DECL "[Unif_prb, Sub, set[Variable]]"
     |aux_unification| NIL)
    (|list2set| DEF-DECL "set[T]" |list2set| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|construct_input_lst_TCC3| 0
  (|construct_input_lst_TCC3-1| NIL 3804667940 ("" (TCC)) NIL NIL))
 (|solve_ac_soundness| 0
  (|solve_ac_soundness-1| NIL 3805038351
   ("" (SKEEP)
    (("" (EXPAND "solve_ac")
      (("" (NAME-REPLACE "args_" "elim_com_arg(t1, t2, sym)`1")
        (("" (NAME-REPLACE "mult_t1_" "elim_com_arg(t1, t2, sym)`2")
          (("" (NAME-REPLACE "mult_t2_" "elim_com_arg(t1, t2, sym)`3")
            (("" (EXPAND "args_")
              (("" (EXPAND "elim_com_arg")
                ((""
                  (NAME-REPLACE "args1" "select_args(get_args_coef_ac(t1,
                                                                         sym)`1,
                                                        get_args_coef_ac(t1,
                                                                         sym)`2,
                                                        get_args_coef_ac(t2,
                                                                         sym)`1,
                                                        get_args_coef_ac(t2,
                                                                         sym)`2)`1")
                  ((""
                    (NAME-REPLACE "args2" "select_args(get_args_coef_ac(t2,
                                                                         sym)`1,
                                                        get_args_coef_ac(t2,
                                                                         sym)`2,
                                                        get_args_coef_ac(t1,
                                                                         sym)`1,
                                                        get_args_coef_ac(t1,
                                                                         sym)`2)`1")
                    (("" (EXPAND "unifies?" 1) (("" (POSTPONE) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

