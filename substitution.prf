(|substitution|
 (|subs_TCC1| 0
  (|subs_TCC1-1| NIL 3804712624 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| TERMINATION
    "substitution.subs(substitution.sigma_basic, substitution.t1)" "NIL")))
 (|subs_TCC2| 0
  (|subs_TCC2-1| NIL 3804712624 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| TERMINATION
    "substitution.subs(substitution.sigma_basic, substitution.t2)" "NIL")))
 (|subs_TCC3| 0
  (|subs_TCC3-1| NIL 3804712624 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| TERMINATION
    "substitution.subs(substitution.sigma_basic, substitution.arg)" "NIL")))
 (|subs_TCC4| 0
  (|subs_TCC4-1| NIL 3804712624 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| TERMINATION
    "substitution.subs(substitution.sigma_basic, substitution.arg)" "NIL")))
 (|subs_TCC5| 0
  (|subs_TCC5-1| NIL 3805034157 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|subs| TERMINATION "substitution.subs(substitution.tail)" "NIL")))
 (|subs_TCC6| 0
  (|subs_TCC6-1| NIL 3805815347 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| SUBTYPE "substitution.args"
    "(list_adt[term[constant, variable, f_symbol, ac_symbol]].cons?)")))
 (|subs_TCC7| 0
  (|subs_TCC7-1| NIL 3805815347 ("" (TERMINATION-TCC) NIL NIL)
   ((|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| TERMINATION
    "substitution.subs(substitution.sigma)(list_adt[term[constant, variable, f_symbol, ac_symbol]].cdr(substitution.args))"
    "NIL")))
 (|subs_TCC8| 0
  (|subs_TCC8-1| NIL 3805815347 ("" (SUBTYPE-TCC) NIL NIL)
   ((|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|subs| SUBTYPE "substitution.args"
    "(list_adt[term[constant, variable, f_symbol, ac_symbol]].cons?)")))
 (|subs_const| 0
  (|subs_const-1| NIL 3805817833
   ("" (INDUCT "sigma") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|const| ADT-CONSTRUCTOR-DECL "[constant -> (const?)]" |term_adt| NIL)
    (|const?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_unit| 0
  (|subs_unit-1| NIL 3805817862
   ("" (INDUCT "sigma") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
   ((|subs| DEF-DECL "term" |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|unit| ADT-CONSTRUCTOR-DECL "(unit?)" |term_adt| NIL)
    (|unit?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_pair| 0
  (|subs_pair-1| NIL 3805818035
   ("" (INDUCT "sigma") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
   ((|subs| DEF-DECL "term" |substitution| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_app| 0
  (|subs_app-1| NIL 3807643979
   ("" (INDUCT "sigma")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "subs" 1)
            (("2" (INST? -1)
              (("2" (REPLACE -1 1)
                (("2" (EXPAND "subs" 1 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|subs| DEF-DECL "term" |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|app| ADT-CONSTRUCTOR-DECL "[[f_symbol, term] -> (app?)]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_ac| 0
  (|subs_ac-1| NIL 3805815755
   ("" (INDUCT "sigma")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("head" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "subs" 1 1)
            (("2" (INST? -1)
              (("2" (REPLACE -1 1)
                (("2" (HIDE -1)
                  (("2" (EXPAND "subs" 1 1)
                    (("2" (EXPAND "subs" 1 3) (("2" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|subs| DEF-DECL "term" |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|ac_app| ADT-CONSTRUCTOR-DECL "[[ac_symbol, term] -> (ac_app?)]"
     |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_len| 0
  (|subs_len-1| NIL 3807636360
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail")) (("2" (PROP) (("2" (GRIND) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_append| 0
  (|subs_append-1| NIL 3807719446
   ("" (INDUCT "args1")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "append" 1 1)
            (("2" (EXPAND "subs" 1 1)
              (("2" (EXPAND "subs" 1 3)
                (("2" (EXPAND "append" 1 2)
                  (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_map| 0
  (|subs_map-1| NIL 3807733475
   ("" (INDUCT "args") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|map| ADT-DEF-DECL "list[T1]" |list_adt_map| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_get_term_from_args| 0
  (|subs_get_term_from_args-1| NIL 3805815348
   ("" (INDUCT "args1")
    (("1" (SKEEP)
      (("1" (EXPAND "get_term_from_args" 1 1)
        (("1" (EXPAND "subs" 1 2)
          (("1" (REWRITE "subs_unit") (("1" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("2" (SKOLEM 1 ("t" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "get_term_from_args" 1 1)
            (("2" (LIFT-IF)
              (("2" (PROP)
                (("1" (CASE "null?(tail)")
                  (("1" (EXPAND "subs" 1 2)
                    (("1" (EXPAND "subs" 1 3)
                      (("1" (ASSERT)
                        (("1" (EXPAND "get_term_from_args" 1)
                          (("1" (LIFT-IF)
                            (("1" (ASSERT)
                              (("1" (EXPAND "length" 1 1)
                                (("1" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -2 2) (("2" (GRIND) NIL NIL)) NIL))
                  NIL)
                 ("2" (LEMMA "subs_pair")
                  (("2" (INST? -1)
                    (("2" (REPLACE -1 2)
                      (("2" (HIDE -1)
                        (("2" (EXPAND "subs" 2 3)
                          (("2" (EXPAND "get_term_from_args" 2 2)
                            (("2" (LIFT-IF)
                              (("2" (PROP)
                                (("1" (HIDE -2 1)
                                  (("1" (GRIND)
                                    (("1" (EXPAND "subs" -1)
                                      (("1" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|subs_pair| FORMULA-DECL NIL |substitution| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|subs_unit| FORMULA-DECL NIL |substitution| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|get_term_from_args| DEF-DECL "term" |term_properties| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|subs_get_ac_from_args| 0
  (|subs_get_ac_from_args-1| NIL 3805818725
   ("" (SKEEP)
    (("" (EXPAND "get_ac_from_args" 1 1)
      (("" (REWRITE "subs_ac")
        (("" (EXPAND "get_ac_from_args")
          (("" (LEMMA "subs_get_term_from_args")
            (("" (INST? -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|get_ac_from_args| CONST-DECL "term" |term_properties| NIL)
    (|subs_get_term_from_args| FORMULA-DECL NIL |substitution| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|get_term_from_args| DEF-DECL "term" |term_properties| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|subs_ac| FORMULA-DECL NIL |substitution| NIL))
   SHOSTAK))
 (|subs_args_nth_TCC1| 0
  (|subs_args_nth_TCC1-1| NIL 3807635947
   ("" (SKEEP) (("" (REWRITE "subs_len") NIL NIL)) NIL)
   ((|subs_len| FORMULA-DECL NIL |substitution| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL))
   NIL
   (|subs_args_nth| SUBTYPE "substitution.i"
    "below[length[term[constant, variable, f_symbol, ac_symbol]](subs(sigma)(args))]")))
 (|subs_args_nth| 0
  (|subs_args_nth-1| NIL 3807635947
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "nth" 1 1)
            (("2" (LIFT-IF)
              (("2" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (EXPAND "subs" 2 1)
                  (("2" (EXPAND "nth" 2 2)
                    (("2" (LIFT-IF)
                      (("2" (ASSERT)
                        (("2" (INST? -1) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2) (("3" (SKEEP) (("3" (REWRITE "subs_len") NIL NIL)) NIL))
      NIL))
    NIL)
   ((|subs_len| FORMULA-DECL NIL |substitution| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK))
 (|subs_remove| 0
  (|subs_remove-1| NIL 3807718457
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "subs" 1 1)
            (("2" (EXPAND "remove" 1 1)
              (("2" (LIFT-IF)
                (("2" (ASSERT)
                  (("2" (PROP)
                    (("1" (EXPAND "remove" 1) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (EXPAND "remove" 2 2)
                      (("2" (ASSERT)
                        (("2" (EXPAND "subs" 2 3)
                          (("2" (INST -1 "i-1" "sigma") (("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|remove| DEF-DECL "list[T]" |list_theory| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|args_subs_ac| 0
  (|args_subs_ac-1| NIL 3807641380
   ("" (INDUCT "t")
    (("1" (SKOLEM 1 "a")
      (("1" (SKEEP)
        (("1" (REWRITE "subs_const")
          (("1" (REWRITE "get_args_not_pair_ac")
            (("1" (EXPAND "map" 1 2)
              (("1" (EXPAND "map" 1 2)
                (("1" (REWRITE "subs_const")
                  (("1" (EXPAND "map" 1)
                    (("1" (EXPAND "map" 1)
                      (("1" (REWRITE "get_args_not_pair_ac")
                        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOLEM 1 "X")
      (("2" (SKEEP)
        (("2" (NAME-REPLACE "t1" "subs(sigma)(variable(X))")
          (("2" (LEMMA "get_args_not_pair_ac")
            (("2" (INST -1 "f" "variable(X)")
              (("2" (ASSERT)
                (("2" (PROP)
                  (("1" (REPLACE -1 1)
                    (("1" (EXPAND "map" 1 2)
                      (("1" (EXPAND "map" 1 2)
                        (("1" (REVEAL -2)
                          (("1" (REPLACE -1 1)
                            (("1" (EXPAND "map")
                              (("1" (EXPAND "map" 1)
                                (("1" (EXPAND "flatten")
                                  (("1" (EXPAND "flatten")
                                    (("1" (REWRITE "append_null") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP)
      (("3" (REWRITE "subs_unit")
        (("3" (REWRITE "get_args_not_pair_ac")
          (("1" (EXPAND "map" 1 2)
            (("1" (EXPAND "map" 1 2)
              (("1" (REWRITE "subs_unit")
                (("1" (EXPAND "map" 1)
                  (("1" (EXPAND "map" 1)
                    (("1" (EXPAND "flatten") (("1" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKOLEM 1 ("t1" "t2"))
      (("4" (PROP)
        (("4" (SKEEP)
          (("4" (REWRITE "subs_pair")
            (("4" (REWRITE "get_args_pair")
              (("4" (REWRITE "get_args_pair")
                (("4" (INST? -1)
                  (("4" (INST? -2)
                    (("4" (ASSERT)
                      (("4" (REWRITE "subs_map")
                        (("4" (REWRITE "subs_map")
                          (("4" (REWRITE "subs_map")
                            (("4" (REWRITE "subs_append")
                              (("4" (REWRITE "map_append2")
                                (("4" (REWRITE "flatten_append")
                                  (("4" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKOLEM 1 ("g" "arg"))
      (("5" (PROP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (REWRITE "get_args_not_pair_ac")
              (("1" (REWRITE "get_args_not_pair_ac")
                (("1" (EXPAND "map" 1 2)
                  (("1" (EXPAND "map" 1 2)
                    (("1" (EXPAND "map" 1 1)
                      (("1" (EXPAND "map" 1)
                        (("1" (REWRITE "subs_app")
                          (("1" (REWRITE "get_args_not_pair_ac")
                            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND) NIL NIL))
                NIL)
               ("2" (REWRITE "subs_app") (("2" (GRIND) NIL NIL)) NIL)
               ("3" (REWRITE "subs_app") (("3" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("6" (SKOLEM 1 ("g" "arg"))
      (("6" (PROP)
        (("6" (SKEEP)
          (("6" (CASE "g = f")
            (("1" (REPLACE -1 1)
              (("1" (HIDE -1)
                (("1" (REWRITE "get_args_ac")
                  (("1" (REWRITE "subs_ac")
                    (("1" (REWRITE "get_args_ac") (("1" (INST? -1) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (REWRITE "get_args_not_pair_ac")
              (("1" (REWRITE "get_args_not_pair_ac")
                (("1" (EXPAND "map" 2 2)
                  (("1" (EXPAND "map" 2 2)
                    (("1" (EXPAND "map" 2 1)
                      (("1" (EXPAND "map" 2)
                        (("1" (REWRITE "subs_ac")
                          (("1" (REWRITE "get_args_not_pair_ac")
                            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND) NIL NIL))
                NIL)
               ("2" (REWRITE "subs_ac") (("2" (GRIND) NIL NIL)) NIL)
               ("3" (REWRITE "subs_ac") (("3" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ac_app| ADT-CONSTRUCTOR-DECL "[[ac_symbol, term] -> (ac_app?)]"
     |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|get_args_ac| FORMULA-DECL NIL |term_properties| NIL)
    (|subs_ac| FORMULA-DECL NIL |substitution| NIL)
    (|app| ADT-CONSTRUCTOR-DECL "[[f_symbol, term] -> (app?)]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs_app| FORMULA-DECL NIL |substitution| NIL)
    (|get_args_pair| FORMULA-DECL NIL |term_properties| NIL)
    (|subs_append| FORMULA-DECL NIL |substitution| NIL)
    (|flatten_append| FORMULA-DECL NIL |list_theory| NIL)
    (|map_append2| FORMULA-DECL NIL |map_theory| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|subs_map| FORMULA-DECL NIL |substitution| NIL)
    (|subs_pair| FORMULA-DECL NIL |substitution| NIL)
    (|unit| ADT-CONSTRUCTOR-DECL "(unit?)" |term_adt| NIL)
    (|unit?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|from_min2max| DEF-DECL "list[nat]" |list_theory| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subs_unit| FORMULA-DECL NIL |substitution| NIL)
    (|variable| ADT-CONSTRUCTOR-DECL "[variable -> (var?)]" |term_adt| NIL)
    (|var?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|append_null| FORMULA-DECL NIL |list_props| NIL)
    (|subs_const| FORMULA-DECL NIL |substitution| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|get_args_not_pair_ac| FORMULA-DECL NIL |term_properties| NIL)
    (|const?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|const| ADT-CONSTRUCTOR-DECL "[constant -> (const?)]" |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|map| ADT-DEF-DECL "list[T1]" |list_adt_map| NIL)
    (|flatten| DEF-DECL "list[T]" |list_theory| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL))
   SHOSTAK))
 (|subs_get_args1| 0
  (|subs_get_args1-1| NIL 3807695140
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (HIDE -1)
          (("" (SKEEP)
            (("" (EXPAND "select" 1)
              (("" (LIFT-IF)
                (("" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE 1)
                      (("1" (EXPAND "num_arg" -2)
                        (("1" (ASSERT)
                          (("1" (LEMMA "num_arg_ge1")
                            (("1" (INST? -1)
                              (("1" (LEMMA "num_arg_ge1")
                                (("1" (INST -1 "f" "term2(t)")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (PROP)
                      (("2" (LEMMA "subs_ac")
                        (("2" (LEMMA "term_ac_app_eta")
                          (("2" (INST -1 "t")
                            (("2" (REPLACE -1 1 RL)
                              (("2" (REWRITE "subs_ac")
                                (("2" (REPLACE -1 1)
                                  (("2" (HIDE -2)
                                    (("2" (LEMMA "get_args_ac")
                                      (("2" (REPLACE -4)
                                        (("2" (INST? -1)
                                          (("2" (REPLACE -1 1)
                                            (("2" (HIDE -1)
                                              (("2" (REVEAL -5)
                                                (("2" (INST -1 "ac_arg(t)")
                                                  (("2" (PROP)
                                                    (("1" (INST? -1)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (EXPAND "num_arg" -4)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|term_ac_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|get_args_ac| FORMULA-DECL NIL |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs_ac| FORMULA-DECL NIL |substitution| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL))
   SHOSTAK))
 (|subs_perm_get_args_ge1| 0
  (|subs_perm_get_args_ge1-1| NIL 3807696136
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 ("t"))
      (("" (PROP)
        (("" (HIDE -1)
          (("" (SKEEP)
            (("" (EXPAND "select" 1)
              (("" (LIFT-IF)
                (("" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (EXPAND "delete" 1)
                          (("1" (ASSERT)
                            (("1" (LIFT-IF)
                              (("1" (SPLIT)
                                (("1" (FLATTEN)
                                  (("1" (LEMMA "term_pair_eta")
                                    (("1" (INST? -1)
                                      (("1" (REPLACE -1 1 RL)
                                        (("1" (REWRITE "subs_pair")
                                          (("1" (REPLACE -1 1)
                                            (("1" (REWRITE "get_args_pair")
                                              (("1" (LEMMA "perm?_append")
                                                (("1" (INST? -1)
                                                  (("1" (ASSERT)
                                                    (("1" (HIDE 2)
                                                      (("1" (PROP)
                                                        (("1"
                                                          (LEMMA
                                                           "subs_get_args1")
                                                          (("1" (INST? -1)
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (REWRITE
                                                                   "perm?_ref")
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (REWRITE "perm?_ref")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (REWRITE "subs_pair")
                                    (("2" (REWRITE "get_args_pair")
                                      (("2" (LEMMA "append_assoc[term]")
                                        (("2" (INST? -1)
                                          (("2" (REPLACE -1 2 RL)
                                            (("2" (HIDE -1)
                                              (("2" (LEMMA "term_pair_eta")
                                                (("2" (INST? -1)
                                                  (("2" (REPLACE -1 2 RL)
                                                    (("2" (REWRITE "subs_pair")
                                                      (("2" (REPLACE -1 2)
                                                        (("2"
                                                          (REWRITE
                                                           "get_args_pair")
                                                          (("2"
                                                            (LEMMA
                                                             "perm?_append")
                                                            (("2" (INST? -1)
                                                              (("2" (ASSERT)
                                                                (("2" (HIDE 3)
                                                                  (("2"
                                                                    (REWRITE
                                                                     "perm?_ref")
                                                                    (("2"
                                                                      (REVEAL
                                                                       -5)
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "term1(t)")
                                                                        (("2"
                                                                          (PROP)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "f"
                                                                             "i"
                                                                             "sigma")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "num_arg_ge1")
                                                                                (("1"
                                                                                  (INST?
                                                                                   -1)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (EXPAND "delete" 2 1)
                          (("2" (ASSERT)
                            (("2" (LIFT-IF)
                              (("2" (SPLIT)
                                (("1" (FLATTEN)
                                  (("1" (LEMMA "subs_get_args1")
                                    (("1" (INST? -1)
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -1 1 RL T)
                                          (("1" (LEMMA "term_pair_eta")
                                            (("1" (INST? -1)
                                              (("1" (REPLACE -1 1 RL)
                                                (("1" (REWRITE "subs_pair")
                                                  (("1" (REPLACE -1 1)
                                                    (("1"
                                                      (REWRITE "get_args_pair")
                                                      (("1"
                                                        (LEMMA "perm?_append2")
                                                        (("1" (INST? -1)
                                                          (("1" (ASSERT)
                                                            (("1" (HIDE 2)
                                                              (("1"
                                                                (REWRITE
                                                                 "perm?_ref")
                                                                (("1"
                                                                  (REWRITE
                                                                   "perm?_ref")
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (LEMMA "term_pair_eta")
                                    (("2" (INST -1 "t")
                                      (("2" (REWRITE "subs_pair")
                                        (("2" (REPLACE -1 2 RL)
                                          (("2" (REWRITE "subs_pair")
                                            (("2" (REPLACE -1 2 NIL T)
                                              (("2" (REWRITE "get_args_pair")
                                                (("2" (REWRITE "get_args_pair")
                                                  (("2" (LEMMA "perm?_append3")
                                                    (("2"
                                                      (INST -1
                                                       "get_args(f)(subs(sigma)(term1(t)))"
                                                       "_" "_"
                                                       "get_args(f)(subs(sigma)(term2(t)))")
                                                      (("2" (INST? -1)
                                                        (("2" (ASSERT)
                                                          (("2" (HIDE 3)
                                                            (("2" (REVEAL -5)
                                                              (("2"
                                                                (INST -1
                                                                 "term2(t)")
                                                                (("2" (PROP)
                                                                  (("1"
                                                                    (INST? -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (HIDE
                                                                         2)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "num_arg_ge1")
                                                                          (("1"
                                                                            (INST?
                                                                             -1)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (SPLIT)
                      (("1" (FLATTEN)
                        (("1" (EXPAND "delete" 1)
                          (("1" (ASSERT)
                            (("1" (REWRITE "subs_ac")
                              (("1" (CASE "f = ac_sym(t)")
                                (("1" (REPLACE -1 1 RL T)
                                  (("1" (REWRITE "get_args_ac")
                                    (("1" (LEMMA "term_ac_app_eta")
                                      (("1" (INST? -1)
                                        (("1" (REPLACE -1 1 RL)
                                          (("1" (REWRITE "subs_ac")
                                            (("1" (REPLACE -1 1)
                                              (("1" (REPLACE -3 1)
                                                (("1" (REWRITE "get_args_ac" 1)
                                                  (("1" (REVEAL -3)
                                                    (("1" (INST -1 "ac_arg(t)")
                                                      (("1" (PROP)
                                                        (("1" (INST? -1)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND "num_arg"
                                                                      -4)
                                                              (("1" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|append_assoc| FORMULA-DECL NIL |list_props| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|subs_pair| FORMULA-DECL NIL |substitution| NIL)
    (|get_args_pair| FORMULA-DECL NIL |term_properties| NIL)
    (|subs_get_args1| FORMULA-DECL NIL |substitution| NIL)
    (|perm?_ref| FORMULA-DECL NIL |equality| NIL)
    (|perm?_append| FORMULA-DECL NIL |equality| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|perm?_append3| FORMULA-DECL NIL |equality| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|perm?_append2| FORMULA-DECL NIL |equality| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs_ac| FORMULA-DECL NIL |substitution| NIL)
    (|term_ac_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|get_args_ac| FORMULA-DECL NIL |term_properties| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|perm?| DEF-DECL "bool" |equality| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL) (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL))
   SHOSTAK))
 (|subs_equal?| 0
  (|subs_equal?-1| NIL 3807636584
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (HIDE -1)
            (("" (EXPAND "equal?" -1)
              (("" (LIFT-IF)
                (("" (PROP)
                  (("1" (REPLACE -2 1 NIL RL)
                    (("1" (REWRITE "subs_const")
                      (("1" (LEMMA "term_const_eta")
                        (("1" (INST -1 "t")
                          (("1" (REPLACE -1 1)
                            (("1" (REPLACE -1 1 RL)
                              (("1" (REWRITE "subs_const")
                                (("1" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (REPLACE -2 2)
                    (("2" (LEMMA "term_variable_eta")
                      (("2" (INST? -1)
                        (("2" (REPLACE -1 2)
                          (("2" (REPLACE -1 2 RL)
                            (("2" (REWRITE "equal?_ref") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (REPLACE -2 3)
                    (("3" (REWRITE "subs_unit")
                      (("3" (CASE "t = unit")
                        (("1" (REPLACE -1 3)
                          (("1" (REWRITE "subs_unit")
                            (("1" (REWRITE "equal?_ref") NIL NIL)) NIL))
                          NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (LEMMA "term_pair_eta")
                    (("4" (INST-CP -1 "t")
                      (("4" (INST -1 "s")
                        (("4" (REPLACE -1 4 RL T)
                          (("4" (REPLACE -1 4 RL T)
                            (("4" (REWRITE "subs_pair")
                              (("4" (REWRITE "subs_pair")
                                (("4" (EXPAND "equal?" 4)
                                  (("4" (PROP)
                                    (("1" (REVEAL -4)
                                      (("1" (INST -1 "term1(t)")
                                        (("1" (PROP)
                                          (("1" (INST? -1)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (REVEAL -4)
                                      (("2" (INST -1 "term2(t)")
                                        (("2" (PROP)
                                          (("1" (INST? -1)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("5" (HIDE 1 2 3 4)
                    (("5" (LEMMA "term_app_eta")
                      (("5" (INST -1 "t")
                        (("5" (REPLACE -1 1 RL)
                          (("5" (HIDE -1)
                            (("5" (REWRITE "subs_app")
                              (("5" (LEMMA "term_app_eta")
                                (("5" (INST -1 "s")
                                  (("5" (REPLACE -1 1 RL)
                                    (("5" (REWRITE "subs_app")
                                      (("5" (EXPAND "equal?" 1)
                                        (("5" (ASSERT)
                                          (("5" (REVEAL -3)
                                            (("5" (INST -1 "arg(t)")
                                              (("5" (PROP)
                                                (("1"
                                                  (INST -1 "arg(s)" "sigma")
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (GRIND) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("6" (CASE "ac_app?(t)")
                    (("1" (ASSERT)
                      (("1" (FLATTEN)
                        (("1" (NAME-REPLACE "g" "ac_sym(t)")
                          (("1" (CASE "num_arg(g, t) = num_arg(g, s)")
                            (("1" (HIDE 1 2 3 4 5)
                              (("1" (SKEEP)
                                (("1" (LEMMA "term_ac_app_eta")
                                  (("1" (INST? -1)
                                    (("1" (HIDE -6 -7 -8 -9)
                                      (("1" (REPLACE -5 -1 RL)
                                        (("1" (REPLACE -1 1 RL)
                                          (("1" (HIDE -1)
                                            (("1" (LEMMA "term_ac_app_eta")
                                              (("1" (INST -1 "t")
                                                (("1" (REPLACE -1 1 RL)
                                                  (("1" (REWRITE "subs_ac")
                                                    (("1" (REWRITE "subs_ac")
                                                      (("1" (REVEAL -7)
                                                        (("1" (REPLACE -1 1)
                                                          (("1" (HIDE -1 -2)
                                                            (("1"
                                                              (CASE
                                                                  "equal?(t, s)")
                                                              (("1"
                                                                (LEMMA
                                                                 "perm_args_ac")
                                                                (("1"
                                                                  (INST -1
                                                                   "ac_app(g, subs(sigma)(ac_arg(s)))"
                                                                   "g" "_")
                                                                  (("1"
                                                                    (INST? -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (HIDE
                                                                         2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "are_ac?"
                                                                           1)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "args_subs_ac")
                                                                            (("1"
                                                                              (HIDE
                                                                               -1)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "subs_ac")
                                                                                (("1"
                                                                                  (INST-CP
                                                                                   -1
                                                                                   "ac_arg(t)"
                                                                                   "g"
                                                                                   "sigma")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "ac_arg(s)"
                                                                                     "g"
                                                                                     "sigma")
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1
                                                                                       1
                                                                                       RL)
                                                                                      (("1"
                                                                                        (REPLACE
                                                                                         -2
                                                                                         1
                                                                                         RL)
                                                                                        (("1"
                                                                                          (HIDE
                                                                                           -1
                                                                                           -2)
                                                                                          (("1"
                                                                                            (CASE
                                                                                                "num_arg(g, t) > 1")
                                                                                            (("1"
                                                                                              (REVEAL
                                                                                               -7
                                                                                               -14)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -2
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (HIDE
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (REVEAL
                                                                                                       -9)
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -1
                                                                                                         1
                                                                                                         NIL
                                                                                                         T)
                                                                                                        (("1"
                                                                                                          (LEMMA
                                                                                                           "subs_perm_get_args_ge1")
                                                                                                          (("1"
                                                                                                            (INST?
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "i")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "perm?(append(get_args(g)(subs(sigma)(select(g, t)(i))),
                   get_args(g)(subs(sigma)(delete(g, t)(i)))), get_args(g)(subs(sigma)(s)))")
                                                                                                                  (("1"
                                                                                                                    (LEMMA
                                                                                                                     "perm?_trans")
                                                                                                                    (("1"
                                                                                                                      (INST
                                                                                                                       -1
                                                                                                                       "get_args(g)(subs(sigma)(t))"
                                                                                                                       "_"
                                                                                                                       "_")
                                                                                                                      (("1"
                                                                                                                        (INST?
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (HIDE
                                                                                                                     -1
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (LEMMA
                                                                                                                       "subs_perm_get_args_ge1")
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -1
                                                                                                                         "g"
                                                                                                                         "j"
                                                                                                                         "sigma"
                                                                                                                         "s")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (LEMMA
                                                                                                                             "perm?_sym")
                                                                                                                            (("2"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "get_args(g)(subs(sigma)(s))"
                                                                                                                               "append(get_args(g)(subs(sigma)(select(g, s)(j))),
                   get_args(g)(subs(sigma)(delete(g, s)(j))))")
                                                                                                                              (("2"
                                                                                                                                (ASSERT)
                                                                                                                                (("2"
                                                                                                                                  (HIDE
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (CASE
                                                                                                                                        "perm?(append(get_args(g)(subs(sigma)(select(g, t)(i))),
                   get_args(g)(subs(sigma)(delete(g, t)(i)))), append(get_args(g)(subs(sigma)(select(g, s)(j))),
                   get_args(g)(subs(sigma)(delete(g, s)(j)))))")
                                                                                                                                    (("1"
                                                                                                                                      (HIDE
                                                                                                                                       -11
                                                                                                                                       -10
                                                                                                                                       -9
                                                                                                                                       -8
                                                                                                                                       -7
                                                                                                                                       -6
                                                                                                                                       -5)
                                                                                                                                      (("1"
                                                                                                                                        (LEMMA
                                                                                                                                         "perm?_trans")
                                                                                                                                        (("1"
                                                                                                                                          (INST
                                                                                                                                           -1
                                                                                                                                           "_"
                                                                                                                                           "_"
                                                                                                                                           "get_args(g)(subs(sigma)(s))")
                                                                                                                                          (("1"
                                                                                                                                            (INST?
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (HIDE
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (HIDE
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (LEMMA
                                                                                                                                           "perm?_append")
                                                                                                                                          (("2"
                                                                                                                                            (INST?
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (HIDE
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (PROP)
                                                                                                                                                  (("1"
                                                                                                                                                    (REVEAL
                                                                                                                                                     -23)
                                                                                                                                                    (("1"
                                                                                                                                                      (INST
                                                                                                                                                       -1
                                                                                                                                                       "select(g, t)(i)")
                                                                                                                                                      (("1"
                                                                                                                                                        (HIDE
                                                                                                                                                         -10)
                                                                                                                                                        (("1"
                                                                                                                                                          (PROP)
                                                                                                                                                          (("1"
                                                                                                                                                            (INST
                                                                                                                                                             -1
                                                                                                                                                             "select(g, s)(j)"
                                                                                                                                                             "sigma")
                                                                                                                                                            (("1"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              (("1"
                                                                                                                                                                (HIDE
                                                                                                                                                                 -9)
                                                                                                                                                                (("1"
                                                                                                                                                                  (REWRITE
                                                                                                                                                                   "ac_perm_args2")
                                                                                                                                                                  NIL
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL)
                                                                                                                                                           ("2"
                                                                                                                                                            (REWRITE
                                                                                                                                                             "ac_select_size")
                                                                                                                                                            (("2"
                                                                                                                                                              (EXPAND
                                                                                                                                                               "is_ac_sym?"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (PROPAX)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (REVEAL
                                                                                                                                                     -23)
                                                                                                                                                    (("2"
                                                                                                                                                      (INST
                                                                                                                                                       -1
                                                                                                                                                       "delete(g, t)(i)")
                                                                                                                                                      (("2"
                                                                                                                                                        (PROP)
                                                                                                                                                        (("1"
                                                                                                                                                          (INST
                                                                                                                                                           -1
                                                                                                                                                           "delete(g, s)(j)"
                                                                                                                                                           "sigma")
                                                                                                                                                          (("1"
                                                                                                                                                            (ASSERT)
                                                                                                                                                            (("1"
                                                                                                                                                              (HIDE
                                                                                                                                                               -9
                                                                                                                                                               -10)
                                                                                                                                                              (("1"
                                                                                                                                                                (REWRITE
                                                                                                                                                                 "ac_perm_args2")
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL)
                                                                                                                                                         ("2"
                                                                                                                                                          (LEMMA
                                                                                                                                                           "ac_delete_size")
                                                                                                                                                          (("2"
                                                                                                                                                            (INST?
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              NIL
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (CASE
                                                                                                  "num_arg(g, t) = 1")
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "subs_get_args1")
                                                                                                (("1"
                                                                                                  (INST?
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "i")
                                                                                                    (("1"
                                                                                                      (PROP)
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -1
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (HIDE
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (REVEAL
                                                                                                             -10)
                                                                                                            (("1"
                                                                                                              (REVEAL
                                                                                                               -17)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (HIDE
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (REPLACE
                                                                                                                     -1
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (LEMMA
                                                                                                                       "subs_get_args1")
                                                                                                                      (("1"
                                                                                                                        (INST
                                                                                                                         -1
                                                                                                                         "g"
                                                                                                                         "j"
                                                                                                                         "sigma"
                                                                                                                         "s")
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          (("1"
                                                                                                                            (REVEAL
                                                                                                                             -11)
                                                                                                                            (("1"
                                                                                                                              (REPLACE
                                                                                                                               -1
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -2
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (HIDE
                                                                                                                                   -1
                                                                                                                                   -2
                                                                                                                                   -11)
                                                                                                                                  (("1"
                                                                                                                                    (REVEAL
                                                                                                                                     -20)
                                                                                                                                    (("1"
                                                                                                                                      (INST
                                                                                                                                       -1
                                                                                                                                       "select(g, t)(i)")
                                                                                                                                      (("1"
                                                                                                                                        (PROP)
                                                                                                                                        (("1"
                                                                                                                                          (INST
                                                                                                                                           -1
                                                                                                                                           "select(g, s)(j)"
                                                                                                                                           "sigma")
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("1"
                                                                                                                                              (HIDE
                                                                                                                                               -6)
                                                                                                                                              (("1"
                                                                                                                                                (REWRITE
                                                                                                                                                 "ac_perm_args2")
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (REWRITE
                                                                                                                                           "ac_select_size")
                                                                                                                                          (("2"
                                                                                                                                            (EXPAND
                                                                                                                                             "is_ac_sym?"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (REVEAL
                                                                                                                                                 -19)
                                                                                                                                                (("2"
                                                                                                                                                  (ASSERT)
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (REVEAL
                                                                                                         -9
                                                                                                         -16)
                                                                                                        (("2"
                                                                                                          (REPLACE
                                                                                                           -2
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (REPLACE
                                                                                                             -1
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (PROPAX)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (LEMMA
                                                                                                 "num_arg_ge1")
                                                                                                (("2"
                                                                                                  (INST?
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (HIDE 2)
                                                                (("2"
                                                                  (EXPAND
                                                                   "equal?" 1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REVEAL
                                                                       -3 -4 -5
                                                                       -6 -8)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (INST
                                                                           1
                                                                           "i"
                                                                           "j")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (LEMMA "equal?_num_arg")
                              (("2" (HIDE 2 3 4 5 6 7)
                                (("2" (INST -1 "g" "s" "t")
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "equal?" 1)
                                      (("2" (EXPAND "g")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|a| ADT-ACCESSOR-DECL "[(const?) -> constant]" |term_adt| NIL)
    (|const?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs_const| FORMULA-DECL NIL |substitution| NIL)
    (|term_const_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|term_variable_eta| FORMULA-DECL NIL |term_adt| NIL)
    (V ADT-ACCESSOR-DECL "[(var?) -> variable]" |term_adt| NIL)
    (|variable| ADT-CONSTRUCTOR-DECL "[variable -> (var?)]" |term_adt| NIL)
    (|equal?_ref| FORMULA-DECL NIL |equality| NIL)
    (|var?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|subs_unit| FORMULA-DECL NIL |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|unit?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|unit| ADT-CONSTRUCTOR-DECL "(unit?)" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|subs_pair| FORMULA-DECL NIL |substitution| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|term_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|f_sym| ADT-ACCESSOR-DECL "[(app?) -> f_symbol]" |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|subs_app| FORMULA-DECL NIL |substitution| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (|equal?_num_arg| FORMULA-DECL NIL |equality| NIL)
    (|g| SKOLEM-CONST-DECL "ac_symbol" |substitution| NIL)
    (|term_ac_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|ac_app| ADT-CONSTRUCTOR-DECL "[[ac_symbol, term] -> (ac_app?)]"
     |term_adt| NIL)
    (|are_ac?| CONST-DECL "bool" |term_properties| NIL)
    (|subs_get_args1| FORMULA-DECL NIL |substitution| NIL)
    (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL)
    (|subs_perm_get_args_ge1| FORMULA-DECL NIL |substitution| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|perm?| DEF-DECL "bool" |equality| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|perm?_trans| FORMULA-DECL NIL |equality| NIL)
    (|perm?_append| FORMULA-DECL NIL |equality| NIL)
    (|ac_perm_args2| FORMULA-DECL NIL |equality| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|ac_select_size| FORMULA-DECL NIL |term_properties| NIL)
    (|ac_delete_size| FORMULA-DECL NIL |term_properties| NIL)
    (|perm?_sym| FORMULA-DECL NIL |equality| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|args_subs_ac| FORMULA-DECL NIL |substitution| NIL)
    (|perm_args_ac| FORMULA-DECL NIL |equality| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|subs_ac| FORMULA-DECL NIL |substitution| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|equal?| DEF-DECL "bool" |equality| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL))
   SHOSTAK))
 (|subs_perm?| 0
  (|subs_perm?-2| NIL 3807718806
   ("" (MEASURE-INDUCT "length(args1)" "args1")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (SKEEP)
          (("" (HIDE -1)
            (("" (EXPAND "perm?" -1)
              (("" (PROP)
                (("1" (EXPAND "subs" 1)
                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                 ("2" (SKEEP)
                  (("2" (HIDE 1)
                    (("2" (EXPAND "perm?" 1)
                      (("2" (PROP)
                        (("1" (HIDE -2 -3 1)
                          (("1" (REVEAL 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                         ("2" (INST 2 "i" "j")
                          (("1" (PROP)
                            (("1" (HIDE -2)
                              (("1" (REWRITE "subs_args_nth")
                                (("1" (REWRITE "subs_args_nth")
                                  (("1" (LEMMA "subs_equal?")
                                    (("1" (INST? -1) (("1" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (REWRITE "subs_remove")
                              (("2" (REWRITE "subs_remove")
                                (("2" (REVEAL -1)
                                  (("2" (INST -1 "remove(args1, i)")
                                    (("2" (PROP)
                                      (("1" (INST? -1) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (REWRITE "remove_len")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "j")
                            (("2" (REWRITE "subs_len") NIL NIL)) NIL)
                           ("3" (REWRITE "subs_len") (("3" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|args2| SKOLEM-CONST-DECL "args" |substitution| NIL)
    (|j| SKOLEM-CONST-DECL "below[length(args2)]" |substitution| NIL)
    (|args1| SKOLEM-CONST-DECL "args" |substitution| NIL)
    (|i| SKOLEM-CONST-DECL "below[length(args1)]" |substitution| NIL)
    (|sigma| SKOLEM-CONST-DECL "sub" |substitution| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subs_remove| FORMULA-DECL NIL |substitution| NIL)
    (|remove_len| FORMULA-DECL NIL |list_theory| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|remove| DEF-DECL "list[T]" |list_theory| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|subs_equal?| FORMULA-DECL NIL |substitution| NIL)
    (|subs_args_nth| FORMULA-DECL NIL |substitution| NIL)
    (|subs_len| FORMULA-DECL NIL |substitution| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|perm?| DEF-DECL "bool" |equality| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL))
   NIL)
  (|subs_perm?-1| NIL 3807635528
   ("" (MEASURE-INDUCT "size(args1)" "args1")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (SKEEP)
          (("" (HIDE -1)
            (("" (EXPAND "perm?" -1)
              (("" (PROP)
                (("1" (EXPAND "subs" 1)
                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                 ("2" (SKEEP)
                  (("2" (HIDE 1)
                    (("2" (EXPAND "perm?" 1)
                      (("2" (PROP)
                        (("1" (HIDE -2 -3 1)
                          (("1" (REVEAL 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                         ("2" (INST 2 "i" "j")
                          (("1" (PROP)
                            (("1" (HIDE -2)
                              (("1" (REWRITE "subs_args_nth")
                                (("1" (REWRITE "subs_args_nth")
                                  (("1" (LEMMA "subs_equal?")
                                    (("1" (INST? -1) (("1" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (REWRITE "subs_remove")
                              (("2" (REWRITE "subs_remove")
                                (("2" (REVEAL -1)
                                  (("2" (INST -1 "remove(args1, i)")
                                    (("2" (PROP)
                                      (("1" (INST? -1) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (POSTPONE) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|subs_get_repeat_lst| 0
  (|subs_get_repeat_lst-1| NIL 3807719739
   ("" (INDUCT "i")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "get_repeat_lst" 1)
          (("2" (EXPAND "subs" 1 1)
            (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|subs| DEF-DECL "term" |substitution| NIL)
    (|get_repeat_lst| DEF-DECL "list[T]" |list_theory| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|subs_get_lst_mult| 0
  (|subs_get_lst_mult-1| NIL 3807718990
   ("" (INDUCT "args")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("hd" "tail"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "get_lst_mult" 1 1)
            (("2" (LIFT-IF)
              (("2" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (EXPAND "get_lst_mult" 2 2)
                  (("2" (ASSERT)
                    (("2" (EXPAND "subs" 2 2)
                      (("2" (EXPAND "subs" 2 2)
                        (("2" (EXPAND "subs" 2 3)
                          (("2" (REWRITE "subs_append")
                            (("2" (REWRITE "subs_get_repeat_lst")
                              (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|subs_get_repeat_lst| FORMULA-DECL NIL |substitution| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|get_repeat_lst| DEF-DECL "list[T]" |list_theory| NIL)
    (|subs_append| FORMULA-DECL NIL |substitution| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|get_lst_mult| DEF-DECL "list[T]" |list_theory| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|perm?_get_args_subs| 0
  (|perm?_get_args_subs-1| NIL 3807732580
   ("" (LEMMA "args_subs_ac")
    (("" (SKEEP)
      (("" (INST? -1)
        (("" (REPLACE -1 1 NIL T)
          (("" (LEMMA "args_subs_ac")
            (("" (INST? -1)
              (("" (REPLACE -1 1 NIL T)
                (("" (LEMMA "perm?_map_get_args")
                  (("" (REWRITE "subs_map")
                    (("" (REWRITE "subs_map")
                      (("" (INST? -1)
                        (("" (INST -1 "subs(sigma)(get_args(f)(s))")
                          (("" (ASSERT)
                            (("" (EXPAND "perm?" -1) (("" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|perm?_map_get_args| FORMULA-DECL NIL |equality| NIL)
    (|perm?| CONST-DECL "bool" |equality| NIL)
    (|subs| DEF-DECL "args" |substitution| NIL)
    (|get_args| CONST-DECL "args" |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|subs_map| FORMULA-DECL NIL |substitution| NIL)
    (|sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|basic_sub| TYPE-EQ-DECL NIL |substitution| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|args_subs_ac| FORMULA-DECL NIL |substitution| NIL))
   SHOSTAK)))

