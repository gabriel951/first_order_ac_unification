(|equality|
 (|equal?_TCC1| 0
  (|equal?_TCC1-1| NIL 3805199365 ("" (TCC))
   ((|size| DEF-DECL "nat" |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|equal?_TCC2| 0
  (|equal?_TCC2-1| NIL 3805199365 ("" (TCC))
   ((|size| DEF-DECL "nat" |term_properties| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|equal?_TCC3| 0
  (|equal?_TCC3-1| NIL 3805199365 ("" (TCC))
   ((|size| DEF-DECL "nat" |term_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|equal?_TCC4| 0
  (|equal?_TCC4-1| NIL 3805199365 ("" (TERMINATION-TCC) NIL NIL) NIL SHOSTAK))
 (|equal?_TCC5| 0
  (|equal?_TCC5-1| NIL 3805199365 ("" (TERMINATION-TCC) NIL NIL) NIL SHOSTAK))
 (|equal?_TCC6| 0
  (|equal?_TCC6-1| NIL 3805638096 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|equal?_TCC7| 0
  (|equal?_TCC7-1| NIL 3805638096 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|equal?_TCC8| 0
  (|equal?_TCC8-1| NIL 3805638096 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|equal?_TCC9| 0
  (|equal?_TCC9-1| NIL 3805638096 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|perm?_TCC1| 0
  (|perm?_TCC1-1| NIL 3805821573 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|equal?_len| 0
  (|equal?_len-1| NIL 3805638764
   ("" (MEASURE-INDUCT "length(args1)" "args1")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (HIDE -1)
          (("" (SKEEP)
            (("" (EXPAND "equal?" -1)
              (("" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (REVEAL -1)
                  (("2" (INST -1 "cdr(args1)") (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|equal?_append| 0
  (|equal?_append-1| NIL 3805640100
   ("" (MEASURE-INDUCT "length(args1)" "args1")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "equal?" -2)
            (("" (PROP)
              (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (LEMMA "list_cons_eta[term]")
                (("2" (INST? -1)
                  (("2" (REPLACE -1 3 RL)
                    (("2" (EXPAND "append" 3 1)
                      (("2" (HIDE -1)
                        (("2" (LEMMA "list_cons_eta[term]")
                          (("2" (INST -1 "args2")
                            (("2" (REPLACE -1 3 RL)
                              (("2" (EXPAND "append" 3 2)
                                (("2" (EXPAND "equal?" 3)
                                  (("2" (ASSERT)
                                    (("2" (INST -4 "cdr(args1)")
                                      (("2" (PROP)
                                        (("1"
                                          (INST -1 "cdr(args2)" "args3"
                                           "args4")
                                          (("1" (GRIND) NIL NIL)) NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|list_cons_eta| FORMULA-DECL NIL |list_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|equal?_get_repeat_lst| 0
  (|equal?_get_repeat_lst-1| NIL 3805640704
   ("" (MEASURE-INDUCT "n" "n")
    (("" (SKOLEM 1 "n")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "get_repeat_lst" 1 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (EXPAND "get_repeat_lst" 2 2)
                  (("2" (LIFT-IF)
                    (("2" (ASSERT)
                      (("2" (EXPAND "equal?" 2)
                        (("2" (INST -1 "n-1") (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|get_repeat_lst| DEF-DECL "list[T]" |list_theory| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL))
   SHOSTAK))
 (|equal?_get_lst_mult| 0
  (|equal?_get_lst_mult-1| NIL 3805638096
   ("" (MEASURE-INDUCT "length(args1)" "args1")
    (("" (SKOLEM 1 "args1")
      (("" (PROP)
        (("" (HIDE -1)
          (("" (SKEEP)
            (("" (EXPAND "equal?" -1)
              (("" (PROP)
                (("1" (GRIND) NIL NIL)
                 ("2" (EXPAND "get_lst_mult" 3 1)
                  (("2" (LIFT-IF)
                    (("2" (PROP)
                      (("1" (GRIND) NIL NIL)
                       ("2" (EXPAND "get_lst_mult" 3 2)
                        (("2" (LIFT-IF)
                          (("2" (ASSERT)
                            (("2" (LEMMA "equal?_append")
                              (("2" (INST? -1)
                                (("2" (ASSERT)
                                  (("2" (HIDE 4)
                                    (("2" (PROP)
                                      (("1" (LEMMA "equal?_get_repeat_lst")
                                        (("1" (INST? -1)
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (REVEAL -2)
                                        (("2" (INST -1 "cdr(args1)")
                                          (("2" (PROP)
                                            (("1"
                                              (INST -1 "cdr(args2)"
                                               "cdr(coef)")
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (GRIND) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|get_lst_mult| DEF-DECL "list[T]" |list_theory| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|args| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|get_repeat_lst| DEF-DECL "list[T]" |list_theory| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|equal?_get_repeat_lst| FORMULA-DECL NIL |equality| NIL)
    (|equal?_append| FORMULA-DECL NIL |equality| NIL))
   SHOSTAK))
 (|equal?_sym| 0
  (|equal?_sym-1| NIL 3806002216
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "equal?" -2)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (HIDE -3)
                  (("1" (EXPAND "equal?" 1)
                    (("1" (LIFT-IF)
                      (("1" (ASSERT)
                        (("1" (LEMMA "term_const_eta")
                          (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "equal?" 2)
                  (("2" (LIFT-IF)
                    (("2" (ASSERT)
                      (("2" (HIDE -3)
                        (("2" (LEMMA "term_variable_eta")
                          (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (HIDE -3) (("3" (GRIND) NIL NIL)) NIL)
                 ("4" (HIDE 1 2 3)
                  (("4" (EXPAND "equal?" 1)
                    (("4" (ASSERT)
                      (("4" (PROP)
                        (("1" (INST -5 "term1(t)")
                          (("1" (PROP)
                            (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (INST -5 "term2(t)")
                          (("2" (PROP)
                            (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("5" (EXPAND "equal?" 5)
                  (("5" (ASSERT)
                    (("5" (INST -5 "arg(t)") (("5" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("6" (HIDE 1 2 3 4 5)
                  (("6" (EXPAND "equal?" 1)
                    (("6" (ASSERT)
                      (("6" (PROP)
                        (("1" (ASSERT)
                          (("1" (HIDE-ALL-BUT 1)
                            (("1" (REVEAL 1 2 3 4 5) (("1" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1)
                          (("2" (NAME-REPLACE "g" "ac_sym(t)")
                            (("2" (REPLACE -1 1 RL)
                              (("2" (SKEEP)
                                (("2" (INST 1 "j" "i")
                                  (("2" (ASSERT)
                                    (("2" (PROP)
                                      (("1" (HIDE -3)
                                        (("1" (INST -3 "select(g, t)(i)")
                                          (("1" (PROP)
                                            (("1" (INST? -1)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (POSTPONE) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (INST -4 "delete(g, t)(i)")
                                        (("2" (PROP)
                                          (("1" (INST? -1)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (POSTPONE) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|equal?_ac| 0
  (|equal?_ac-1| NIL 3806332082
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKOLEM 1 "t")
      (("" (PROP)
        (("" (SKEEP)
          (("" (HIDE -1)
            (("" (EXPAND "are_ac?" -1)
              (("" (EXPAND "equal?" -2)
                (("" (ASSERT)
                  (("" (FLATTEN)
                    (("" (ASSERT)
                      (("" (SKEEP -5)
                        (("" (SKOLEM 1 "n")
                          (("" (REPLACE -3 -5 RL)
                            (("" (REPLACE -3 -6 RL)
                              (("" (CASE "i = n")
                                (("1" (INST 1 "j") (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (POSTPONE) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|equal?_trans| 0
  (|equal?_trans-1| NIL 3806326702
   ("" (MEASURE-INDUCT "size(t1)" "t1")
    (("" (SKOLEM 1 "t1")
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "equal?" 1)
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL)
                 ("3" (HIDE -2) (("3" (GRIND) NIL NIL)) NIL)
                 ("4" (GRIND) NIL NIL)
                 ("5" (EXPAND "equal?" -3)
                  (("5" (ASSERT)
                    (("5" (FLATTEN)
                      (("5" (INST -2 "term1(t1)")
                        (("5" (PROP)
                          (("1" (INST -1 "term1(t2)" "term1(t3)")
                            (("1" (EXPAND "equal?" -6)
                              (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("6" (EXPAND "equal?" -3)
                  (("6" (LIFT-IF)
                    (("6" (PROP)
                      (("6" (EXPAND "equal?" -7)
                        (("6" (ASSERT)
                          (("6" (FLATTEN)
                            (("6" (HIDE 1 2 3 5 6 7)
                              (("6" (INST -6 "term2(t1)")
                                (("6" (PROP)
                                  (("1" (INST -1 "term2(t2)" "term2(t3)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("7" (EXPAND "equal?" -3)
                  (("7" (ASSERT)
                    (("7" (FLATTEN)
                      (("7" (HIDE 2 3 4 5) (("7" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("8" (HIDE 2 3 4 5) (("8" (GRIND) NIL NIL)) NIL)
                 ("9" (HIDE 2 3 4 5)
                  (("9" (EXPAND "equal?" -3)
                    (("9" (ASSERT)
                      (("9" (FLATTEN)
                        (("9" (EXPAND "equal?" -6)
                          (("9" (ASSERT)
                            (("9" (FLATTEN)
                              (("9" (INST -2 "arg(t1)")
                                (("9" (PROP)
                                  (("1" (INST -1 "arg(t2)" "arg(t3)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL)
                 ("12" (CASE "ac_app?(t1)")
                  (("1" (HIDE 2 3 4 5 6)
                    (("1" (EXPAND "equal?" -3)
                      (("1" (ASSERT)
                        (("1" (FLATTEN)
                          (("1" (SKEEP)
                            (("1" (LEMMA "equal?_ac")
                              (("1" (NAME-REPLACE "g" "ac_sym(t1)")
                                (("1" (INST -1 "g" "t3" "t2")
                                  (("1" (PROP)
                                    (("1" (INST -1 "j")
                                      (("1" (SKOLEM -1 "n")
                                        (("1" (INST 1 "i" "n")
                                          (("1" (PROP)
                                            (("1" (HIDE -2 -6 -8 -9)
                                              (("1"
                                                (INST -3 "select(g, t1)(i)")
                                                (("1" (PROP)
                                                  (("1"
                                                    (INST -1 "select(g, t2)(j)"
                                                     "select(g, t3)(n)")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2"
                                                    (LEMMA "ac_select_size")
                                                    (("2"
                                                      (INST -1 "g" "i" "t1")
                                                      (("2" (HIDE -2 -5 2)
                                                        (("2" (REVEAL -11)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE -1 -7 -9)
                                              (("2"
                                                (INST -3 "delete(g, t1)(i)")
                                                (("2" (PROP)
                                                  (("1"
                                                    (INST -1 "delete(g, t2)(j)"
                                                     "delete(g, t3)(n)")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2"
                                                    (LEMMA "ac_delete_size")
                                                    (("2" (INST? -1)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE 2 -2 -5 -6)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -1 -2 -3 2) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|constant| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|variable| TYPE-EQ-DECL NIL |term_properties| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|size| DEF-DECL "nat" |term_properties| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|select| DEF-DECL "term" |term_properties| NIL)
    (|num_arg| DEF-DECL "nat" |term_properties| NIL)
    (|delete| DEF-DECL "term" |term_properties| NIL)
    (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|ac_select_size| FORMULA-DECL NIL |term_properties| NIL)
    (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL)
    (|ac_delete_size| FORMULA-DECL NIL |term_properties| NIL)
    (|are_ac?| CONST-DECL "bool" |term_properties| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|equal?_ac| FORMULA-DECL NIL |equality| NIL))
   SHOSTAK))
 (|perm?_sym| 0
  (|perm?_sym-1| NIL 3805994948
   ("" (MEASURE-INDUCT "length(args1)" "args1")
    (("" (SKOLEM 1 ("args1"))
      (("" (PROP)
        (("" (SKEEP)
          (("" (EXPAND "perm?" 1)
            (("" (PROP)
              (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (EXPAND "perm?" -2)
                (("2" (ASSERT)
                  (("2" (PROP)
                    (("2" (SKEEP)
                      (("2" (INST -3 "remove(args1, 1+i)")
                        (("2" (PROP)
                          (("1" (INST -1 "remove(args2, 1+j)")
                            (("1" (ASSERT)
                              (("1" (HIDE -3)
                                (("1" (EXPAND "perm?" -1)
                                  (("1" (PROP)
                                    (("1"
                                      (CASE
                                          "args1 = cons(car(args1), null) AND args2 = cons(car(args2), null)")
                                      (("1" (INST 3 "0" "0")
                                        (("1" (PROP)
                                          (("1" (CASE "i = 0 AND j = 0")
                                            (("1" (ASSERT)
                                              (("1" (HIDE -2 -3 -4 -5 2 3)
                                                (("1" (PROP)
                                                  (("1" (REPLACE -1 -3)
                                                    (("1" (REPLACE -2 -3)
                                                      (("1" (POSTPONE) NIL
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (POSTPONE) NIL NIL))
                                            NIL)
                                           ("2" (POSTPONE) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("2" (POSTPONE) NIL NIL))
                                      NIL)
                                     ("2" (SKOLEM -1 ("j1" "i1"))
                                      (("2" (CASE "j1 < j AND i1 < i")
                                        (("1" (INST 4 "j1" "i1")
                                          (("1" (FLATTEN)
                                            (("1" (PROP)
                                              (("1" (POSTPONE) NIL NIL)
                                               ("2" (POSTPONE) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (POSTPONE) NIL NIL)
                                           ("3" (POSTPONE) NIL NIL))
                                          NIL)
                                         ("2" (POSTPONE) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (POSTPONE) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|perm?_trans| 0
  (|perm?_trans-1| NIL 3805821573
   ("" (SKEEP)
    (("" (EXPAND "perm?" 1)
      (("" (PROP)
        (("1" (EXPAND "perm?" -2)
          (("1" (ASSERT)
            (("1" (EXPAND "perm?" -3) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (EXPAND "perm?" -1)
          (("2" (ASSERT) (("2" (SKEEP) (("2" (POSTPONE) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

