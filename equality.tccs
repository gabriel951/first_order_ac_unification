%% TCCs associated with theory equality
%% This file was automatically generated by PVS, please **do not modify** by hand.
equality_TCCS: THEORY BEGIN

	% Termination TCC generated (at line 34, column 28) for
	% equal?(t1, term1(s))
	  % untried
	equal?_TCC1: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          s: term[constant, variable, f_symbol, ac_symbol],
	          t1, t2: term[constant, variable, f_symbol, ac_symbol]):
	    t = pair(t1, t2) AND pair?(s) IMPLIES size(t1) < size(t)
	
	% Termination TCC generated (at line 34, column 53) for
	% equal?(t2, term2(s))
	  % untried
	equal?_TCC2: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          v:
	            [{z:
	                [term[constant, variable, f_symbol, ac_symbol],
	                 term[constant, variable, f_symbol, ac_symbol]] |
	                size(z`1) < size(t)} ->
	               bool],
	          s: term[constant, variable, f_symbol, ac_symbol],
	          t1, t2: term[constant, variable, f_symbol, ac_symbol]):
	    t = pair(t1, t2) AND pair?(s) AND v(t1, term1(s)) IMPLIES
	     size(t2) < size(t)
	
	% Termination TCC generated (at line 36, column 47) for  equal?(arg, arg(s))
	  % untried
	equal?_TCC3: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          s: term[constant, variable, f_symbol, ac_symbol], sym: f_symbol,
	          arg: term[constant, variable, f_symbol, ac_symbol]):
	    t = app(sym, arg) AND app?(s) AND sym = f_sym(s) IMPLIES
	     size(arg) < size(t)
	
	% Termination TCC generated (at line 43, column 4) for
	% equal?(select(sym, t)(i), select(sym, s)(j))
	  % untried
	equal?_TCC4: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          s: term[constant, variable, f_symbol, ac_symbol], sym: ac_symbol,
	          arg: term[constant, variable, f_symbol, ac_symbol], n: nat):
	    t = ac_app(sym, arg) AND
	     n = num_arg(sym, t) AND ac_app?(s) AND sym = ac_sym(s)
	     IMPLIES
	     FORALL (i, j):
	       i > 0 AND i <= n AND j > 0 AND j <= n IMPLIES
	        size(select(sym, t)(i)) < size(t)
	
	% Termination TCC generated (at line 44, column 4) for
	% equal?(delete(sym, t)(i), delete(sym, s)(j))
	  % untried
	equal?_TCC5: OBLIGATION
	FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	          v:
	            [{z:
	                [term[constant, variable, f_symbol, ac_symbol],
	                 term[constant, variable, f_symbol, ac_symbol]] |
	                size(z`1) < size(t)} ->
	               bool],
	          s: term[constant, variable, f_symbol, ac_symbol], sym: ac_symbol,
	          arg: term[constant, variable, f_symbol, ac_symbol], n: nat):
	    t = ac_app(sym, arg) AND
	     n = num_arg(sym, t) AND ac_app?(s) AND sym = ac_sym(s)
	     IMPLIES
	     FORALL (i, j):
	            (i > 0) AND (i <= n) AND (j > 0) AND (j <= n)
	        AND v(select(sym, t)(i), select(sym, s)(j))
	        IMPLIES size(delete(sym, t)(i)) < size(t)
	
	% Subtype TCC generated (at line 52, column 37) for  args2
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % untried
	equal?_TCC6: OBLIGATION
	FORALL (args1: args, args2: args):
	    NOT null?(args1) AND NOT null?(args2) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol]):
	       t = car(args1) IMPLIES
	        cons?[term[constant, variable, f_symbol, ac_symbol]](args2)
	
	% Subtype TCC generated (at line 53, column 34) for  args1
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % untried
	equal?_TCC7: OBLIGATION
	FORALL (args1: args, args2: args):
	    NOT null?(args1) AND NOT null?(args2) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	             s: term[constant, variable, f_symbol, ac_symbol]):
	       t = car(args1) AND s = car(args2) AND equal?(t, s) IMPLIES
	        cons?[term[constant, variable, f_symbol, ac_symbol]](args1)
	
	% Termination TCC generated (at line 53, column 23) for
	% equal?(cdr(args1), cdr(args2))
	  % untried
	equal?_TCC8: OBLIGATION
	FORALL (args1: args, args2: args):
	    NOT null?(args1) AND NOT null?(args2) IMPLIES
	     FORALL (t: term[constant, variable, f_symbol, ac_symbol],
	             s: term[constant, variable, f_symbol, ac_symbol]):
	       t = car(args1) AND s = car(args2) AND equal?(t, s) IMPLIES
	        <<[term[constant, variable, f_symbol, ac_symbol]]
	            (cdr[term[constant, variable, f_symbol, ac_symbol]](args1), args1)
	
	% Subtype TCC generated (at line 52, column 21) for  args1
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % untried
	equal?_TCC9: OBLIGATION
	FORALL (args1: args, args2: args):
	    NOT null?(args1) AND NOT null?(args2) IMPLIES
	     cons?[term[constant, variable, f_symbol, ac_symbol]](args1)
	
	% The subtype TCC (at line 53, column 46) in decl nil for
	% term generated from equal?  args2
	% expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	% Termination TCC generated (at line 63, column 2) for
	% perm?(remove(args1, i), remove(args2, j))
	  % untried
	perm?_TCC1: OBLIGATION
	FORALL (args1: args, args2: args):
	    NOT null?(args1) IMPLIES
	     FORALL (i:
	               below[length[term[constant, variable, f_symbol, ac_symbol]]
	                         (args1)],
	             j:
	               below[length[term[constant, variable, f_symbol, ac_symbol]]
	                         (args2)]):
	       equal?(nth(args1, i), nth(args2, j)) IMPLIES
	        length[term[constant, variable, f_symbol, ac_symbol]]
	            (remove[term[constant, variable, f_symbol, ac_symbol]](args1, i))
	         < length[term[constant, variable, f_symbol, ac_symbol]](args1)
	
	% The subtype TCC (at line 53, column 46) in decl nil for
	 % term generated from equal?  args2
	    % expected type  (cons?[term[constant, variable, f_symbol, ac_symbol]])
	  % is subsumed by equal?_TCC6
	
	% Subtype TCC generated (at line 154, column 54) for  equal?
	% expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % untried
	perm?_equiv_same_count?_TCC1: OBLIGATION
	equivalence?[term[constant, variable, f_symbol, ac_symbol]](equal?)
	
	% Subtype TCC generated (at line 161, column 23) for  ind1
	% expected type  below[length
	%           [term[constant,
	%                 variable,
	%                 f_symbol,
	%                 ac_symbol]]
	%           (args1)]
	  % untried
	perm?_get_common_TCC1: OBLIGATION
	FORALL (args1, args2: args, t: term[constant, variable, f_symbol, ac_symbol],
	          bool1: bool, ind1: nat):
	    bool1 = pos?(t, args1, equal?)`1 AND ind1 = pos?(t, args1, equal?)`2
	     IMPLIES
	     FORALL (bool2: bool, ind2: nat):
	       (bool2 = pos?(t, args2, equal?)`1 AND ind2 = pos?(t, args2, equal?)`2)
	        AND bool1 AND bool2
	        IMPLIES
	        ind1 < length[term[constant, variable, f_symbol, ac_symbol]](args1)
	
	% The subtype TCC (at line 157, column 39) in decl nil for
	 % term generated from perm?_get_common  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 158, column 39) in decl nil for
	 % term generated from perm?_get_common  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 160, column 35) in decl nil for
	 % term generated from perm?_get_common  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 161, column 83) in decl nil for
	 % term generated from perm?_get_common  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 164, column 35) in decl nil for
	 % term generated from perm?_get_common_sym  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 164, column 69) in decl nil for
	 % term generated from perm?_get_common_sym  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 167, column 52) in decl nil for
	 % term generated from perm?_remove_common_get_common  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 167, column 86) in decl nil for
	 % term generated from perm?_remove_common_get_common  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 170, column 62) in decl nil for
	 % term generated from perm?_get_lst_mult_count_elem  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 204, column 17) in decl nil for
	 % term generated from equal_map_count_get_args  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 204, column 66) in decl nil for
	 % term generated from equal_map_count_get_args  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 208, column 40) in decl nil for
	 % term generated from count_get_args_remove_aux  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 209, column 57) in decl nil for
	 % term generated from count_get_args_remove_aux  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 210, column 46) in decl nil for
	 % term generated from count_get_args_remove_aux  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 214, column 70) in decl nil for
	 % term generated from count_get_args_remove  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1
	% The subtype TCC (at line 215, column 53) in decl nil for
	 % term generated from count_get_args_remove  equal?
	    % expected type  equiv[term[constant, variable, f_symbol, ac_symbol]]
	  % is subsumed by perm?_equiv_same_count?_TCC1

END equality_TCCS