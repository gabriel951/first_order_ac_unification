("list" |list_theory| |cartesian_product_aux_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |cartesian_product_aux_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |cartesian_product_aux_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |cartesian_product_TCC1| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |cartesian_product_TCC2| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |flatten_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |flatten_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |flatten_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |nat_upto_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |nat_upto_TCC2| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |nat_upto_TCC3| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |increment_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |increment_TCC2| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |increment_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |increment_TCC5| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |increment_TCC6| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |count_elem_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |count_elem_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |cartesian_product_aux_TCC1| "" (TCC))("list" |list_theory| |cartesian_product_aux_TCC2| "" (TCC))("list" |list_theory| |cartesian_product_aux_TCC3| "" (TCC))("list" |list_theory| |cartesian_product_TCC1| "" (TCC))("list" |list_theory| |cartesian_product_TCC2| "" (TCC))("list" |list_theory| |flatten_TCC1| "" (TCC))("list" |list_theory| |flatten_TCC2| "" (TCC))("list" |list_theory| |flatten_TCC3| "" (TCC))("list" |list_theory| |nat_upto_TCC1| "" (TCC))("list" |list_theory| |nat_upto_TCC2| "" (TCC))("list" |list_theory| |nat_upto_TCC3| "" (TCC))("list" |list_theory| |increment_TCC1| "" (TCC))("list" |list_theory| |increment_TCC2| "" (TCC))("list" |list_theory| |increment_TCC3| "" (TCC))("list" |list_theory| |increment_TCC4| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |increment_TCC5| "" (TCC))("list" |list_theory| |increment_TCC6| "" (TCC))("list" |list_theory| |pos?_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |pos?_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |pos?_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |count_elem_TCC1| "" (TCC))("list" |list_theory| |count_elem_TCC2| "" (TCC))("list" |list_theory| |count_elem_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |count_elem_TCC4| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |count_elem_TCC5| "" (SUBTYPE-TCC) NIL NIL)("terms" |term_properties| |num_arg_ac_TCC1| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |num_arg_ac_TCC2| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |num_arg_ac_TCC3| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |count_elem_TCC5| 0 (|count_elem_TCC5-1| NIL 3803368589 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC4| 0 (|count_elem_TCC4-1| NIL 3803368589 NIL ("" (TCC)) NIL ((|pos?| DEF-DECL "[bool, nat]" |list_theory| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC3| 0 (|count_elem_TCC3-1| NIL 3803368589 NIL ("" (TCC)) NIL ((|pos?| DEF-DECL "[bool, nat]" |list_theory| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC3| 0 (|pos?_TCC3-1| NIL 3803368589 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC2| 0 (|pos?_TCC2-1| NIL 3803368589 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC1| 0 (|pos?_TCC1-1| NIL 3803368589 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |increment_TCC6| 0 (|increment_TCC6-1| NIL 3803367839 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC1| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC2| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC3| "" (TERMINATION-TCC) NIL NIL)("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC4| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC3| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC6| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC9| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |dio_solver_TCC1| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |dio_solver_TCC2| "" (TERMINATION-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC9| 0 (|find_vectors_TCC9-1| NIL 3803482194 NIL ("" (TCC)) NIL ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |find_vectors_TCC8| 0 (|find_vectors_TCC8-1| NIL 3803482194 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |find_vectors_TCC7| 0 (|find_vectors_TCC7-1| NIL 3803482194 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |get_multiplicity_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |get_multiplicity_TCC2| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |get_multiplicity_TCC3| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |select_args_TCC1| 0 (|select_args_TCC1-1| NIL 3803477476 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |get_multiplicity_TCC1| "" (TCC))("list" |list_theory| |get_multiplicity_TCC2| "" (TCC))("list" |list_theory| |get_multiplicity_TCC3| "" (TCC))("list" |list_theory| |increment_TCC4| "" (TCC))("list" |list_theory| |select_args_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |select_args_TCC2| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |select_args_TCC3| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |select_args_TCC5| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |select_args_TCC6| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |select_args_TCC7| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |select_args_TCC7| 0 (|select_args_TCC7-1| NIL 3803487042 NIL ("" (TCC)) NIL ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC6| 0 (|select_args_TCC6-1| NIL 3803487042 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC5| 0 (|select_args_TCC5-1| NIL 3803487042 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC4| 0 (|select_args_TCC4-1| NIL 3803487042 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |select_args_TCC3| 0 (|select_args_TCC3-1| NIL 3803487042 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC2| 0 (|select_args_TCC2-1| NIL 3803487042 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC1| "" (TCC))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC2| "" (TCC))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC3| "" (TCC))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC4| "" (TCC))("diophantine" |diophantine| |dio_solver_TCC1| "" (TCC))("diophantine" |diophantine| |dio_solver_TCC2| "" (TCC))("list" |list_theory| |select_args_TCC7| 0 (|select_args_TCC7-1| NIL 3803487042 ("" (TCC)) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_args_TCC6| 0 (|select_args_TCC6-1| NIL 3803487042 ("" (TCC)) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_args_TCC5| 0 (|select_args_TCC5-1| NIL 3803487042 ("" (TCC)) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_args_TCC4| 0 (|select_args_TCC4-1| NIL 3803487042 ("" (SUBTYPE-TCC) NIL NIL) NIL SHOSTAK))("list" |list_theory| |select_args_TCC3| 0 (|select_args_TCC3-1| NIL 3803487042 ("" (TCC)) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("list" |list_theory| |select_args_TCC2| 0 (|select_args_TCC2-1| NIL 3803487042 ("" (TCC)) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC4| 0 (|construct_input_lst_find_vectors_TCC4-1| NIL 3803482173 NIL ("" (TCC)) NIL ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC3| 0 (|construct_input_lst_find_vectors_TCC3-1| NIL 3803482173 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC2| 0 (|construct_input_lst_find_vectors_TCC2-1| NIL 3803482173 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |construct_input_lst_find_vectors_TCC1| 0 (|construct_input_lst_find_vectors_TCC1-1| NIL 3803482173 NIL ("" (TCC)) NIL ((|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |get_new_value_lst_TCC1| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |get_new_value_lst_TCC2| "" (TERMINATION-TCC) NIL NIL)("diophantine" |diophantine| |get_lst_dio_matrix_TCC1| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |get_lst_dio_matrix_TCC2| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |get_lst_dio_matrix_TCC3| "" (TERMINATION-TCC) NIL NIL)("diophantine" |diophantine| |get_lst_dio_matrix_TCC4| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC1| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC2| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC3| "" (TCC))("diophantine" |diophantine| |find_vectors_TCC4| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC6| "" (TCC))("diophantine" |diophantine| |get_lst_dio_matrix_TCC4| 0 (|get_lst_dio_matrix_TCC4-1| NIL 3803893135 NIL ("" (TCC)) NIL ((|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |get_lst_dio_matrix_TCC3| 0 (|get_lst_dio_matrix_TCC3-1| NIL 3803893135 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |get_lst_dio_matrix_TCC2| 0 (|get_lst_dio_matrix_TCC2-1| NIL 3803893135 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|Dio_matrix| TYPE-EQ-DECL NIL |diophantine| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("diophantine" |diophantine| |get_new_value_lst_TCC1| "" (TCC))("diophantine" |diophantine| |get_new_value_lst_TCC2| "" (TCC))("diophantine" |diophantine| |get_lst_dio_matrix_TCC1| "" (TCC))("diophantine" |diophantine| |find_vectors_TCC1| "" (TCC))("diophantine" |diophantine| |find_vectors_TCC2| "" (TCC))("diophantine" |diophantine| |find_vectors_TCC4| "" (TCC))("diophantine" |diophantine| |lcm_TCC2| 0 (|lcm_TCC2-1| NIL 3803893816 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |lcm_TCC2| 0 (|lcm_TCC2-1| NIL 3803914209 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |max_lcm_TCC2| 0 (|max_lcm_TCC2-1| NIL 3803901125 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |max_lcm_TCC1| 0 (|max_lcm_TCC1-1| NIL 3803489466 NIL ("" (SKEEP) (("" (ASSERT) (("" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |find_vectors_TCC6| 0 (|find_vectors_TCC6-1| NIL 3803482194 NIL ("" (TCC)) NIL ((|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |get_lst_dio_matrix_TCC4| 0 (|get_lst_dio_matrix_TCC4-1| NIL 3803920303 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |get_lst_dio_matrix_TCC3| 0 (|get_lst_dio_matrix_TCC3-1| NIL 3803920303 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("diophantine" |diophantine| |get_new_value_lst_pos| 0 (|get_new_value_lst_pos-1| NIL 3803920303 NIL ("" (POSTPONE) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("diophantine" |diophantine| |get_new_value_lst_TCC3| "" (TERMINATION-TCC) NIL NIL)("diophantine" |diophantine| |get_new_value_lst_TCC4| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |get_new_value_lst_TCC5| "" (TERMINATION-TCC) NIL NIL)("diophantine" |diophantine| |get_new_value_lst_TCC6| "" (SUBTYPE-TCC) NIL NIL)("diophantine" |diophantine| |find_vectors_TCC5| "" (SKEEP) (("" (SKEEP) (("" (MEASURE-INDUCT "length(X1_values)" "X1_values" 3) (("" (SKOLEM 1 "X1_values") (("" (FLATTEN) (("" (SKEEP) (("" (CASE "floor(k/a1) = 0") (("1" (REPLACE -1 -3) (("1" (HIDE -2) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "floor(k/a1) > 0") (("1" (HIDE 1) (("1" (INST -2 "nat_upto[nat](floor(k/a1) - 1)") (("1" (POSTPONE) NIL NIL) ("2" (HIDE -2 -3 -4 2 3 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 3 4 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)("list" |list_theory| |nat_upto_TCC3| 0 (|nat_upto_TCC3-1| NIL 3803367839 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |nat_upto_TCC2| 0 (|nat_upto_TCC2-1| NIL 3803367839 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |nat_upto_TCC1| 0 (|nat_upto_TCC1-1| NIL 3803367839 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |from_min2max_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |get_repeat_lst_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |get_repeat_lst_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |select_greater_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |select_greater_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |select_greater_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |select_greater_TCC4| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |select_greater_TCC5| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |all_lsts_length?_TCC1| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |from_min2max_TCC2| "" (TCC))("list" |list_theory| |get_repeat_lst_TCC1| "" (TCC))("list" |list_theory| |get_repeat_lst_TCC2| "" (TCC))("list" |list_theory| |select_greater_TCC1| "" (TCC))("list" |list_theory| |select_greater_TCC2| "" (TCC))("list" |list_theory| |select_greater_TCC3| "" (TCC))("list" |list_theory| |select_greater_TCC4| "" (TCC))("list" |list_theory| |select_greater_TCC5| "" (TCC))("list" |list_theory| |all_lsts_length?_TCC1| "" (TCC))("list" |list_theory| |select_args_TCC1| "" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -6 3) (("" (TYPEPRED " v(cdr(lst1), cdr(coef1), lst2, coef2)`2") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)("list" |list_theory| |put_in_head_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |put_in_head_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |put_in_head_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |all_lsts_length?_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |get_all_sublists_TCC1| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |count_TCC1| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |count_TCC1| 0 (|count_TCC1-1| NIL 3804626428 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL NIL NIL NIL))("list" |list_theory| |get_all_sublists_TCC1| 0 (|get_all_sublists_TCC1-1| NIL 3804626428 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL NIL NIL NIL))("list" |list_theory| |all_lsts_length?_TCC2| 0 (|all_lsts_length?_TCC2-1| NIL 3804626428 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC3| 0 (|put_in_head_TCC3-1| NIL 3804626428 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC2| 0 (|put_in_head_TCC2-1| NIL 3804626428 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC1| 0 (|put_in_head_TCC1-1| NIL 3804626428 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC3| 0 (|select_args_TCC3-1| NIL 3804626428 NIL ("" (TCC)) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC2| 0 (|select_args_TCC2-1| NIL 3804626428 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -6 3) (("" (EXPAND "every" 3) (("" (ASSERT) (("" (TYPEPRED "v(cdr(lst1), cdr(coef1), lst2, coef2)`2") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|strict_well_founded?| CONST-DECL "bool" |orders| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL NIL NIL SHOSTAK))("list" |list_theory| |count_elem_TCC5| 0 (|count_elem_TCC5-1| NIL 3804626428 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC4| 0 (|count_elem_TCC4-1| NIL 3804626428 NIL ("" (TCC)) NIL ((|pos?| DEF-DECL "[bool, nat]" |list_theory| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC3| 0 (|count_elem_TCC3-1| NIL 3804626428 NIL ("" (TCC)) NIL ((|pos?| DEF-DECL "[bool, nat]" |list_theory| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |list_adt| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC3| 0 (|pos?_TCC3-1| NIL 3804626428 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC2| 0 (|pos?_TCC2-1| NIL 3804626428 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC1| 0 (|pos?_TCC1-1| NIL 3804626428 NIL ("" (TCC)) NIL NIL NIL NIL NIL NIL))("aux_unification" |aux_unification| |get_nice_submatrices_TCC2| "" (SUBTYPE-TCC) NIL NIL)("aux_unification" |aux_unification| |get_nice_submatrices_TCC3| "" (TERMINATION-TCC) NIL NIL)("aux_unification" |aux_unification| |get_nice_submatrices_TCC4| "" (SUBTYPE-TCC) NIL NIL)("aux_unification" |aux_unification| |apply_elimvar_TCC1| "" (SUBTYPE-TCC) NIL NIL)("aux_unification" |aux_unification| |apply_elimvar_TCC2| "" (TERMINATION-TCC) NIL NIL)("aux_unification" |aux_unification| |apply_elimvar_TCC3| "" (SUBTYPE-TCC) NIL NIL)("aux_unification" |aux_unification| |construct_input_lst_TCC1| "" (SUBTYPE-TCC) NIL NIL)("aux_unification" |aux_unification| |construct_input_lst_TCC2| "" (TERMINATION-TCC) NIL NIL)("aux_unification" |aux_unification| |construct_input_lst_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |from_min2max_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |get_col_i_TCC1| "" (SUBTYPE-TCC) NIL NIL)("terms" |term_properties| |num_arg_ac_TCC3| 0 (|num_arg_ac_TCC3-1| NIL 3803369643 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[Term])" |Term_adt| NIL) (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL) (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |Term_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL) (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL) (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("terms" |term_properties| |num_arg_ac_TCC2| 0 (|num_arg_ac_TCC2-1| NIL 3803369643 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[Term])" |Term_adt| NIL) (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL) (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |Term_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL) (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL) (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("terms" |term_properties| |num_arg_ac_TCC1| 0 (|num_arg_ac_TCC1-1| NIL 3803369643 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[Term])" |Term_adt| NIL) (|Variable| TYPE-EQ-DECL NIL |basic_notions| NIL) (|Constant| TYPE-EQ-DECL NIL |basic_notions| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |Term_adt| NIL) (|Term| TYPE-DECL NIL |Term_adt| NIL) (|Ac_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL) (|F_symbol| TYPE-EQ-DECL NIL |basic_notions| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("substitution" |substitution| |Subs_TCC1| 0 (|Subs_TCC1-1| NIL 3804712624 NIL ("" (TERMINATION-TCC) NIL NIL) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL NIL NIL NIL))("substitution" |substitution| |subs_TCC1| "" (TERMINATION-TCC) NIL NIL)("substitution" |substitution| |subs_TCC2| "" (TERMINATION-TCC) NIL NIL)("substitution" |substitution| |subs_TCC3| "" (TERMINATION-TCC) NIL NIL)("substitution" |substitution| |subs_TCC4| "" (TERMINATION-TCC) NIL NIL)("substitution" |substitution| |subs_TCC5| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |size_TCC1| "" (SUBTYPE-TCC) NIL NIL)("terms" |term_properties| |size_TCC2| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |size_TCC3| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |size_TCC4| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |size_TCC5| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |num_arg_TCC1| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |num_arg_TCC2| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |num_arg_TCC3| "" (TERMINATION-TCC) NIL NIL)("terms" |term_properties| |get_term_from_args_TCC1| "" (SUBTYPE-TCC) NIL NIL)("terms" |term_properties| |get_term_from_args_TCC2| "" (SUBTYPE-TCC) NIL NIL)("terms" |term_properties| |get_term_from_args_TCC3| "" (TERMINATION-TCC) NIL NIL)("equality" |equality| |equal?_TCC1| "" (TERMINATION-TCC) NIL NIL)("equality" |equality| |equal?_TCC2| "" (TERMINATION-TCC) NIL NIL)("equality" |equality| |equal?_TCC3| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |equal_lst_nth| 0 (|equal_lst_nth-1| NIL 3805573130 NIL ("" (MEASURE-INDUCT "length(lst1)" "lst1") (("1" (SKOLEM 1 "lst1") (("1" (PROP) (("1" (HIDE -1) (("1" (SKEEP) (("1" (CASE "null?(lst1)") (("1" (GRIND) NIL NIL) ("2" (CASE "lst1 = cons(car(lst1), cdr(lst1))") (("1" (POSTPONE) NIL NIL) ("2" (HIDE 2 3) (("2" (GRIND) (("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |equal_lst_nth_TCC1| 0 (|equal_lst_nth_TCC1-1| NIL 3805573073 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL ((|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (< CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("list" |list_theory| |get_lst_after_n_TCC2| 0 (|get_lst_after_n_TCC2-1| NIL 3805569188 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_after_n_TCC1| 0 (|get_lst_after_n_TCC1-1| NIL 3805569188 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_mult_TCC4| 0 (|get_lst_mult_TCC4-1| NIL 3805577669 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_mult_TCC3| 0 (|get_lst_mult_TCC3-1| NIL 3805577669 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_mult_TCC2| 0 (|get_lst_mult_TCC2-1| NIL 3805577669 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_mult_TCC1| 0 (|get_lst_mult_TCC1-1| NIL 3805577669 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_until_n_TCC4| 0 (|get_lst_until_n_TCC4-1| NIL 3805577669 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_until_n_TCC3| 0 (|get_lst_until_n_TCC3-1| NIL 3805577669 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_until_n_TCC2| 0 (|get_lst_until_n_TCC2-1| NIL 3805577669 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_lst_until_n_TCC1| 0 (|get_lst_until_n_TCC1-1| NIL 3805577669 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |cdr_append_TCC2| 0 (|cdr_append_TCC2-1| NIL 3805618390 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |from_min2max_TCC1| "" (TCC))("list" |list_theory| |get_col_i_TCC1| "" (TCC))("list" |list_theory| |get_lst_after_n_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |get_lst_after_n_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |snd_proj_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |snd_proj_TCC2| "" (TERMINATION-TCC) NIL NIL)("list" |list_theory| |snd_proj_TCC3| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |cdr_append_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |nth_append_TCC2| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |equal_lst_nth_TCC1| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |nth_get_lst_after_n_TCC1| "" (SUBTYPE-TCC) NIL NIL)("terms" |term_properties| |get_ac_from_args_cor| 0 (|get_ac_from_args_cor-1| NIL 3805735173 NIL ("" (MEASURE-INDUCT "length(args)" "args") (("" (SKOLEM 1 "args1") (("" (PROP) (("" (SKEEP) (("" (EXPAND "get_ac_from_args" 1) (("" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |simple_args?_TCC3| 0 (|simple_args?_TCC3-1| NIL 3805735090 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |simple_args?_TCC2| 0 (|simple_args?_TCC2-1| NIL 3805735090 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |simple_args?_TCC1| 0 (|simple_args?_TCC1-1| NIL 3805735090 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |cdr_append_TCC2| 0 (|cdr_append_TCC2-1| NIL 3805812243 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |from_min2max_cdr_TCC1| 0 (|from_min2max_cdr_TCC1-1| NIL 3805814064 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |from_min2max_cdr_TCC1| 0 (|from_min2max_cdr_TCC1-1| NIL 3805814064 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))("aux_unification" |aux_unification| |dio_matrix2ac_sol_correct_TCC2| 0 (|dio_matrix2ac_sol_correct_TCC2-1| NIL 3805915736 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |from_min2max_cdr| 0 (|from_min2max_cdr-1| NIL 3805814064 NIL ("" (POSTPONE) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |delete_ac_num_arg_ge1| 0 (|delete_ac_num_arg_ge1-1| NIL 3806178414 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "delete" 1) (("" (EXPAND "is_ac_sym?" -2) (("" (ASSERT) (("" (LIFT-IF) (("" (FLATTEN) (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|size| DEF-DECL "nat" |term_properties| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|every| ADT-DEF-DECL "boolean" |term_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|delete| DEF-DECL "term" |term_properties| NIL) (|num_arg| DEF-DECL "nat" |term_properties| NIL) (> CONST-DECL "bool" |reals| NIL) (|is_ac_sym?| CONST-DECL "bool" |term_properties| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|string| TYPE-EQ-DECL NIL |strings| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |num_arg_delete2| 0 (|num_arg_delete2-1| NIL 3806350237 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "delete" 1) (("" (LIFT-IF) (("" (PROP) (("1" (GRIND) NIL NIL) ("2" (EXPAND "num_arg" 2 2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -3 "term1(t)") (("2" (PROP) (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL) ("4" (EXPAND "num_arg" 2 3) (("4" (ASSERT) (("4" (INST -2 "term2(t)") (("4" (PROP) (("1" (INST -1 "f" "n - num_arg(f, term1(t))") (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (GRIND) NIL NIL) ("6" (INST -3 "ac_arg(t)") (("6" (GRIND) NIL NIL)) NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL) (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|size| DEF-DECL "nat" |term_properties| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|delete| DEF-DECL "term" |term_properties| NIL) (|num_arg| DEF-DECL "nat" |term_properties| NIL) (|string| TYPE-EQ-DECL NIL |strings| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |select_num_arg1| 0 (|select_num_arg1-1| NIL 3806355872 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "select" 1) (("" (LIFT-IF) (("" (PROP) (("1" (EXPAND "num_arg" -4) (("1" (ASSERT) (("1" (LEMMA "num_arg_ge1") (("1" (INST-CP -1 "f" "term1(t)") (("1" (INST -1 "f" "term2(t)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1 2) (("2" (EXPAND "num_arg" -2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (LEMMA "num_arg_ge1") (("2" (INST-CP -1 "f" "term1(t)") (("2" (INST -1 "f" "term2(t)") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (INST -3 "ac_arg(t)") (("3" (PROP) (("1" (INST -1 "f" "n") (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |not_gt_ind_term?_select_delete| 0 (|not_gt_ind_term?_select_delete-1| NIL 3806400276 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "delete" 2 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE -3) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (REPLACE -2) (("1" (CASE "n = 0") (("1" (EXPAND "gt_ind_term?" 1) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |gt_ind_term?_antisym| 0 (|gt_ind_term?_antisym-1| NIL 3806399529 NIL ("" (SKEEP) (("" (CASE "gt_ind_term?(i+1, n, f, t)") (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) NIL ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|eq_ind_term?| CONST-DECL "bool" |term_properties| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|gt_ind_term?| CONST-DECL "bool" |term_properties| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|string| TYPE-EQ-DECL NIL |strings| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |eq_ind_term?_select_delete| 0 (|eq_ind_term?_select_delete-1| NIL 3806420055 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "delete" 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (ASSERT) (("1" (HIDE -4) (("1" (LIFT-IF) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |gt_ind_term?_select_delete2| 0 (|gt_ind_term?_select_delete2-1| NIL 3806435295 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "delete" 1 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |not_gt_ind_term?_select_delete_suc_TCC1| 0 (|not_gt_ind_term?_select_delete_suc_TCC1-1| NIL 3806588481 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |lt_ind_term?_select_delete| 0 (|lt_ind_term?_select_delete-1| NIL 3806414686 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "delete" 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (HIDE -2) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "select" 1 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL -1) (("1" (INST -1 "term1(t)") (("1" (PROP) (("1" (INST? -1) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_delete_ge1") (("2" (INST -1 "f" "i" "term1(t)") (("2" (ASSERT) (("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST -1 "f" "i" "term1(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_delete_ge1") (("2" (INST -1 "f" "i" "term1(t)") (("2" (ASSERT) (("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE -3 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 1) (("2" (LIFT-IF) (("2" (HIDE -2) (("2" (PROP) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (REVEAL -1) (("2" (INST -1 "term2(t)") (("2" (PROP) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "n - num_arg(f, term1(t))") (("1" (ASSERT) (("1" (HIDE 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE -4 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (INST -3 "ac_arg(t)") (("2" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (EXPAND "select" 2 1) (("1" (ASSERT) (("1" (HIDE 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL) (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|num_arg| DEF-DECL "nat" |term_properties| NIL) (|eq_ind_term?| CONST-DECL "bool" |term_properties| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|size| DEF-DECL "nat" |term_properties| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|delete| DEF-DECL "term" |term_properties| NIL) (|select| DEF-DECL "term" |term_properties| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|lt_ind_term?| CONST-DECL "bool" |term_properties| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|string| TYPE-EQ-DECL NIL |strings| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |not_gt_ind_term?_select_delete_suc| 0 (|not_gt_ind_term?_select_delete_suc-1| NIL 3806532273 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "successor" 2) (("" (LIFT-IF) (("" (PROP) (("1" (POSTPONE) NIL NIL) ("2" (HIDE 1) (("2" (EXPAND "delete" 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (REVEAL 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "num_arg(f, term1(t)) > 1") (("1" (EXPAND "select" 2 1) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "select" 1 2) (("1" (REVEAL -3) (("1" (INST -1 "term1(t)") (("1" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (PROP) (("1" (REVEAL 1) (("1" (EXPAND "successor" -1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (SPLIT) (("1" (FLATTEN) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("terms" |term_properties| |gt_ind_term?_delete_delete_pred| 0 (|gt_ind_term?_delete_delete_pred-1| NIL 3806444994 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (SKEEP) (("" (EXPAND "predecessor" 1) (("" (LIFT-IF) (("" (PROP) (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "delete" 1 2) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 3) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE -6 1 2) (("1" (EXPAND "num_arg" -5) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "num_arg" 1) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (LEMMA "num_arg1_delete") (("1" (INST-CP -1 "f" "1" "term2(t)") (("1" (ASSERT) (("1" (INST -1 "f" "n" "term1(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REPLACE -1 2) (("2" (EXPAND "delete" 2 2) (("2" (EXPAND "num_arg" 2) (("2" (REPLACE -1 2) (("2" (ASSERT) (("2" (EXPAND "num_arg" -4) (("2" (LEMMA "delete_ge_num_arg") (("2" (INST -1 "f" "i-1" "term2(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE -5 1 2 3) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (EXPAND "num_arg" -1 1) (("1" (ASSERT) (("1" (REPLACE -2 -1) (("1" (ASSERT) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST -1 "f" "n" "term1(t)") (("1" (PROP) (("1" (REPLACE -1 -2) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST -1 "f" "n" "term1(t)") (("1" (PROP) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "num_arg" -1 1) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST -1 "f" "n" "term1(t)") (("2" (PROP) (("1" (REPLACE -1 2) (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA "delete_ge_num_arg") (("1" (EXPAND "num_arg" 2 1) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "term2(t)") (("1" (ASSERT) (("1" (PROP) (("1" (REPLACE -1 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "num_arg" -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (HIDE 3) (("2" (INST -1 "f" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (EXPAND "num_arg" -3 1) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (EXPAND "num_arg" -1 1) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 1) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (CASE "num_arg(f, term2(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term2(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 3) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1 3 4 7) (("1" (CASE "num_arg(f, term2(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 -3) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "num_arg" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term2(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "term2(t)") (("2" (PROP) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "n - num_arg(f, term1(t))") (("1" (PROP) (("1" (GRIND) NIL NIL) ("2" (HIDE 2 3 4 5 6 7 8 9) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 2) (("1" (EXPAND "num_arg" -1) (("1" (EXPAND "delete" 1 1) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST? -1) (("2" (EXPAND "num_arg" 2) (("2" (ASSERT) (("2" (CASE "num_arg(f, ac_arg(t)) > 1") (("1" (ASSERT) (("1" (REPLACE -2 -3) (("1" (HIDE -2) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (EXPAND "num_arg" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "ac_arg(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (EXPAND "delete" 2 3) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE 1) (("1" (CASE "num_arg(f, t) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (EXPAND "num_arg" -2) (("1" (ASSERT) (("1" (EXPAND "num_arg" -3) (("1" (REPLACE -1 -3) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (EXPAND "num_arg" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "t") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -1) (("2" (INST -1 "ac_arg(t)") (("2" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (PROP) (("1" (EXPAND "predecessor" -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2 3 4 5 6 7) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (EXPAND "delete" 2 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1) (("3" (EXPAND "delete" 2 2) (("3" (LIFT-IF) (("3" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 3) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 3) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (CASE "num_arg(f, term1(t)) > 1") (("1" (EXPAND "delete" 1 1) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (PROP) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST -1 "f" "i" "term1(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST -1 "f" "n" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (CASE "num_arg(f, term1(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 -3 NIL T) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST -1 "f" "i" "term1(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "term1(t)") (("2" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (PROP) (("1" (EXPAND "predecessor" -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (CASE "num_arg(f, term1(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (CASE "num_arg(f, term1(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST -1 "f" "n" "term1(t)") (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 7) (("2" (SPLIT) (("1" (FLATTEN) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 4) (("2" (EXPAND "delete" 2 4) (("2" (CASE "num_arg(f, term1(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 1) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (CASE "num_arg(f, term2(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 3) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (CASE "num_arg(f, term2(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 -3) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 4 9) (("2" (REVEAL -1) (("2" (INST -1 "term2(t)") (("2" (PROP) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "n - num_arg(f, term1(t))") (("1" (PROP) (("1" (EXPAND "predecessor" -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "delete" 1 1) (("1" (EXPAND "delete" 1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 4) (("2" (ASSERT) (("2" (EXPAND "delete" 2 1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (PROP) (("1" (EXPAND "delete" 1 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (CASE "num_arg(f, t) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (EXPAND "num_arg" -2) (("1" (ASSERT) (("1" (EXPAND "num_arg" 1) (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "num_arg" -2) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 3) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (EXPAND "num_arg") (("1" (CASE "num_arg(f, ac_arg(t)) > 1") (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) (("1" (REPLACE -1 -3) (("1" (HIDE -1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1) (("2" (INST -1 "ac_arg(t)") (("2" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (PROP) (("1" (EXPAND "predecessor" -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "delete" 2 1) (("2" (EXPAND "delete" 2 2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|string| TYPE-EQ-DECL NIL |strings| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|gt_ind_term?| CONST-DECL "bool" |term_properties| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|delete| DEF-DECL "term" |term_properties| NIL) (|predecessor| CONST-DECL "nat" |term_properties| NIL) (|num_arg| DEF-DECL "nat" |term_properties| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|size| DEF-DECL "nat" |term_properties| NIL) (< CONST-DECL "bool" |reals| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|eq_ind_term?| CONST-DECL "bool" |term_properties| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|delete_ge_num_arg| FORMULA-DECL NIL |term_properties| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|num_arg1_delete| FORMULA-DECL NIL |term_properties| NIL) (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL) (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (> CONST-DECL "bool" |reals| NIL) (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |gt_ind_term?_select_delete_pred| 0 (|gt_ind_term?_select_delete_pred-1| NIL 3806435376 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "delete" 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE -4 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "predecessor" 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "num_arg" 1 1) (("1" (REPLACE -2 1) (("1" (ASSERT) (("1" (LEMMA "select_ge_num_arg") (("1" (INST -1 "f" "i-1" "term2(t)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "num_arg" 1 1) (("1" (REVEAL -1) (("1" (INST -1 "term1(t)") (("1" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (PROP) (("1" (CASE "predecessor(i, num_arg(f, term1(t))) = predecessor(i, num_arg(f, term1(t)) + num_arg(f, term2(t)))") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -6 2 3) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST -1 "f" "n" "term1(t)") (("2" (PROP) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "num_arg" -1 1) (("1" (ASSERT) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST -1 "f" "term1(t)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (LEMMA "num_arg_delete_ge1") (("1" (INST? -1) (("1" (PROP) (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("2" (EXPAND "predecessor" 2 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST? -1) (("2" (PROP) (("1" (REPLACE -1 1) (("1" (ASSERT) (("1" (EXPAND "num_arg" 1 1) (("1" (LEMMA "select_ge_num_arg") (("1" (INST -1 "f" "i-num_arg(f, term1(t))" "term2(t)") (("1" (ASSERT) (("1" (ASSERT) (("1" (EXPAND "num_arg" -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 2 3 4) (("2" (LEMMA "num_arg_ge1") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "num_arg_delete_ge1") (("3" (INST -1 "f" "n" "term1(t)") (("3" (ASSERT) (("3" (HIDE -1 -2 -3 2 3 4 5 6) (("3" (LEMMA "num_arg_ge1") (("3" (INST? -1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "predecessor" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -2 -3 1 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "select" 1 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1 2 3 -5) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "predecessor" 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE 1 2 3) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "select" 1 1) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (EXPAND "num_arg" -1 1) (("1" (ASSERT) (("1" (LEMMA "num_arg_ge1") (("1" (INST -1 "f" "term2(t)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (REVEAL -1) (("2" (INST -1 "term2(t)") (("2" (PROP) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "n - num_arg(f, term1(t))") (("1" (PROP) (("1" (EXPAND "predecessor" -1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (EXPAND "num_arg" 2 2) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "num_arg" -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "select" 2 1) (("3" (LIFT-IF) (("3" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (REVEAL -1) (("2" (INST -1 "term2(t)") (("2" (PROP) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "n - num_arg(f, term1(t))") (("1" (PROP) (("1" (EXPAND "predecessor" -1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "num_arg" 3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 1) (("2" (ASSERT) (("2" (EXPAND "select" 2 2) (("2" (REVEAL -1) (("2" (INST -1 "ac_arg(t)") (("2" (PROP) (("1" (INST -1 "f" "i" "n") (("1" (PROP) (("1" (EXPAND "num_arg" 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|select_ge_num_arg| FORMULA-DECL NIL |term_properties| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|eq_ind_term?| CONST-DECL "bool" |term_properties| NIL) (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL) (|num_arg_ge1| FORMULA-DECL NIL |term_properties| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL) (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (< CONST-DECL "bool" |reals| NIL) (|size| DEF-DECL "nat" |term_properties| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|num_arg| DEF-DECL "nat" |term_properties| NIL) (|predecessor| CONST-DECL "nat" |term_properties| NIL) (|delete| DEF-DECL "term" |term_properties| NIL) (|select| DEF-DECL "term" |term_properties| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|gt_ind_term?| CONST-DECL "bool" |term_properties| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|string| TYPE-EQ-DECL NIL |strings| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |gt_ind_term?_select_delete| 0 (|gt_ind_term?_select_delete-1| NIL 3806341394 NIL ("" (MEASURE-INDUCT "size(t)" "t") (("" (SKOLEM 1 "t") (("" (PROP) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "delete" 1) (("" (LIFT-IF) (("" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (SPLIT) (("1" (FLATTEN) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (SPLIT) (("1" (FLATTEN) (("1" (REVEAL -1) (("1" (INST -1 "term1(t)") (("1" (PROP) (("1" (INST? -1) (("1" (ASSERT) (("1" (HIDE -1 -2 -3 -4 2 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LEMMA "num_arg_delete") (("2" (INST? -1) (("2" (LEMMA "num_arg_delete_ge1") (("2" (INST -1 "f" "i" "term1(t)") (("2" (ASSERT) (("2" (REPLACE -1 1) (("2" (HIDE -1 -2 -5 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "select" 1 2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "select" 1 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "select" 2 1) (("2" (ASSERT) (("2" (REVEAL -1) (("2" (INST -1 "term2(t)") (("2" (PROP) (("1" (INST -1 "f" "i - num_arg(f, term1(t))" "n - num_arg(f, term1(t))") (("1" (ASSERT) (("1" (HIDE 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (FLATTEN) (("1" (PROP) (("1" (HIDE 1) (("1" (HIDE -2 -3 1) (("1" (EXPAND "gt_ind_term?" -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "select" 2 2) (("2" (ASSERT) (("2" (EXPAND "select" 2 1) (("2" (REVEAL -1) (("2" (INST -1 "ac_arg(t)") (("2" (PROP) (("1" (INST? -1) (("1" (ASSERT) (("1" (HIDE -1 -2 2 3 4) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|string| TYPE-EQ-DECL NIL |strings| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|gt_ind_term?| CONST-DECL "bool" |term_properties| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|select| DEF-DECL "term" |term_properties| NIL) (|delete| DEF-DECL "term" |term_properties| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|size| DEF-DECL "nat" |term_properties| NIL) (< CONST-DECL "bool" |reals| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|ac_arg| ADT-ACCESSOR-DECL "[(ac_app?) -> term]" |term_adt| NIL) (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term2| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|num_arg_delete_ge1| FORMULA-DECL NIL |term_properties| NIL) (|num_arg_delete| FORMULA-DECL NIL |term_properties| NIL) (|term1| ADT-ACCESSOR-DECL "[(pair?) -> term]" |term_adt| NIL) (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|eq_ind_term?| CONST-DECL "bool" |term_properties| NIL) (|num_arg| DEF-DECL "nat" |term_properties| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |eq_ind_term?_correctness| 0 (|eq_ind_term?_correctness-1| NIL 3806335296 NIL ("" (SKEEP) (("" (EXPAND "eq_ind_term?" -1) (("" (SPLIT) (("1" (PROP) (("1" (LEMMA "select_le1") (("1" (INST-CP -1 "f" "i" "t") (("1" (INST -1 "f" "n" "t") (("1" (LEMMA "select_ge_num_arg") (("1" (INST-CP -1 "f" "i" "t") (("1" (ASSERT) (("1" (INST -1 "f" "n" "t") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "delete_ge_num_arg") (("2" (LEMMA "delete_le1") (("2" (INST-CP -1 "f" "i" "t") (("2" (INST -1 "f" "n" "t") (("2" (INST-CP -3 "f" "i" "t") (("2" (INST -3 "f" "n" "t") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (LEMMA "select_le1") (("3" (INST -1 "f" "i" "t") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (LEMMA "delete_le1") (("4" (INST -1 "f" "i" "t") (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (LEMMA "select_le1") (("5" (INST -1 "f" "n" "t") (("5" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (LEMMA "delete_le1") (("6" (INST -1 "f" "n" "t") (("6" (ASSERT) NIL NIL)) NIL)) NIL) ("7" (LEMMA "select_ge_num_arg") (("7" (INST? -1) (("7" (ASSERT) (("7" (LEMMA "select_ge_num_arg") (("7" (INST -1 "f" "n" "t") (("7" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (LEMMA "delete_ge_num_arg") (("8" (INST-CP -1 "f" "i" "t") (("8" (INST -1 "f" "n" "t") (("8" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((|eq_ind_term?| CONST-DECL "bool" |term_properties| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|string| TYPE-EQ-DECL NIL |strings| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|select_ge_num_arg| FORMULA-DECL NIL |term_properties| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|select_le1| FORMULA-DECL NIL |term_properties| NIL) (|delete_le1| FORMULA-DECL NIL |term_properties| NIL) (|delete_ge_num_arg| FORMULA-DECL NIL |term_properties| NIL)) NIL NIL NIL SHOSTAK))("terms" |term_properties| |predecessor_TCC2| 0 (|predecessor_TCC2-1| NIL 3806435196 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |predecessor_TCC1| 0 (|predecessor_TCC1-1| NIL 3806435196 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pareate_TCC1| 0 (|pareate_TCC1-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_TCC1| 0 (|count_TCC1-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_all_sublists_TCC1| 0 (|get_all_sublists_TCC1-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |all_lsts_length?_TCC2| 0 (|all_lsts_length?_TCC2-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC3| 0 (|put_in_head_TCC3-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC2| 0 (|put_in_head_TCC2-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC1| 0 (|put_in_head_TCC1-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC3| 0 (|select_args_TCC3-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC2| 0 (|select_args_TCC2-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC5| 0 (|count_elem_TCC5-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC4| 0 (|count_elem_TCC4-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC3| 0 (|count_elem_TCC3-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC3| 0 (|pos?_TCC3-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC2| 0 (|pos?_TCC2-1| NIL 3806706133 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC1| 0 (|pos?_TCC1-1| NIL 3806706133 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |equal?_TCC1| "" (TCC))("equality" |equality| |equal?_TCC2| "" (TCC))("equality" |equality| |equal?_TCC3| "" (TCC))("equality" |equality| |equal?_TCC6| "" (SUBTYPE-TCC) NIL NIL)("equality" |equality| |equal?_TCC7| "" (SUBTYPE-TCC) NIL NIL)("equality" |equality| |equal?_TCC8| "" (TERMINATION-TCC) NIL NIL)("equality" |equality| |equal?_TCC9| "" (SUBTYPE-TCC) NIL NIL)("list" |list_theory| |remove_TCC1| 0 (|remove_TCC1-1| NIL 3805907096 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |perm?_args_flatten| 0 (|perm?_args_flatten-1| NIL 3807268572 NIL ("" (SKEEP) (("" (POSTPONE) NIL NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |null_flatten| 0 (|null_flatten-1| NIL 3807291336 NIL ("" (POSTPONE) NIL NIL) NIL NIL NIL NIL NIL SHOSTAK))("list" |list_theory| |pareate_TCC1| 0 (|pareate_TCC1-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_TCC1| 0 (|count_TCC1-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |get_all_sublists_TCC1| 0 (|get_all_sublists_TCC1-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |all_lsts_length?_TCC2| 0 (|all_lsts_length?_TCC2-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC3| 0 (|put_in_head_TCC3-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC2| 0 (|put_in_head_TCC2-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |put_in_head_TCC1| 0 (|put_in_head_TCC1-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC3| 0 (|select_args_TCC3-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |select_args_TCC2| 0 (|select_args_TCC2-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC5| 0 (|count_elem_TCC5-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC4| 0 (|count_elem_TCC4-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |count_elem_TCC3| 0 (|count_elem_TCC3-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC3| 0 (|pos?_TCC3-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC2| 0 (|pos?_TCC2-1| NIL 3807444627 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |pos?_TCC1| 0 (|pos?_TCC1-1| NIL 3807444627 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |perm?_TCC2| 0 (|perm?_TCC2-1| NIL 3807284251 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |perm?_flatten| 0 (|perm?_flatten-1| NIL 3807285701 NIL ("" (MEASURE-INDUCT "size(lst_args1)" "lst_args1") (("" (SKOLEM 1 "lst_args1") (("" (PROP) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "perm?" -1) (("" (PROP) (("1" (GRIND) NIL NIL) ("2" (SKEEP) (("2" (HIDE 1) (("2" (NAME-REPLACE "args1i" "nth(lst_args1, i)") (("2" (NAME-REPLACE "args2j" "nth(lst_args2, j)") (("2" (CASE "null?(args1i)") (("1" (LEMMA "null_flatten_remove_nth") (("1" (INST -1 "i" "lst_args1") (("1" (ASSERT) (("1" (EXPAND "args1i") (("1" (ASSERT) (("1" (REPLACE -1 1 RL) (("1" (HIDE -1) (("1" (EXPAND "perm?" -2) (("1" (LEMMA "null_flatten_remove_nth") (("1" (INST -1 "j" "lst_args2") (("1" (ASSERT) (("1" (EXPAND "args2j") (("1" (ASSERT) (("1" (REPLACE -1 1 RL) (("1" (HIDE -1) (("1" (REVEAL -6) (("1" (HIDE -2 -3) (("1" (INST -1 "remove(lst_args1, i)") (("1" (PROP) (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "perm?" -1) (("2" (ASSERT) (("2" (SKOLEM -1 ("k" "n")) (("2" (EXPAND "perm?" 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (REVEAL -2) (("1" (HIDE -3 -4 -5) (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST 2 "ind_flatten(lst_args1, i, k)" "ind_flatten(lst_args2, j, n)") (("1" (PROP) (("1" (HIDE -2 -3 2 3) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("equality" |equality| |equal?_get_args_nth| 0 (|equal?_get_args_nth-1| NIL 3807470218 NIL ("" (MEASURE-INDUCT "size(t1)" "t1") (("1" (SKOLEM 1 "t1") (("1" (PROP) (("1" (HIDE -1) (("1" (SKEEP) (("1" (EXPAND "equal?" -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (INST 1 "0" "0") (("1" (LEMMA "num_arg_ge1") (("1" (INST-CP -1 "f" "t1") (("1" (INST -1 "f" "t2") (("1" (ASSERT) (("1" (GRIND) (("1" (LEMMA "term_const_eta") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 2 "0" "0") (("2" (LEMMA "num_arg_ge1") (("2" (INST-CP -1 "f" "t1") (("2" (INST -1 "f" "t2") (("2" (ASSERT) (("2" (GRIND) (("2" (LEMMA "term_variable_eta") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (INST 3 "0" "0") (("3" (LEMMA "num_arg_ge1") (("3" (INST-CP -1 "f" "t1") (("3" (INST -1 "f" "t2") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 1 2 3) (("4" (REVEAL -1) (("4" (INST -1 "term1(t1)") (("4" (PROP) (("1" (INST -1 "f" "term1(t2)") (("1" (ASSERT) (("1" (SKEEP) (("1" (INST 1 "i" "j") (("1" (EXPAND "num_arg" 1) (("1" (ASSERT) (("1" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (LEMMA "term_pair_eta") (("3" (INST -1 "t1") (("3" (REPLACE -1 1 RL) (("3" (HIDE -1) (("3" (LEMMA "term_pair_eta") (("3" (INST -1 "t2") (("3" (REPLACE -1 1 RL) (("3" (HIDE -1) (("3" (HIDE -4 -5) (("3" (REWRITE "get_args_pair") (("3" (REWRITE "get_args_pair") (("3" (LEMMA "get_args_len") (("3" (INST? -1) (("3" (REWRITE "nth_append") (("3" (ASSERT) (("3" (LEMMA "get_args_len") (("3" (INST -1 "f" "term1(t2)") (("3" (REWRITE "nth_append") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 1 2 3 4) (("5" (INST 1 "0" "0") (("5" (LEMMA "num_arg_ge1") (("5" (INST-CP -1 "f" "t1") (("5" (INST -1 "f" "t2") (("5" (ASSERT) (("5" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("equality" |equality| |equal?_get_args_nth_TCC2| 0 (|equal?_get_args_nth_TCC2-1| NIL 3807470217 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("equality" |equality| |equal?_get_args_nth_TCC1| 0 (|equal?_get_args_nth_TCC1-1| NIL 3807470217 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory2| |null_flatten_remove| 0 (|null_flatten_remove-1| NIL 3807298650 ("" (INDUCT "lst_of_lsts") (("1" (GRIND) NIL NIL) ("2" (SKOLEM 1 ("hd" "tail")) (("2" (PROP) (("2" (SKEEP) (("2" (EXPAND "flatten" -3) (("2" (REWRITE "null_append") (("2" (FLATTEN) (("2" (EXPAND "remove" 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (EXPAND "flatten" 2) (("2" (REWRITE "null_append") (("2" (ASSERT) (("2" (INST -1 "i-1") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|null_append| FORMULA-DECL NIL |list_theory| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory2| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|remove| DEF-DECL "list[T]" |list_theory| NIL) (|flatten| DEF-DECL "list[T]" |list_theory| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) SHOSTAK))("list" |list_theory2| |null_flatten_remove_nth| 0 (|null_flatten_remove_nth-1| NIL 3807298799 ("" (INDUCT "lst_of_lsts") (("1" (GRIND) NIL NIL) ("2" (SKOLEM 1 ("hd" "tail")) (("2" (PROP) (("2" (SKEEP) (("2" (EXPAND "remove" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "flatten" 1 2) (("1" (EXPAND "nth" -4) (("1" (ASSERT) (("1" (EXPAND "append" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "flatten" 2) (("2" (INST -1 "i-1") (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|append| DEF-DECL "list[T]" |list_props| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (T FORMAL-TYPE-DECL NIL |list_theory2| NIL) (|list_induction| FORMULA-DECL NIL |list_adt| NIL) (|remove| DEF-DECL "list[T]" |list_theory| NIL) (|flatten| DEF-DECL "list[T]" |list_theory| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|nth| DEF-DECL "T" |list_props| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL) (|length| DEF-DECL "nat" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) SHOSTAK))("list" |list_theory| |cdr_append_TCC2| 0 (|cdr_append_TCC2-1| NIL 3807478748 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_TCC5| 0 (|remove_TCC5-1| NIL 3807478748 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_TCC4| 0 (|remove_TCC4-1| NIL 3807478748 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_TCC3| 0 (|remove_TCC3-1| NIL 3807478748 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("list" |list_theory| |remove_TCC2| 0 (|remove_TCC2-1| NIL 3807478748 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("terms" |term_properties| |simple_args?_TCC3| 0 (|simple_args?_TCC3-1| NIL 3805735090 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL ((|args| TYPE-EQ-DECL NIL |term_properties| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("terms" |term_properties| |simple_args?_TCC2| 0 (|simple_args?_TCC2-1| NIL 3805735090 NIL ("" (TERMINATION-TCC) NIL NIL) NIL ((|simple_term?| CONST-DECL "bool" |term_properties| NIL) (|get_args| CONST-DECL "args" |term_properties| NIL) (|variable| TYPE-EQ-DECL NIL |term_properties| NIL) (|constant| TYPE-EQ-DECL NIL |term_properties| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|args| TYPE-EQ-DECL NIL |term_properties| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("terms" |term_properties| |get_term_from_args_TCC3| 0 (|get_term_from_args_TCC3-1| NIL 3804712586 NIL ("" (TCC)) NIL ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL) (|args| TYPE-EQ-DECL NIL |term_properties| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("terms" |term_properties| |get_term_from_args_TCC2| 0 (|get_term_from_args_TCC2-1| NIL 3804712586 NIL ("" (TCC)) NIL ((|args| TYPE-EQ-DECL NIL |term_properties| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|list| TYPE-DECL NIL |list_adt| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|ac_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|f_symbol| TYPE-EQ-DECL NIL |term_properties| NIL) (|char| TYPE-EQ-DECL NIL |strings| NIL) (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL) (|character| TYPE-DECL NIL |character_adt| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL NIL NIL NIL))("equality" |equality| |equal?_delete| 0 (|equal?_delete-1| NIL 3807548090 NIL ("" (MEASURE-INDUCT "size(t1)" "t1") (("" (SKOLEM 1 "t1") (("" (PROP) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "equal?" -1) (("" (LIFT-IF) (("" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (HIDE 1 2 3) (("4" (EXPAND "select" -5 1) (("4" (ASSERT) (("4" (LIFT-IF) (("4" (PROP) (("1" (EXPAND "select" -2 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (GRIND) NIL NIL) ("6" (ASSERT) (("6" (FLATTEN) (("6" (CASE "ac_sym(t1) = f") (("1" (REPLACE -1) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))